#!/usr/bin/env python3
#
# Output of Brainome Daimensions(tm) Table Compiler v0.5.
# Compile time: Feb-12-2020 07:37:20
# Invocation: btc -v phpSSK7iA-1.csv -o phpSSK7iA-1.py
# This source code requires Python 3.
#
"""
System Type:                        Binary classifier
Best-guess accuracy:                54.22%
Model accuracy:                     85.25% (3198/3751 correct)
Improvement over best guess:        31.03% (of possible 45.78%)
Model capacity (MEC):               3557 bits
Generalization ratio:               0.89 bits/bit
Model efficiency:                   0.00%/parameter
System behavior
True Negatives:                     38.42% (1441/3751)
True Positives:                     46.84% (1757/3751)
False Negatives:                    7.38% (277/3751)
False Positives:                    7.36% (276/3751)
True Pos. Rate/Sensitivity/Recall:  0.86
True Neg. Rate/Specificity:         0.84
Precision:                          0.86
F-1 Measure:                        0.86
False Negative Rate/Miss Rate:      0.14
Critical Success Index:             0.76
Model bias:                         0.98% higher chance to pick class 0
"""

# Imports -- Python3 standard library
import sys
import math
import os
import argparse
import tempfile
import csv
import binascii


# Magic constants follow
# I/O buffer for clean. Reduce this constant for low memory devices. 
IOBUF=100000000

# Ugly workaround for large classifiers
sys.setrecursionlimit(1000000)

# Training file given to compiler
TRAINFILE="phpSSK7iA-1.csv"


#Number of output logits
num_output_logits = 1

#Number of attributes
num_attr = 1776

# Preprocessor for CSV files
def clean(filename, outfile, rounding=-1, headerless=False, testfile=False):
    
    clean.classlist=[]
    clean.testfile=testfile
    
    def convert(cell):
        value=str(cell)
        try:
            result=int(value)
            return result
        except:
            try:
                result=float(value)
                if (rounding!=-1):
                    result=int(result*math.pow(10,rounding))/math.pow(10,rounding)
                return result
            except:
                result=(binascii.crc32(value.encode('utf8')) % (1<<32))
                return result

    def convertclassid(cell):
        if (clean.testfile):
            return convert(cell)
        value=str(cell)
        if (value==''):
            raise ValueError("All cells in the target column need to contain a class label.")
        try:
            result=int(value)
            if (not str(result) in clean.classlist):
                clean.classlist=clean.classlist+[str(result)]
            return result
        except:
            try:
                result=float(value)
                if (rounding!=-1):
                    result=int(result*math.pow(10,rounding))/math.pow(10,rounding)
                if (not str(result) in clean.classlist):
                    clean.classlist=clean.classlist+[str(result)]
                return result
            except:
                result=(binascii.crc32(value.encode('utf8')) % (1<<32))
                if (result in clean.classlist):
                    result=clean.classlist.index(result)
                else:
                    clean.classlist=clean.classlist+[result]
                    result=clean.classlist.index(result)
                return result
    rowcount=0
    with open(filename) as csv_file:
        reader = csv.reader(csv_file)
        f=open(outfile,"w+")
        if (headerless==False):
            next(reader,None)
        outbuf=[]
        for row in reader:
            rowcount=rowcount+1
            rowlen=num_attr
            if (not testfile):
                rowlen=rowlen+1    
            if (not len(row)==rowlen):
                raise ValueError("Column count must match trained predictor. Row "+str(rowcount)+" differs.")
            i=0
            for elem in row:
                if(i+1<len(row)):
                    outbuf.append(str(convert(elem)))
                    outbuf.append(',')
                else:
                    classid=str(convertclassid(elem))
                    outbuf.append(classid)
                i=i+1
            if (len(outbuf)<IOBUF):
                outbuf.append("\n")
            else:
                print(''.join(outbuf), file=f)
                outbuf=[]
        print(''.join(outbuf),end="", file=f)
        f.close()

        if (testfile==False and not len(clean.classlist)==2):
            raise ValueError("Number of classes must be 2.")


# Helper (save an import)
def argmax(l):
    f = lambda i: l[i]
    return max(range(len(l)), key=f)

# Classifier
def classify(row):
    x=row
    h_0 = max((((1.7495027 * float(x[0]))+ (0.5629448 * float(x[1]))+ (0.6128487 * float(x[2]))+ (2.120416 * float(x[3]))+ (-0.28444564 * float(x[4]))+ (-0.10210159 * float(x[5]))+ (0.86118364 * float(x[6]))+ (0.73279274 * float(x[7]))+ (0.16506831 * float(x[8]))+ (0.40097326 * float(x[9]))+ (-0.2734418 * float(x[10]))+ (-0.18027239 * float(x[11]))+ (-6.457862 * float(x[12]))+ (-1.245363 * float(x[13]))+ (-0.92768353 * float(x[14]))+ (-1.7082016 * float(x[15]))+ (0.8942044 * float(x[16]))+ (-0.3443523 * float(x[17]))+ (0.9421023 * float(x[18]))+ (-1.7522999 * float(x[19]))+ (0.47415018 * float(x[20]))+ (0.69305944 * float(x[21]))+ (1.5894862 * float(x[22]))+ (-0.81425744 * float(x[23]))+ (-0.1475655 * float(x[24]))+ (-0.8701948 * float(x[25]))+ (2.5344765 * float(x[26]))+ (1.1652906 * float(x[27]))+ (0.39283195 * float(x[28]))+ (-1.434591 * float(x[29]))+ (1.5307591 * float(x[30]))+ (-0.3193256 * float(x[31]))+ (-0.4897822 * float(x[32]))+ (-0.52500904 * float(x[33]))+ (-3.211951 * float(x[34]))+ (4.200734 * float(x[35]))+ (-1.320134 * float(x[36]))+ (0.81350553 * float(x[37]))+ (-1.7641633 * float(x[38]))+ (0.07246312 * float(x[39]))+ (-5.1260867 * float(x[40]))+ (2.8548863 * float(x[41]))+ (-1.6086928 * float(x[42]))+ (2.597205 * float(x[43]))+ (-1.564334 * float(x[44]))+ (-0.4516093 * float(x[45]))+ (-1.7136096 * float(x[46]))+ (0.39901003 * float(x[47]))+ (-0.6550601 * float(x[48]))+ (1.2871474 * float(x[49])))+ ((0.95183843 * float(x[50]))+ (0.556802 * float(x[51]))+ (-2.5359695 * float(x[52]))+ (0.8298774 * float(x[53]))+ (0.47494552 * float(x[54]))+ (0.1129643 * float(x[55]))+ (1.7636013 * float(x[56]))+ (-1.7480631 * float(x[57]))+ (-2.5419185 * float(x[58]))+ (-1.4920529 * float(x[59]))+ (-0.8209969 * float(x[60]))+ (0.5258323 * float(x[61]))+ (-2.625441 * float(x[62]))+ (0.39155015 * float(x[63]))+ (0.8120464 * float(x[64]))+ (0.8942958 * float(x[65]))+ (-2.0066607 * float(x[66]))+ (3.6252718 * float(x[67]))+ (-0.9571157 * float(x[68]))+ (1.3298372 * float(x[69]))+ (1.3950899 * float(x[70]))+ (0.9535222 * float(x[71]))+ (3.4167857 * float(x[72]))+ (-0.45828515 * float(x[73]))+ (0.2411987 * float(x[74]))+ (0.63370883 * float(x[75]))+ (0.76357114 * float(x[76]))+ (-0.28300375 * float(x[77]))+ (-0.09389332 * float(x[78]))+ (1.0201088 * float(x[79]))+ (5.7723417 * float(x[80]))+ (-3.0881915 * float(x[81]))+ (1.8234733 * float(x[82]))+ (1.3549889 * float(x[83]))+ (-2.7339377 * float(x[84]))+ (-0.3071165 * float(x[85]))+ (-2.1169188 * float(x[86]))+ (0.3709172 * float(x[87]))+ (0.60977644 * float(x[88]))+ (-1.0779103 * float(x[89]))+ (-0.5874623 * float(x[90]))+ (0.2655461 * float(x[91]))+ (-3.4428153 * float(x[92]))+ (-0.3771398 * float(x[93]))+ (-6.005167 * float(x[94]))+ (-0.39371213 * float(x[95]))+ (-3.1914954 * float(x[96]))+ (0.19360259 * float(x[97]))+ (-1.3060662 * float(x[98]))+ (0.6624234 * float(x[99])))+ ((-0.376486 * float(x[100]))+ (0.32390845 * float(x[101]))+ (-1.589161 * float(x[102]))+ (1.1023104 * float(x[103]))+ (-1.033627 * float(x[104]))+ (-0.48650995 * float(x[105]))+ (0.2592114 * float(x[106]))+ (-3.5688374 * float(x[107]))+ (-0.697553 * float(x[108]))+ (3.812232 * float(x[109]))+ (0.5206032 * float(x[110]))+ (-2.7089558 * float(x[111]))+ (-1.8126439 * float(x[112]))+ (1.7860996 * float(x[113]))+ (0.5934764 * float(x[114]))+ (-3.8679562 * float(x[115]))+ (-1.2342192 * float(x[116]))+ (-2.2307718 * float(x[117]))+ (-4.332615 * float(x[118]))+ (-0.11713577 * float(x[119]))+ (2.0974495 * float(x[120]))+ (-1.9461863 * float(x[121]))+ (2.5818624 * float(x[122]))+ (4.4608054 * float(x[123]))+ (-1.3472738 * float(x[124]))+ (-1.1251191 * float(x[125]))+ (-3.8325422 * float(x[126]))+ (1.0733125 * float(x[127]))+ (-2.4811313 * float(x[128]))+ (-2.0743227 * float(x[129]))+ (2.2929223 * float(x[130]))+ (4.9505005 * float(x[131]))+ (-0.11227943 * float(x[132]))+ (2.6265645 * float(x[133]))+ (0.4693986 * float(x[134]))+ (-3.6996117 * float(x[135]))+ (-0.9160598 * float(x[136]))+ (-1.3847656 * float(x[137]))+ (-0.36007443 * float(x[138]))+ (-0.21990408 * float(x[139]))+ (0.9327129 * float(x[140]))+ (-0.26768705 * float(x[141]))+ (-1.2801034 * float(x[142]))+ (-0.740511 * float(x[143]))+ (0.71627015 * float(x[144]))+ (1.883071 * float(x[145]))+ (0.7370322 * float(x[146]))+ (2.1784527 * float(x[147]))+ (-4.6202774 * float(x[148]))+ (0.96756834 * float(x[149])))+ ((0.8760095 * float(x[150]))+ (-0.02015406 * float(x[151]))+ (2.423327 * float(x[152]))+ (-2.046342 * float(x[153]))+ (0.2635109 * float(x[154]))+ (1.4548305 * float(x[155]))+ (0.7799314 * float(x[156]))+ (-1.256335 * float(x[157]))+ (-1.5272018 * float(x[158]))+ (-1.6853135 * float(x[159]))+ (-2.1597044 * float(x[160]))+ (1.1151924 * float(x[161]))+ (2.90427 * float(x[162]))+ (4.4650464 * float(x[163]))+ (-2.7559447 * float(x[164]))+ (1.5597948 * float(x[165]))+ (0.034744058 * float(x[166]))+ (1.9324279 * float(x[167]))+ (-2.0039759 * float(x[168]))+ (2.4272535 * float(x[169]))+ (-4.9104314 * float(x[170]))+ (-0.6172947 * float(x[171]))+ (-3.0407999 * float(x[172]))+ (-0.8664715 * float(x[173]))+ (-2.2466817 * float(x[174]))+ (-4.9852433 * float(x[175]))+ (-0.10599664 * float(x[176]))+ (0.6914511 * float(x[177]))+ (-2.5754275 * float(x[178]))+ (-1.2337369 * float(x[179]))+ (0.3165398 * float(x[180]))+ (2.100701 * float(x[181]))+ (-0.040261544 * float(x[182]))+ (0.4356599 * float(x[183]))+ (1.886479 * float(x[184]))+ (-1.2924978 * float(x[185]))+ (0.40195656 * float(x[186]))+ (-3.7402668 * float(x[187]))+ (-0.37902865 * float(x[188]))+ (-0.10956797 * float(x[189]))+ (0.090117045 * float(x[190]))+ (-3.2375183 * float(x[191]))+ (0.6445647 * float(x[192]))+ (0.89973915 * float(x[193]))+ (0.41222623 * float(x[194]))+ (-0.42282107 * float(x[195]))+ (-0.34549204 * float(x[196]))+ (1.3050327 * float(x[197]))+ (0.49368542 * float(x[198]))+ (0.15421793 * float(x[199])))+ ((-0.75638247 * float(x[200]))+ (-1.7034831 * float(x[201]))+ (-1.3442352 * float(x[202]))+ (-1.6747016 * float(x[203]))+ (-0.9607767 * float(x[204]))+ (-3.741717 * float(x[205]))+ (-0.30336422 * float(x[206]))+ (-0.29976216 * float(x[207]))+ (-0.82997066 * float(x[208]))+ (1.2750051 * float(x[209]))+ (-0.3228108 * float(x[210]))+ (0.95227885 * float(x[211]))+ (-1.665619 * float(x[212]))+ (0.05062767 * float(x[213]))+ (1.091832 * float(x[214]))+ (0.05684351 * float(x[215]))+ (-0.32924616 * float(x[216]))+ (-0.4699086 * float(x[217]))+ (2.6440558 * float(x[218]))+ (0.10950118 * float(x[219]))+ (-0.8421534 * float(x[220]))+ (0.21937095 * float(x[221]))+ (-0.35849082 * float(x[222]))+ (1.2460777 * float(x[223]))+ (-1.9780438 * float(x[224]))+ (1.2970653 * float(x[225]))+ (-2.074781 * float(x[226]))+ (-2.8284676 * float(x[227]))+ (-0.015891107 * float(x[228]))+ (-3.831842 * float(x[229]))+ (-6.1803327 * float(x[230]))+ (-4.9785676 * float(x[231]))+ (-3.9648483 * float(x[232]))+ (-7.4977217 * float(x[233]))+ (3.1354806 * float(x[234]))+ (3.0416877 * float(x[235]))+ (0.5903438 * float(x[236]))+ (-0.4447426 * float(x[237]))+ (-2.0432837 * float(x[238]))+ (0.7277112 * float(x[239]))+ (-11.666924 * float(x[240]))+ (-7.3141694 * float(x[241]))+ (7.6560707 * float(x[242]))+ (-0.21225569 * float(x[243]))+ (-0.88215005 * float(x[244]))+ (-0.00085792446 * float(x[245]))+ (1.0079725 * float(x[246]))+ (-1.2725198 * float(x[247]))+ (-2.5321898 * float(x[248]))+ (-0.620115 * float(x[249])))+ ((0.13962604 * float(x[250]))+ (-2.2329273 * float(x[251]))+ (2.1564703 * float(x[252]))+ (7.512193 * float(x[253]))+ (-2.7069438 * float(x[254]))+ (3.8825765 * float(x[255]))+ (-0.2678428 * float(x[256]))+ (-3.3319528 * float(x[257]))+ (-2.0681725 * float(x[258]))+ (-1.6459211 * float(x[259]))+ (-4.4768176 * float(x[260]))+ (-2.6310613 * float(x[261]))+ (0.40991294 * float(x[262]))+ (-6.0169764 * float(x[263]))+ (-8.030806 * float(x[264]))+ (1.1295676 * float(x[265]))+ (-1.3888849 * float(x[266]))+ (0.57713985 * float(x[267]))+ (0.6761348 * float(x[268]))+ (-2.2379673 * float(x[269]))+ (-2.377037 * float(x[270]))+ (-5.9962583 * float(x[271]))+ (-9.5375 * float(x[272]))+ (4.2952485 * float(x[273]))+ (-4.274254 * float(x[274]))+ (-5.4553537 * float(x[275]))+ (2.0510411 * float(x[276]))+ (-1.1155646 * float(x[277]))+ (3.0285125 * float(x[278]))+ (-4.70155 * float(x[279]))+ (0.86418664 * float(x[280]))+ (-2.9035137 * float(x[281]))+ (6.4556346 * float(x[282]))+ (2.4002066 * float(x[283]))+ (-0.11707775 * float(x[284]))+ (-8.6490965 * float(x[285]))+ (-0.06165064 * float(x[286]))+ (-0.8709518 * float(x[287]))+ (-4.3664584 * float(x[288]))+ (-3.616995 * float(x[289]))+ (5.9075503 * float(x[290]))+ (-1.0662601 * float(x[291]))+ (-7.7306175 * float(x[292]))+ (-9.476441 * float(x[293]))+ (-0.39492702 * float(x[294]))+ (1.5344954 * float(x[295]))+ (-3.06195 * float(x[296]))+ (-4.4618077 * float(x[297]))+ (-7.2449956 * float(x[298]))+ (9.970473 * float(x[299])))+ ((1.8791378 * float(x[300]))+ (2.518232 * float(x[301]))+ (1.8373648 * float(x[302]))+ (-6.6299834 * float(x[303]))+ (-5.084894 * float(x[304]))+ (-5.539491 * float(x[305]))+ (-4.41044 * float(x[306]))+ (-6.9210653 * float(x[307]))+ (-2.4139276 * float(x[308]))+ (-0.33169878 * float(x[309]))+ (-3.643094 * float(x[310]))+ (-1.2531123 * float(x[311]))+ (2.768833 * float(x[312]))+ (0.38976243 * float(x[313]))+ (-0.35366824 * float(x[314]))+ (-3.081162 * float(x[315]))+ (-3.3850255 * float(x[316]))+ (1.333971 * float(x[317]))+ (3.4269626 * float(x[318]))+ (-1.6521899 * float(x[319]))+ (6.144887 * float(x[320]))+ (-7.911748 * float(x[321]))+ (-7.3868976 * float(x[322]))+ (0.0014916655 * float(x[323]))+ (1.5151645 * float(x[324]))+ (-3.8682597 * float(x[325]))+ (0.88524425 * float(x[326]))+ (-1.6002842 * float(x[327]))+ (4.1861906 * float(x[328]))+ (6.1165786 * float(x[329]))+ (5.3907228 * float(x[330]))+ (3.4828568 * float(x[331]))+ (0.72002065 * float(x[332]))+ (3.241127 * float(x[333]))+ (0.20814858 * float(x[334]))+ (1.6066318 * float(x[335]))+ (-3.0122712 * float(x[336]))+ (4.13376 * float(x[337]))+ (2.528398 * float(x[338]))+ (-0.030408667 * float(x[339]))+ (0.5913353 * float(x[340]))+ (3.5522633 * float(x[341]))+ (0.24174097 * float(x[342]))+ (-0.5901911 * float(x[343]))+ (-1.0640304 * float(x[344]))+ (-6.174131 * float(x[345]))+ (-1.4515777 * float(x[346]))+ (4.5849895 * float(x[347]))+ (6.615316 * float(x[348]))+ (3.5844853 * float(x[349])))+ ((5.6143975 * float(x[350]))+ (1.4801183 * float(x[351]))+ (3.9180074 * float(x[352]))+ (-2.5758307 * float(x[353]))+ (2.653476 * float(x[354]))+ (1.5026023 * float(x[355]))+ (-3.1989722 * float(x[356]))+ (1.8969693 * float(x[357]))+ (-2.9873543 * float(x[358]))+ (-1.1174136 * float(x[359]))+ (-3.3212938 * float(x[360]))+ (0.8160788 * float(x[361]))+ (-1.9722985 * float(x[362]))+ (5.931318 * float(x[363]))+ (2.5875518 * float(x[364]))+ (5.778288 * float(x[365]))+ (8.212889 * float(x[366]))+ (-0.49981698 * float(x[367]))+ (0.5885238 * float(x[368]))+ (0.13844319 * float(x[369]))+ (-2.2476146 * float(x[370]))+ (2.666222 * float(x[371]))+ (-0.09256285 * float(x[372]))+ (0.23026878 * float(x[373]))+ (-3.2647462 * float(x[374]))+ (-5.0107675 * float(x[375]))+ (-0.010725478 * float(x[376]))+ (0.79396236 * float(x[377]))+ (5.7949758 * float(x[378]))+ (4.757603 * float(x[379]))+ (-2.021444 * float(x[380]))+ (-2.9076843 * float(x[381]))+ (5.71068 * float(x[382]))+ (3.0363624 * float(x[383]))+ (1.2754554 * float(x[384]))+ (3.0298755 * float(x[385]))+ (-2.497689 * float(x[386]))+ (5.6170864 * float(x[387]))+ (0.48077255 * float(x[388]))+ (-4.5684032 * float(x[389]))+ (1.3951473 * float(x[390]))+ (0.7491117 * float(x[391]))+ (-1.8249698 * float(x[392]))+ (-1.6661565 * float(x[393]))+ (1.7809937 * float(x[394]))+ (2.8494585 * float(x[395]))+ (-2.5321088 * float(x[396]))+ (-1.2631775 * float(x[397]))+ (-0.63198763 * float(x[398]))+ (-3.8677769 * float(x[399])))+ ((2.9995096 * float(x[400]))+ (-2.1839807 * float(x[401]))+ (-0.20610945 * float(x[402]))+ (4.7635064 * float(x[403]))+ (-0.13023606 * float(x[404]))+ (1.8207861 * float(x[405]))+ (0.7129005 * float(x[406]))+ (-8.01343 * float(x[407]))+ (-3.823689 * float(x[408]))+ (-1.5259928 * float(x[409]))+ (-7.542398 * float(x[410]))+ (5.118193 * float(x[411]))+ (-0.4746865 * float(x[412]))+ (-7.7165513 * float(x[413]))+ (-2.2507899 * float(x[414]))+ (-0.33406013 * float(x[415]))+ (-1.191055 * float(x[416]))+ (-5.4586363 * float(x[417]))+ (-5.891189 * float(x[418]))+ (1.1176178 * float(x[419]))+ (6.0371885 * float(x[420]))+ (4.137843 * float(x[421]))+ (-7.856943 * float(x[422]))+ (-4.3226423 * float(x[423]))+ (1.2640532 * float(x[424]))+ (2.8510902 * float(x[425]))+ (2.9218872 * float(x[426]))+ (-3.5947542 * float(x[427]))+ (0.6444738 * float(x[428]))+ (-0.84471834 * float(x[429]))+ (0.19870068 * float(x[430]))+ (0.08238606 * float(x[431]))+ (-0.72445667 * float(x[432]))+ (0.30359071 * float(x[433]))+ (-1.266417 * float(x[434]))+ (4.128112 * float(x[435]))+ (-0.6810964 * float(x[436]))+ (-0.5267581 * float(x[437]))+ (-0.5091523 * float(x[438]))+ (0.1156605 * float(x[439]))+ (-1.5301569 * float(x[440]))+ (-2.4088278 * float(x[441]))+ (-0.07224995 * float(x[442]))+ (-2.9504056 * float(x[443]))+ (-1.0232773 * float(x[444]))+ (-1.2167485 * float(x[445]))+ (1.6557107 * float(x[446]))+ (0.76825625 * float(x[447]))+ (1.472921 * float(x[448]))+ (-1.0842932 * float(x[449])))+ ((3.6065316 * float(x[450]))+ (0.6767514 * float(x[451]))+ (-0.38030797 * float(x[452]))+ (-0.09502575 * float(x[453]))+ (1.2339315 * float(x[454]))+ (-5.1696224 * float(x[455]))+ (-1.5145625 * float(x[456]))+ (-2.7697835 * float(x[457]))+ (-0.27330357 * float(x[458]))+ (-1.9609166 * float(x[459]))+ (-0.09436004 * float(x[460]))+ (2.6418371 * float(x[461]))+ (2.5253148 * float(x[462]))+ (-2.4114263 * float(x[463]))+ (1.1232728 * float(x[464]))+ (-1.9774736 * float(x[465]))+ (-4.658434 * float(x[466]))+ (1.4793811 * float(x[467]))+ (1.4024053 * float(x[468]))+ (0.4008235 * float(x[469]))+ (-1.8018664 * float(x[470]))+ (0.23214053 * float(x[471]))+ (0.77522916 * float(x[472]))+ (-0.55008817 * float(x[473]))+ (0.76107204 * float(x[474]))+ (2.749491 * float(x[475]))+ (-1.0519708 * float(x[476]))+ (6.9909453 * float(x[477]))+ (0.71601415 * float(x[478]))+ (-0.5255607 * float(x[479]))+ (-4.959689 * float(x[480]))+ (2.7050622 * float(x[481]))+ (-3.3691378 * float(x[482]))+ (-2.6125798 * float(x[483]))+ (-3.995783 * float(x[484]))+ (0.3198975 * float(x[485]))+ (0.048215654 * float(x[486]))+ (-5.543683 * float(x[487]))+ (-9.874155 * float(x[488]))+ (-7.8953323 * float(x[489]))+ (-3.8038526 * float(x[490]))+ (0.5204084 * float(x[491]))+ (4.883945 * float(x[492]))+ (0.29007003 * float(x[493]))+ (-2.154797 * float(x[494]))+ (-0.0807646 * float(x[495]))+ (-3.8581226 * float(x[496]))+ (4.0497255 * float(x[497]))+ (5.095026 * float(x[498]))+ (-4.137969 * float(x[499])))+ ((1.6367965 * float(x[500]))+ (5.3814282 * float(x[501]))+ (-5.120414 * float(x[502]))+ (0.07078879 * float(x[503]))+ (1.6708095 * float(x[504]))+ (8.13618 * float(x[505]))+ (-4.212465 * float(x[506]))+ (3.0338843 * float(x[507]))+ (-6.8948574 * float(x[508]))+ (0.7591596 * float(x[509]))+ (5.480668 * float(x[510]))+ (1.1024909 * float(x[511]))+ (-0.44120905 * float(x[512]))+ (-0.066140704 * float(x[513]))+ (1.5402328 * float(x[514]))+ (-0.2319955 * float(x[515]))+ (1.5768558 * float(x[516]))+ (2.0120285 * float(x[517]))+ (0.14795896 * float(x[518]))+ (2.3651862 * float(x[519]))+ (-3.9722862 * float(x[520]))+ (-6.3962502 * float(x[521]))+ (1.5530492 * float(x[522]))+ (-1.1744983 * float(x[523]))+ (1.4420158 * float(x[524]))+ (-8.721739 * float(x[525]))+ (-2.7853086 * float(x[526]))+ (1.4553674 * float(x[527]))+ (-4.7818804 * float(x[528]))+ (-3.450316 * float(x[529]))+ (-1.4207063 * float(x[530]))+ (-3.8490496 * float(x[531]))+ (0.62951565 * float(x[532]))+ (0.83959466 * float(x[533]))+ (0.25780347 * float(x[534]))+ (-5.076737 * float(x[535]))+ (5.022711 * float(x[536]))+ (-6.0560055 * float(x[537]))+ (6.839936 * float(x[538]))+ (-0.85344875 * float(x[539]))+ (2.1835663 * float(x[540]))+ (-0.7414911 * float(x[541]))+ (4.927102 * float(x[542]))+ (-1.7813933 * float(x[543]))+ (-5.8879404 * float(x[544]))+ (7.6612015 * float(x[545]))+ (4.105728 * float(x[546]))+ (1.2225513 * float(x[547]))+ (2.6034167 * float(x[548]))+ (5.42954 * float(x[549])))+ ((4.2098126 * float(x[550]))+ (4.7655144 * float(x[551]))+ (3.2213814 * float(x[552]))+ (4.963828 * float(x[553]))+ (-0.510235 * float(x[554]))+ (0.7575416 * float(x[555]))+ (-0.10426862 * float(x[556]))+ (3.1229448 * float(x[557]))+ (4.2932825 * float(x[558]))+ (-1.9458102 * float(x[559]))+ (-2.7475617 * float(x[560]))+ (0.32808688 * float(x[561]))+ (-5.5710034 * float(x[562]))+ (-4.8112383 * float(x[563]))+ (-0.6194282 * float(x[564]))+ (0.2639075 * float(x[565]))+ (1.2626718 * float(x[566]))+ (-0.30648428 * float(x[567]))+ (2.1367505 * float(x[568]))+ (2.5967731 * float(x[569]))+ (0.48503545 * float(x[570]))+ (-6.399923 * float(x[571]))+ (-12.648615 * float(x[572]))+ (6.447854 * float(x[573]))+ (-1.230771 * float(x[574]))+ (-0.97555584 * float(x[575]))+ (1.9022113 * float(x[576]))+ (3.2093346 * float(x[577]))+ (1.0647285 * float(x[578]))+ (4.71436 * float(x[579]))+ (0.6492925 * float(x[580]))+ (1.0632503 * float(x[581]))+ (0.6495192 * float(x[582]))+ (-1.1457877 * float(x[583]))+ (-2.7866352 * float(x[584]))+ (6.103169 * float(x[585]))+ (4.2916756 * float(x[586]))+ (5.512744 * float(x[587]))+ (6.233589 * float(x[588]))+ (4.7801123 * float(x[589]))+ (-1.2820873 * float(x[590]))+ (-2.9355104 * float(x[591]))+ (-3.7179296 * float(x[592]))+ (-0.48766813 * float(x[593]))+ (2.512886 * float(x[594]))+ (-0.9007354 * float(x[595]))+ (1.4954121 * float(x[596]))+ (-1.0688642 * float(x[597]))+ (-4.7260637 * float(x[598]))+ (5.112738 * float(x[599])))+ ((-3.1257207 * float(x[600]))+ (3.3153374 * float(x[601]))+ (-10.008391 * float(x[602]))+ (-0.6705225 * float(x[603]))+ (0.9943996 * float(x[604]))+ (4.836598 * float(x[605]))+ (-0.43506336 * float(x[606]))+ (-1.1009192 * float(x[607]))+ (0.41146454 * float(x[608]))+ (1.0640316 * float(x[609]))+ (7.3109775 * float(x[610]))+ (2.4609604 * float(x[611]))+ (-2.3280885 * float(x[612]))+ (-0.19546616 * float(x[613]))+ (0.3512557 * float(x[614]))+ (0.007267685 * float(x[615]))+ (-2.5063608 * float(x[616]))+ (1.6154424 * float(x[617]))+ (3.8690798 * float(x[618]))+ (-2.1597443 * float(x[619]))+ (-1.5450633 * float(x[620]))+ (-2.063136 * float(x[621]))+ (-0.64484626 * float(x[622]))+ (0.17490473 * float(x[623]))+ (-4.5107527 * float(x[624]))+ (3.5917733 * float(x[625]))+ (0.1922387 * float(x[626]))+ (1.759507 * float(x[627]))+ (-1.7249868 * float(x[628]))+ (1.9384315 * float(x[629]))+ (-1.9347789 * float(x[630]))+ (-6.9229107 * float(x[631]))+ (2.482074 * float(x[632]))+ (7.8329854 * float(x[633]))+ (4.2411447 * float(x[634]))+ (3.0302305 * float(x[635]))+ (-5.3664994 * float(x[636]))+ (2.1792798 * float(x[637]))+ (-1.276213 * float(x[638]))+ (2.0629709 * float(x[639]))+ (-6.348896 * float(x[640]))+ (-1.4019419 * float(x[641]))+ (2.8772876 * float(x[642]))+ (2.6729648 * float(x[643]))+ (-1.7461165 * float(x[644]))+ (4.5377502 * float(x[645]))+ (-6.064946 * float(x[646]))+ (-7.207858 * float(x[647]))+ (-4.982009 * float(x[648]))+ (6.988249 * float(x[649])))+ ((0.723088 * float(x[650]))+ (1.0730408 * float(x[651]))+ (-3.8990753 * float(x[652]))+ (-1.4828458 * float(x[653]))+ (2.8335073 * float(x[654]))+ (-1.602549 * float(x[655]))+ (7.8281054 * float(x[656]))+ (-9.6579685 * float(x[657]))+ (1.3729566 * float(x[658]))+ (-2.6840217 * float(x[659]))+ (-3.7517188 * float(x[660]))+ (-2.0989902 * float(x[661]))+ (-0.820551 * float(x[662]))+ (-1.4989785 * float(x[663]))+ (-3.424714 * float(x[664]))+ (2.1976101 * float(x[665]))+ (3.8410869 * float(x[666]))+ (-1.1882533 * float(x[667]))+ (-0.16778478 * float(x[668]))+ (2.6366248 * float(x[669]))+ (3.1660361 * float(x[670]))+ (-0.8279843 * float(x[671]))+ (-2.7693236 * float(x[672]))+ (0.88244194 * float(x[673]))+ (0.93503803 * float(x[674]))+ (0.7942438 * float(x[675]))+ (-1.4985551 * float(x[676]))+ (-0.74225265 * float(x[677]))+ (-2.8892634 * float(x[678]))+ (7.92333 * float(x[679]))+ (-5.0119495 * float(x[680]))+ (-3.7689471 * float(x[681]))+ (-2.9124966 * float(x[682]))+ (1.8944247 * float(x[683]))+ (5.428947 * float(x[684]))+ (-4.986872 * float(x[685]))+ (5.181179 * float(x[686]))+ (0.9587365 * float(x[687]))+ (-3.4482014 * float(x[688]))+ (7.5720844 * float(x[689]))+ (4.249132 * float(x[690]))+ (1.7761471 * float(x[691]))+ (-3.6210198 * float(x[692]))+ (3.7749767 * float(x[693]))+ (2.446747 * float(x[694]))+ (-0.88951224 * float(x[695]))+ (-0.6777011 * float(x[696]))+ (-1.5115981 * float(x[697]))+ (2.0464625 * float(x[698]))+ (0.2829374 * float(x[699])))+ ((-1.4808838 * float(x[700]))+ (-1.4525318 * float(x[701]))+ (-2.0007737 * float(x[702]))+ (-2.6242275 * float(x[703]))+ (0.4781048 * float(x[704]))+ (5.8104954 * float(x[705]))+ (5.7656507 * float(x[706]))+ (-5.1466093 * float(x[707]))+ (2.907957 * float(x[708]))+ (1.0477905 * float(x[709]))+ (2.1762831 * float(x[710]))+ (2.9127135 * float(x[711]))+ (6.6919174 * float(x[712]))+ (-2.0927725 * float(x[713]))+ (-5.5819516 * float(x[714]))+ (-7.651493 * float(x[715]))+ (-4.585286 * float(x[716]))+ (-6.1306334 * float(x[717]))+ (-0.16575275 * float(x[718]))+ (2.7111802 * float(x[719]))+ (3.0559323 * float(x[720]))+ (-2.200331 * float(x[721]))+ (8.380115 * float(x[722]))+ (1.314043 * float(x[723]))+ (3.6799138 * float(x[724]))+ (-1.8329257 * float(x[725]))+ (0.9472889 * float(x[726]))+ (-0.37193763 * float(x[727]))+ (1.0293053 * float(x[728]))+ (4.996903 * float(x[729]))+ (6.50376 * float(x[730]))+ (3.6984003 * float(x[731]))+ (2.1502125 * float(x[732]))+ (1.0663851 * float(x[733]))+ (-1.6150509 * float(x[734]))+ (-1.084761 * float(x[735]))+ (-4.351871 * float(x[736]))+ (-2.9888387 * float(x[737]))+ (0.29374632 * float(x[738]))+ (-1.0393472 * float(x[739]))+ (4.64927 * float(x[740]))+ (-2.0396543 * float(x[741]))+ (2.1652124 * float(x[742]))+ (8.524501 * float(x[743]))+ (0.99940366 * float(x[744]))+ (1.9754441 * float(x[745]))+ (1.0995663 * float(x[746]))+ (0.8090814 * float(x[747]))+ (2.6320364 * float(x[748]))+ (4.800663 * float(x[749])))+ ((0.8701893 * float(x[750]))+ (-2.2549593 * float(x[751]))+ (0.19931303 * float(x[752]))+ (-4.5357084 * float(x[753]))+ (-3.8084636 * float(x[754]))+ (-2.826682 * float(x[755]))+ (2.137716 * float(x[756]))+ (4.6655817 * float(x[757]))+ (-5.8818936 * float(x[758]))+ (2.1476614 * float(x[759]))+ (1.2393878 * float(x[760]))+ (-0.8602552 * float(x[761]))+ (-3.5420568 * float(x[762]))+ (0.4310648 * float(x[763]))+ (0.8426553 * float(x[764]))+ (-0.24611622 * float(x[765]))+ (-1.568075 * float(x[766]))+ (-0.7680162 * float(x[767]))+ (0.013522948 * float(x[768]))+ (-2.9376025 * float(x[769]))+ (4.2626266 * float(x[770]))+ (1.8874065 * float(x[771]))+ (-0.41457835 * float(x[772]))+ (-1.9560975 * float(x[773]))+ (4.111807 * float(x[774]))+ (-7.3576303 * float(x[775]))+ (5.348121 * float(x[776]))+ (1.8771174 * float(x[777]))+ (2.49073 * float(x[778]))+ (-0.34084433 * float(x[779]))+ (-4.543584 * float(x[780]))+ (-7.3926926 * float(x[781]))+ (4.688005 * float(x[782]))+ (-13.542317 * float(x[783]))+ (0.75406516 * float(x[784]))+ (0.6538992 * float(x[785]))+ (-0.28396958 * float(x[786]))+ (1.701929 * float(x[787]))+ (-0.7847646 * float(x[788]))+ (4.8430657 * float(x[789]))+ (2.8376415 * float(x[790]))+ (5.6663885 * float(x[791]))+ (0.9808311 * float(x[792]))+ (-1.6661022 * float(x[793]))+ (-2.2015798 * float(x[794]))+ (-0.48037496 * float(x[795]))+ (2.9516659 * float(x[796]))+ (7.041688 * float(x[797]))+ (2.3059738 * float(x[798]))+ (-6.8782234 * float(x[799])))+ ((-1.4348388 * float(x[800]))+ (0.43677524 * float(x[801]))+ (3.2170048 * float(x[802]))+ (-1.0718455 * float(x[803]))+ (-3.5772114 * float(x[804]))+ (2.7297084 * float(x[805]))+ (-1.2181652 * float(x[806]))+ (1.7859862 * float(x[807]))+ (3.9744158 * float(x[808]))+ (1.1194537 * float(x[809]))+ (-0.43626204 * float(x[810]))+ (2.642957 * float(x[811]))+ (1.7394977 * float(x[812]))+ (0.12475059 * float(x[813]))+ (-0.91756546 * float(x[814]))+ (2.1037982 * float(x[815]))+ (-0.37605423 * float(x[816]))+ (-4.0282903 * float(x[817]))+ (2.1011565 * float(x[818]))+ (-6.5067177 * float(x[819]))+ (-7.1723127 * float(x[820]))+ (-0.14919655 * float(x[821]))+ (-0.87289244 * float(x[822]))+ (-5.955813 * float(x[823]))+ (-5.0788646 * float(x[824]))+ (-6.5204186 * float(x[825]))+ (-4.3020134 * float(x[826]))+ (3.1937602 * float(x[827]))+ (-5.6965265 * float(x[828]))+ (-4.32077 * float(x[829]))+ (-9.941798 * float(x[830]))+ (1.7876277 * float(x[831]))+ (10.018201 * float(x[832]))+ (3.9955769 * float(x[833]))+ (5.4468484 * float(x[834]))+ (2.4575202 * float(x[835]))+ (-3.5519373 * float(x[836]))+ (-8.289966 * float(x[837]))+ (9.416555 * float(x[838]))+ (-4.4345284 * float(x[839]))+ (1.8378296 * float(x[840]))+ (1.2139689 * float(x[841]))+ (2.1054964 * float(x[842]))+ (-1.5637451 * float(x[843]))+ (0.22979118 * float(x[844]))+ (-2.838948 * float(x[845]))+ (-1.9856491 * float(x[846]))+ (-2.9105637 * float(x[847]))+ (2.8142476 * float(x[848]))+ (-2.5940504 * float(x[849])))+ ((0.13311453 * float(x[850]))+ (-2.1377814 * float(x[851]))+ (-2.0296414 * float(x[852]))+ (-6.994991 * float(x[853]))+ (-1.7183177 * float(x[854]))+ (-1.9482666 * float(x[855]))+ (2.5950403 * float(x[856]))+ (-0.719368 * float(x[857]))+ (-8.570094 * float(x[858]))+ (-2.6735601 * float(x[859]))+ (-1.9272653 * float(x[860]))+ (-6.386954 * float(x[861]))+ (0.34651873 * float(x[862]))+ (1.7340853 * float(x[863]))+ (4.60476 * float(x[864]))+ (2.2251368 * float(x[865]))+ (0.7718638 * float(x[866]))+ (2.8806467 * float(x[867]))+ (1.2057492 * float(x[868]))+ (-0.41346624 * float(x[869]))+ (-2.8523245 * float(x[870]))+ (-7.198385 * float(x[871]))+ (-5.6741734 * float(x[872]))+ (1.7921852 * float(x[873]))+ (5.7815375 * float(x[874]))+ (3.511126 * float(x[875]))+ (-1.6791612 * float(x[876]))+ (3.7019682 * float(x[877]))+ (-4.154842 * float(x[878]))+ (9.995748 * float(x[879]))+ (-0.8002578 * float(x[880]))+ (0.65068895 * float(x[881]))+ (1.1166608 * float(x[882]))+ (-4.3017845 * float(x[883]))+ (-7.215089 * float(x[884]))+ (-7.331243 * float(x[885]))+ (-6.7965207 * float(x[886]))+ (-0.716987 * float(x[887]))+ (-1.7428824 * float(x[888]))+ (0.17199497 * float(x[889]))+ (2.240841 * float(x[890]))+ (-2.024897 * float(x[891]))+ (3.7387943 * float(x[892]))+ (0.37952495 * float(x[893]))+ (1.2671926 * float(x[894]))+ (1.4838037 * float(x[895]))+ (-0.6340749 * float(x[896]))+ (-3.2136426 * float(x[897]))+ (2.6957011 * float(x[898]))+ (2.8581283 * float(x[899])))+ ((-2.1880925 * float(x[900]))+ (6.798751 * float(x[901]))+ (8.271218 * float(x[902]))+ (1.0044295 * float(x[903]))+ (-4.382308 * float(x[904]))+ (-0.57038337 * float(x[905]))+ (3.4457793 * float(x[906]))+ (3.4264798 * float(x[907]))+ (2.4514902 * float(x[908]))+ (1.2604266 * float(x[909]))+ (0.2727323 * float(x[910]))+ (5.7455263 * float(x[911]))+ (2.267935 * float(x[912]))+ (2.4887695 * float(x[913]))+ (0.38546965 * float(x[914]))+ (3.4365451 * float(x[915]))+ (1.8832047 * float(x[916]))+ (1.0371729 * float(x[917]))+ (0.9619355 * float(x[918]))+ (4.723338 * float(x[919]))+ (2.3299778 * float(x[920]))+ (1.4120245 * float(x[921]))+ (0.0054260646 * float(x[922]))+ (-4.7019925 * float(x[923]))+ (0.18088853 * float(x[924]))+ (0.4099751 * float(x[925]))+ (0.06152724 * float(x[926]))+ (6.153189 * float(x[927]))+ (-2.3735492 * float(x[928]))+ (-3.79909 * float(x[929]))+ (3.8090682 * float(x[930]))+ (2.3309224 * float(x[931]))+ (-0.08096139 * float(x[932]))+ (-3.0572798 * float(x[933]))+ (0.60421675 * float(x[934]))+ (3.001315 * float(x[935]))+ (2.6735497 * float(x[936]))+ (-0.8725676 * float(x[937]))+ (4.3173347 * float(x[938]))+ (-2.4920952 * float(x[939]))+ (3.0356994 * float(x[940]))+ (-6.4119534 * float(x[941]))+ (-4.5453267 * float(x[942]))+ (5.3726153 * float(x[943]))+ (-5.22894 * float(x[944]))+ (-3.42771 * float(x[945]))+ (-0.55735844 * float(x[946]))+ (-5.5715446 * float(x[947]))+ (-1.3336655 * float(x[948]))+ (-0.0091249095 * float(x[949])))+ ((0.050808985 * float(x[950]))+ (0.121000215 * float(x[951]))+ (1.309927 * float(x[952]))+ (-0.03581075 * float(x[953]))+ (0.2637558 * float(x[954]))+ (1.0349939 * float(x[955]))+ (-0.51286805 * float(x[956]))+ (0.5174319 * float(x[957]))+ (-0.12910487 * float(x[958]))+ (0.16452137 * float(x[959]))+ (0.3106983 * float(x[960]))+ (-0.5594545 * float(x[961]))+ (-0.26596776 * float(x[962]))+ (0.28932315 * float(x[963]))+ (-0.28703514 * float(x[964]))+ (-0.47151357 * float(x[965]))+ (0.86786306 * float(x[966]))+ (0.078646 * float(x[967]))+ (0.091799945 * float(x[968]))+ (0.73357946 * float(x[969]))+ (0.3031034 * float(x[970]))+ (0.4643623 * float(x[971]))+ (-0.540982 * float(x[972]))+ (-0.50394756 * float(x[973]))+ (0.13217133 * float(x[974]))+ (-1.0379176 * float(x[975]))+ (-0.271751 * float(x[976]))+ (0.063452795 * float(x[977]))+ (0.3187969 * float(x[978]))+ (-0.34129757 * float(x[979]))+ (-0.8285123 * float(x[980]))+ (-0.60885036 * float(x[981]))+ (-0.09021817 * float(x[982]))+ (0.20187956 * float(x[983]))+ (-0.29734844 * float(x[984]))+ (0.5439293 * float(x[985]))+ (-0.34930918 * float(x[986]))+ (0.24442762 * float(x[987]))+ (-1.4342839 * float(x[988]))+ (-0.44839248 * float(x[989]))+ (-0.22610228 * float(x[990]))+ (-1.810226 * float(x[991]))+ (-0.45758393 * float(x[992]))+ (-0.362285 * float(x[993]))+ (0.204903 * float(x[994]))+ (0.6648339 * float(x[995]))+ (1.1794384 * float(x[996]))+ (1.7931792 * float(x[997]))+ (-0.120103925 * float(x[998]))+ (0.19517457 * float(x[999])))+ ((-0.5402417 * float(x[1000]))+ (1.0298449 * float(x[1001]))+ (-0.06665418 * float(x[1002]))+ (-0.58458567 * float(x[1003]))+ (0.15094425 * float(x[1004]))+ (0.23993745 * float(x[1005]))+ (-0.731392 * float(x[1006]))+ (1.628804 * float(x[1007]))+ (-1.2407347 * float(x[1008]))+ (-0.47576132 * float(x[1009]))+ (0.38942474 * float(x[1010]))+ (1.0288298 * float(x[1011]))+ (0.51522374 * float(x[1012]))+ (-0.31757325 * float(x[1013]))+ (-0.51245165 * float(x[1014]))+ (0.8955459 * float(x[1015]))+ (0.4824326 * float(x[1016]))+ (0.048097607 * float(x[1017]))+ (-0.35257745 * float(x[1018]))+ (-0.15368901 * float(x[1019]))+ (-0.011156428 * float(x[1020]))+ (0.13721278 * float(x[1021]))+ (-1.1365538 * float(x[1022]))+ (-0.28775495 * float(x[1023]))+ (1.1486081 * float(x[1024]))+ (1.309025 * float(x[1025]))+ (0.6236645 * float(x[1026]))+ (0.018356215 * float(x[1027]))+ (-0.22042978 * float(x[1028]))+ (-1.6747217 * float(x[1029]))+ (-0.8484693 * float(x[1030]))+ (-1.021218 * float(x[1031]))+ (-0.3819914 * float(x[1032]))+ (-0.4954019 * float(x[1033]))+ (0.07021091 * float(x[1034]))+ (0.15737922 * float(x[1035]))+ (-0.40292755 * float(x[1036]))+ (-0.27971888 * float(x[1037]))+ (-0.23409703 * float(x[1038]))+ (0.16767868 * float(x[1039]))+ (0.31423065 * float(x[1040]))+ (0.28013697 * float(x[1041]))+ (1.568696 * float(x[1042]))+ (0.060523964 * float(x[1043]))+ (0.9193218 * float(x[1044]))+ (-1.1530238 * float(x[1045]))+ (-0.098884165 * float(x[1046]))+ (0.07312505 * float(x[1047]))+ (-0.37839332 * float(x[1048]))+ (-0.417251 * float(x[1049])))+ ((0.93155533 * float(x[1050]))+ (-0.4797606 * float(x[1051]))+ (-0.97616726 * float(x[1052]))+ (-0.6605477 * float(x[1053]))+ (-0.89675426 * float(x[1054]))+ (-0.25384498 * float(x[1055]))+ (-0.5568514 * float(x[1056]))+ (0.15186886 * float(x[1057]))+ (1.032504 * float(x[1058]))+ (0.4887278 * float(x[1059]))+ (-0.56209797 * float(x[1060]))+ (1.1775315 * float(x[1061]))+ (0.15903054 * float(x[1062]))+ (-1.5504229 * float(x[1063]))+ (0.82219976 * float(x[1064]))+ (0.99238527 * float(x[1065]))+ (0.38114524 * float(x[1066]))+ (-0.30762848 * float(x[1067]))+ (0.99283665 * float(x[1068]))+ (0.2872976 * float(x[1069]))+ (1.350271 * float(x[1070]))+ (1.8457274 * float(x[1071]))+ (-0.15737471 * float(x[1072]))+ (-0.030272389 * float(x[1073]))+ (0.5883125 * float(x[1074]))+ (-0.083488844 * float(x[1075]))+ (1.4235603 * float(x[1076]))+ (1.3620737 * float(x[1077]))+ (-0.235625 * float(x[1078]))+ (1.0639386 * float(x[1079]))+ (1.624693 * float(x[1080]))+ (-0.46908978 * float(x[1081]))+ (1.4812796 * float(x[1082]))+ (0.14979237 * float(x[1083]))+ (-1.4867065 * float(x[1084]))+ (-0.1533871 * float(x[1085]))+ (0.10755803 * float(x[1086]))+ (-0.09519507 * float(x[1087]))+ (0.9129829 * float(x[1088]))+ (-0.88657314 * float(x[1089]))+ (0.30780002 * float(x[1090]))+ (1.2049072 * float(x[1091]))+ (0.55560887 * float(x[1092]))+ (-0.23452482 * float(x[1093]))+ (1.2930167 * float(x[1094]))+ (-1.2468985 * float(x[1095]))+ (0.5974944 * float(x[1096]))+ (-0.6110178 * float(x[1097]))+ (-0.5538275 * float(x[1098]))+ (-2.355792 * float(x[1099])))+ ((0.11965729 * float(x[1100]))+ (0.052402608 * float(x[1101]))+ (-0.50628084 * float(x[1102]))+ (-2.2169452 * float(x[1103]))+ (1.29753 * float(x[1104]))+ (1.0656853 * float(x[1105]))+ (0.33166546 * float(x[1106]))+ (-1.8178931 * float(x[1107]))+ (0.096767604 * float(x[1108]))+ (-0.3102612 * float(x[1109]))+ (-1.5868671 * float(x[1110]))+ (-1.0023158 * float(x[1111]))+ (-0.0034706227 * float(x[1112]))+ (2.688556 * float(x[1113]))+ (-0.9450847 * float(x[1114]))+ (-1.8172638 * float(x[1115]))+ (-1.6400183 * float(x[1116]))+ (0.71717185 * float(x[1117]))+ (-1.3270153 * float(x[1118]))+ (0.381482 * float(x[1119]))+ (0.22514941 * float(x[1120]))+ (-0.2053086 * float(x[1121]))+ (0.0049751964 * float(x[1122]))+ (-0.70370936 * float(x[1123]))+ (1.4134792 * float(x[1124]))+ (1.9356285 * float(x[1125]))+ (0.7818584 * float(x[1126]))+ (-0.98537815 * float(x[1127]))+ (0.6644549 * float(x[1128]))+ (-0.1878375 * float(x[1129]))+ (-0.6273147 * float(x[1130]))+ (-1.9441674 * float(x[1131]))+ (0.7373476 * float(x[1132]))+ (1.3654913 * float(x[1133]))+ (-1.3236182 * float(x[1134]))+ (-0.92823714 * float(x[1135]))+ (-0.6595381 * float(x[1136]))+ (1.8969418 * float(x[1137]))+ (-0.14049551 * float(x[1138]))+ (0.31988665 * float(x[1139]))+ (0.56465346 * float(x[1140]))+ (0.4873026 * float(x[1141]))+ (-0.30962262 * float(x[1142]))+ (0.58470744 * float(x[1143]))+ (-0.2719114 * float(x[1144]))+ (0.021679213 * float(x[1145]))+ (0.67069834 * float(x[1146]))+ (-0.9254508 * float(x[1147]))+ (1.2302824 * float(x[1148]))+ (0.5108003 * float(x[1149])))+ ((-0.98998857 * float(x[1150]))+ (-3.4180791 * float(x[1151]))+ (-0.26977977 * float(x[1152]))+ (-0.7638384 * float(x[1153]))+ (0.7624555 * float(x[1154]))+ (0.67789555 * float(x[1155]))+ (0.7065627 * float(x[1156]))+ (-1.1210936 * float(x[1157]))+ (-1.5349988 * float(x[1158]))+ (-0.65101475 * float(x[1159]))+ (-0.35307184 * float(x[1160]))+ (-0.37399757 * float(x[1161]))+ (0.89922315 * float(x[1162]))+ (-1.5150421 * float(x[1163]))+ (0.6180218 * float(x[1164]))+ (0.9215541 * float(x[1165]))+ (0.34771067 * float(x[1166]))+ (0.24966024 * float(x[1167]))+ (1.2512351 * float(x[1168]))+ (0.37879968 * float(x[1169]))+ (-1.7133112 * float(x[1170]))+ (0.74899566 * float(x[1171]))+ (-0.52985764 * float(x[1172]))+ (2.0337608 * float(x[1173]))+ (0.8276569 * float(x[1174]))+ (2.0778291 * float(x[1175]))+ (1.2590901 * float(x[1176]))+ (-0.72480506 * float(x[1177]))+ (1.0029187 * float(x[1178]))+ (-2.556088 * float(x[1179]))+ (-0.38166964 * float(x[1180]))+ (0.25768772 * float(x[1181]))+ (-0.68241036 * float(x[1182]))+ (-0.575067 * float(x[1183]))+ (-0.5690777 * float(x[1184]))+ (1.1512861 * float(x[1185]))+ (0.40678895 * float(x[1186]))+ (-1.316476 * float(x[1187]))+ (0.94185555 * float(x[1188]))+ (0.69935256 * float(x[1189]))+ (0.4491384 * float(x[1190]))+ (-0.7940737 * float(x[1191]))+ (-0.07602605 * float(x[1192]))+ (-2.0352747 * float(x[1193]))+ (0.42618692 * float(x[1194]))+ (-1.5273751 * float(x[1195]))+ (-0.85844326 * float(x[1196]))+ (-0.2674131 * float(x[1197]))+ (0.12018198 * float(x[1198]))+ (0.19710045 * float(x[1199])))+ ((0.66616493 * float(x[1200]))+ (0.11982767 * float(x[1201]))+ (-0.3970727 * float(x[1202]))+ (0.8572669 * float(x[1203]))+ (-0.085527815 * float(x[1204]))+ (-1.4584988 * float(x[1205]))+ (0.8533741 * float(x[1206]))+ (-0.26001918 * float(x[1207]))+ (2.4547582 * float(x[1208]))+ (-2.36321 * float(x[1209]))+ (0.3379409 * float(x[1210]))+ (-1.1119406 * float(x[1211]))+ (-0.979373 * float(x[1212]))+ (1.0014204 * float(x[1213]))+ (-0.51912516 * float(x[1214]))+ (0.14467631 * float(x[1215]))+ (0.98851806 * float(x[1216]))+ (0.09497907 * float(x[1217]))+ (3.633902 * float(x[1218]))+ (0.311415 * float(x[1219]))+ (-0.30744645 * float(x[1220]))+ (0.69117665 * float(x[1221]))+ (1.2110227 * float(x[1222]))+ (-1.367548 * float(x[1223]))+ (-0.58920753 * float(x[1224]))+ (0.55886054 * float(x[1225]))+ (1.0867498 * float(x[1226]))+ (0.8589824 * float(x[1227]))+ (-1.5625311 * float(x[1228]))+ (-1.294256 * float(x[1229]))+ (-1.3542488 * float(x[1230]))+ (-2.1852534 * float(x[1231]))+ (1.0997738 * float(x[1232]))+ (-0.67396486 * float(x[1233]))+ (1.6967727 * float(x[1234]))+ (-0.19191615 * float(x[1235]))+ (-3.3022327 * float(x[1236]))+ (-2.4837363 * float(x[1237]))+ (-1.4025309 * float(x[1238]))+ (-1.2926003 * float(x[1239]))+ (-2.0265303 * float(x[1240]))+ (-0.049640056 * float(x[1241]))+ (0.3890873 * float(x[1242]))+ (-1.1843033 * float(x[1243]))+ (0.4686873 * float(x[1244]))+ (1.9323784 * float(x[1245]))+ (0.92363346 * float(x[1246]))+ (-1.3674506 * float(x[1247]))+ (-1.6474066 * float(x[1248]))+ (-3.600194 * float(x[1249])))+ ((0.3303952 * float(x[1250]))+ (-2.3010037 * float(x[1251]))+ (-0.30648664 * float(x[1252]))+ (2.4026115 * float(x[1253]))+ (1.7581888 * float(x[1254]))+ (-1.0430788 * float(x[1255]))+ (1.0429378 * float(x[1256]))+ (-0.19052638 * float(x[1257]))+ (-0.13118891 * float(x[1258]))+ (-2.2649357 * float(x[1259]))+ (-1.6910514 * float(x[1260]))+ (-0.058034938 * float(x[1261]))+ (3.5841007 * float(x[1262]))+ (0.61251974 * float(x[1263]))+ (0.4542975 * float(x[1264]))+ (0.20020996 * float(x[1265]))+ (-3.360126 * float(x[1266]))+ (0.980696 * float(x[1267]))+ (-3.3768291 * float(x[1268]))+ (-2.9073124 * float(x[1269]))+ (-2.5655568 * float(x[1270]))+ (0.29434538 * float(x[1271]))+ (-0.18910308 * float(x[1272]))+ (-0.5081052 * float(x[1273]))+ (2.1022701 * float(x[1274]))+ (-0.1266243 * float(x[1275]))+ (0.6980372 * float(x[1276]))+ (-2.214825 * float(x[1277]))+ (0.85871977 * float(x[1278]))+ (0.9994374 * float(x[1279]))+ (-1.3763556 * float(x[1280]))+ (0.33378732 * float(x[1281]))+ (-2.3377862 * float(x[1282]))+ (0.7320753 * float(x[1283]))+ (0.73468137 * float(x[1284]))+ (-0.45261276 * float(x[1285]))+ (-1.2318637 * float(x[1286]))+ (-0.24884084 * float(x[1287]))+ (-2.1137335 * float(x[1288]))+ (0.417014 * float(x[1289]))+ (-1.1544088 * float(x[1290]))+ (-2.7865365 * float(x[1291]))+ (-2.3845425 * float(x[1292]))+ (1.3797083 * float(x[1293]))+ (1.2824266 * float(x[1294]))+ (0.03518049 * float(x[1295]))+ (-2.1161814 * float(x[1296]))+ (-0.08708182 * float(x[1297]))+ (-1.0577648 * float(x[1298]))+ (-0.5288505 * float(x[1299])))+ ((-1.6070945 * float(x[1300]))+ (-2.8756182 * float(x[1301]))+ (2.5424783 * float(x[1302]))+ (-3.2916691 * float(x[1303]))+ (0.2647948 * float(x[1304]))+ (-1.560703 * float(x[1305]))+ (-1.8179923 * float(x[1306]))+ (0.092262775 * float(x[1307]))+ (2.7087004 * float(x[1308]))+ (2.556227 * float(x[1309]))+ (0.12658337 * float(x[1310]))+ (-2.0054445 * float(x[1311]))+ (-0.017001368 * float(x[1312]))+ (1.383738 * float(x[1313]))+ (0.27262425 * float(x[1314]))+ (-1.0713022 * float(x[1315]))+ (1.9639151 * float(x[1316]))+ (-1.1717097 * float(x[1317]))+ (1.518097 * float(x[1318]))+ (-1.8731238 * float(x[1319]))+ (-1.6309348 * float(x[1320]))+ (-0.4492707 * float(x[1321]))+ (0.9650796 * float(x[1322]))+ (-0.8131109 * float(x[1323]))+ (2.2035723 * float(x[1324]))+ (0.6430093 * float(x[1325]))+ (-3.393629 * float(x[1326]))+ (-1.4388645 * float(x[1327]))+ (1.513694 * float(x[1328]))+ (-0.40204388 * float(x[1329]))+ (-2.638365 * float(x[1330]))+ (1.4275974 * float(x[1331]))+ (2.370025 * float(x[1332]))+ (0.85898864 * float(x[1333]))+ (0.65821797 * float(x[1334]))+ (1.0748781 * float(x[1335]))+ (0.545378 * float(x[1336]))+ (0.9609697 * float(x[1337]))+ (0.68239826 * float(x[1338]))+ (-1.2578917 * float(x[1339]))+ (-0.067842685 * float(x[1340]))+ (-2.1180859 * float(x[1341]))+ (2.4444513 * float(x[1342]))+ (1.2723548 * float(x[1343]))+ (-0.7974524 * float(x[1344]))+ (-3.6470456 * float(x[1345]))+ (-0.059744157 * float(x[1346]))+ (-2.6223414 * float(x[1347]))+ (3.8088317 * float(x[1348]))+ (-3.022069 * float(x[1349])))+ ((0.774488 * float(x[1350]))+ (-1.9157403 * float(x[1351]))+ (-0.25324804 * float(x[1352]))+ (0.58733016 * float(x[1353]))+ (-1.8159297 * float(x[1354]))+ (0.80209494 * float(x[1355]))+ (0.63804984 * float(x[1356]))+ (-0.038420282 * float(x[1357]))+ (-0.05899396 * float(x[1358]))+ (-0.24375197 * float(x[1359]))+ (0.34102917 * float(x[1360]))+ (-1.5992774 * float(x[1361]))+ (-0.5703775 * float(x[1362]))+ (0.79349285 * float(x[1363]))+ (0.21589261 * float(x[1364]))+ (0.8788473 * float(x[1365]))+ (-1.1626191 * float(x[1366]))+ (-1.8713048 * float(x[1367]))+ (1.1157006 * float(x[1368]))+ (-0.6012709 * float(x[1369]))+ (2.2601378 * float(x[1370]))+ (-0.94726044 * float(x[1371]))+ (-1.44697 * float(x[1372]))+ (-1.7362777 * float(x[1373]))+ (0.2882999 * float(x[1374]))+ (-0.1145845 * float(x[1375]))+ (-1.9928917 * float(x[1376]))+ (0.6650603 * float(x[1377]))+ (0.7341802 * float(x[1378]))+ (3.4130063 * float(x[1379]))+ (-3.3900986 * float(x[1380]))+ (3.5762784 * float(x[1381]))+ (-0.91612583 * float(x[1382]))+ (1.2572501 * float(x[1383]))+ (-0.17747144 * float(x[1384]))+ (-0.91417545 * float(x[1385]))+ (-0.7897064 * float(x[1386]))+ (-0.4291164 * float(x[1387]))+ (0.5058888 * float(x[1388]))+ (0.59034765 * float(x[1389]))+ (-0.01164134 * float(x[1390]))+ (2.566764 * float(x[1391]))+ (0.2742279 * float(x[1392]))+ (0.7262708 * float(x[1393]))+ (0.55311525 * float(x[1394]))+ (1.4562522 * float(x[1395]))+ (1.7306932 * float(x[1396]))+ (1.7696615 * float(x[1397]))+ (2.6453729 * float(x[1398]))+ (-1.3892611 * float(x[1399])))+ ((1.1691862 * float(x[1400]))+ (-1.9785672 * float(x[1401]))+ (-0.2811786 * float(x[1402]))+ (-0.48404756 * float(x[1403]))+ (-2.520304 * float(x[1404]))+ (-0.54156697 * float(x[1405]))+ (1.1228926 * float(x[1406]))+ (-1.7153295 * float(x[1407]))+ (3.6344929 * float(x[1408]))+ (0.8109031 * float(x[1409]))+ (-1.0463777 * float(x[1410]))+ (0.16096127 * float(x[1411]))+ (1.2738822 * float(x[1412]))+ (0.33174413 * float(x[1413]))+ (0.48506144 * float(x[1414]))+ (0.6708152 * float(x[1415]))+ (-0.5558765 * float(x[1416]))+ (0.4292716 * float(x[1417]))+ (2.576653 * float(x[1418]))+ (-1.38728 * float(x[1419]))+ (0.41024926 * float(x[1420]))+ (-1.0336293 * float(x[1421]))+ (2.1756887 * float(x[1422]))+ (0.3643803 * float(x[1423]))+ (-1.2458452 * float(x[1424]))+ (2.2523773 * float(x[1425]))+ (-0.020231297 * float(x[1426]))+ (-1.021762 * float(x[1427]))+ (1.0322535 * float(x[1428]))+ (-1.4597976 * float(x[1429]))+ (0.49033833 * float(x[1430]))+ (-0.51034623 * float(x[1431]))+ (-0.50928146 * float(x[1432]))+ (0.88932997 * float(x[1433]))+ (0.75398594 * float(x[1434]))+ (0.08350241 * float(x[1435]))+ (1.6363056 * float(x[1436]))+ (-0.12689449 * float(x[1437]))+ (-0.05188454 * float(x[1438]))+ (1.6798595 * float(x[1439]))+ (1.3890314 * float(x[1440]))+ (-0.08944127 * float(x[1441]))+ (-1.295865 * float(x[1442]))+ (0.7678509 * float(x[1443]))+ (0.7070103 * float(x[1444]))+ (1.3310225 * float(x[1445]))+ (2.2969215 * float(x[1446]))+ (1.3505257 * float(x[1447]))+ (2.648481 * float(x[1448]))+ (1.0337285 * float(x[1449])))+ ((1.5059143 * float(x[1450]))+ (0.31461194 * float(x[1451]))+ (0.89373326 * float(x[1452]))+ (0.27577603 * float(x[1453]))+ (2.189639 * float(x[1454]))+ (0.4477168 * float(x[1455]))+ (-0.12535219 * float(x[1456]))+ (0.63200617 * float(x[1457]))+ (0.40349358 * float(x[1458]))+ (0.033323023 * float(x[1459]))+ (0.21759716 * float(x[1460]))+ (-0.15734203 * float(x[1461]))+ (2.2209032 * float(x[1462]))+ (0.46881923 * float(x[1463]))+ (3.082776 * float(x[1464]))+ (1.991332 * float(x[1465]))+ (-0.61493033 * float(x[1466]))+ (1.2433413 * float(x[1467]))+ (0.4148473 * float(x[1468]))+ (-1.2369558 * float(x[1469]))+ (-0.38084465 * float(x[1470]))+ (1.3723412 * float(x[1471]))+ (0.44812927 * float(x[1472]))+ (-0.12711397 * float(x[1473]))+ (2.032781 * float(x[1474]))+ (-0.7499606 * float(x[1475]))+ (-1.7659203 * float(x[1476]))+ (2.0153308 * float(x[1477]))+ (-0.61665916 * float(x[1478]))+ (-2.9033525 * float(x[1479]))+ (-1.1934693 * float(x[1480]))+ (-0.22416846 * float(x[1481]))+ (-0.42765856 * float(x[1482]))+ (0.85685134 * float(x[1483]))+ (2.0381753 * float(x[1484]))+ (0.00981039 * float(x[1485]))+ (1.5754247 * float(x[1486]))+ (-1.4853705 * float(x[1487]))+ (-1.2720671 * float(x[1488]))+ (-0.9295708 * float(x[1489]))+ (0.08812044 * float(x[1490]))+ (0.25524008 * float(x[1491]))+ (0.20394187 * float(x[1492]))+ (0.39863005 * float(x[1493]))+ (-1.1512128 * float(x[1494]))+ (-0.8739662 * float(x[1495]))+ (-0.22806086 * float(x[1496]))+ (0.632254 * float(x[1497]))+ (0.53967 * float(x[1498]))+ (1.2902801 * float(x[1499])))+ ((-0.1327511 * float(x[1500]))+ (-0.8726672 * float(x[1501]))+ (-0.8582661 * float(x[1502]))+ (1.9347494 * float(x[1503]))+ (0.3575887 * float(x[1504]))+ (0.40277442 * float(x[1505]))+ (-0.66032064 * float(x[1506]))+ (0.08870113 * float(x[1507]))+ (0.5531279 * float(x[1508]))+ (-2.7774704 * float(x[1509]))+ (-1.6918665 * float(x[1510]))+ (0.845596 * float(x[1511]))+ (1.2543919 * float(x[1512]))+ (-0.36912802 * float(x[1513]))+ (-0.8351413 * float(x[1514]))+ (-0.37745616 * float(x[1515]))+ (0.026185846 * float(x[1516]))+ (-0.92609274 * float(x[1517]))+ (1.2393346 * float(x[1518]))+ (2.1109047 * float(x[1519]))+ (-1.0311841 * float(x[1520]))+ (-0.04568476 * float(x[1521]))+ (1.983062 * float(x[1522]))+ (0.454539 * float(x[1523]))+ (0.95791346 * float(x[1524]))+ (-3.0636451 * float(x[1525]))+ (1.2721834 * float(x[1526]))+ (-1.3257878 * float(x[1527]))+ (2.4357605 * float(x[1528]))+ (1.3971877 * float(x[1529]))+ (0.30843732 * float(x[1530]))+ (0.5601956 * float(x[1531]))+ (0.048008326 * float(x[1532]))+ (-1.4357362 * float(x[1533]))+ (-0.4176263 * float(x[1534]))+ (0.8071226 * float(x[1535]))+ (0.045173686 * float(x[1536]))+ (1.290724 * float(x[1537]))+ (1.0614691 * float(x[1538]))+ (1.8776302 * float(x[1539]))+ (1.0284938 * float(x[1540]))+ (-2.0859408 * float(x[1541]))+ (-0.05947903 * float(x[1542]))+ (-1.2009275 * float(x[1543]))+ (-0.6115597 * float(x[1544]))+ (-0.98890376 * float(x[1545]))+ (-0.29351267 * float(x[1546]))+ (-1.7980978 * float(x[1547]))+ (-1.2302723 * float(x[1548]))+ (-1.4665989 * float(x[1549])))+ ((1.2048696 * float(x[1550]))+ (1.5142517 * float(x[1551]))+ (-1.0484357 * float(x[1552]))+ (-0.05548267 * float(x[1553]))+ (1.1895199 * float(x[1554]))+ (-1.688704 * float(x[1555]))+ (1.0912285 * float(x[1556]))+ (0.3182228 * float(x[1557]))+ (2.550856 * float(x[1558]))+ (-0.6035883 * float(x[1559]))+ (0.11616423 * float(x[1560]))+ (-2.0543463 * float(x[1561]))+ (0.39947024 * float(x[1562]))+ (-1.0350645 * float(x[1563]))+ (-0.6338477 * float(x[1564]))+ (-1.7258335 * float(x[1565]))+ (-0.386589 * float(x[1566]))+ (1.6558546 * float(x[1567]))+ (2.5001647 * float(x[1568]))+ (-1.185057 * float(x[1569]))+ (1.99334 * float(x[1570]))+ (-1.1141837 * float(x[1571]))+ (0.13473986 * float(x[1572]))+ (-0.745752 * float(x[1573]))+ (0.12504639 * float(x[1574]))+ (-1.9727156 * float(x[1575]))+ (0.23890692 * float(x[1576]))+ (1.8688282 * float(x[1577]))+ (0.13396169 * float(x[1578]))+ (1.0467335 * float(x[1579]))+ (1.9650123 * float(x[1580]))+ (0.46942613 * float(x[1581]))+ (0.0051541002 * float(x[1582]))+ (2.4342945 * float(x[1583]))+ (1.2824357 * float(x[1584]))+ (0.5987447 * float(x[1585]))+ (-0.13706566 * float(x[1586]))+ (0.5724317 * float(x[1587]))+ (1.2563542 * float(x[1588]))+ (0.37581858 * float(x[1589]))+ (1.2183352 * float(x[1590]))+ (-0.8468736 * float(x[1591]))+ (-1.0864772 * float(x[1592]))+ (-1.3130565 * float(x[1593]))+ (0.91491383 * float(x[1594]))+ (0.34710887 * float(x[1595]))+ (0.50920016 * float(x[1596]))+ (1.819642 * float(x[1597]))+ (-1.7397925 * float(x[1598]))+ (1.3966464 * float(x[1599])))+ ((-1.4773632 * float(x[1600]))+ (-0.42713672 * float(x[1601]))+ (1.3521323 * float(x[1602]))+ (0.74619037 * float(x[1603]))+ (-0.28116834 * float(x[1604]))+ (2.37915 * float(x[1605]))+ (0.26551726 * float(x[1606]))+ (-0.6750699 * float(x[1607]))+ (-0.44715944 * float(x[1608]))+ (0.31686628 * float(x[1609]))+ (0.18759848 * float(x[1610]))+ (0.5941996 * float(x[1611]))+ (2.747415 * float(x[1612]))+ (0.03303586 * float(x[1613]))+ (1.3534465 * float(x[1614]))+ (1.0285631 * float(x[1615]))+ (-2.082605 * float(x[1616]))+ (-2.351399 * float(x[1617]))+ (0.12733158 * float(x[1618]))+ (-0.06985119 * float(x[1619]))+ (1.2117622 * float(x[1620]))+ (0.5012548 * float(x[1621]))+ (-0.91632295 * float(x[1622]))+ (-1.1391153 * float(x[1623]))+ (0.6710916 * float(x[1624]))+ (0.09403158 * float(x[1625]))+ (1.141373 * float(x[1626]))+ (-0.997366 * float(x[1627]))+ (2.3554392 * float(x[1628]))+ (-1.2381964 * float(x[1629]))+ (-0.54580545 * float(x[1630]))+ (1.0618134 * float(x[1631]))+ (-0.75764555 * float(x[1632]))+ (0.21766335 * float(x[1633]))+ (1.667994 * float(x[1634]))+ (-1.1923506 * float(x[1635]))+ (-1.0358454 * float(x[1636]))+ (2.3914886 * float(x[1637]))+ (0.69146335 * float(x[1638]))+ (-0.8998017 * float(x[1639]))+ (-1.0575519 * float(x[1640]))+ (0.9446485 * float(x[1641]))+ (-0.36532167 * float(x[1642]))+ (1.9538126 * float(x[1643]))+ (2.1975632 * float(x[1644]))+ (0.9514492 * float(x[1645]))+ (-1.6231652 * float(x[1646]))+ (-0.06252333 * float(x[1647]))+ (-1.0033987 * float(x[1648]))+ (0.3595365 * float(x[1649])))+ ((-1.1691213 * float(x[1650]))+ (0.54155153 * float(x[1651]))+ (0.55450267 * float(x[1652]))+ (0.2916951 * float(x[1653]))+ (-2.015645 * float(x[1654]))+ (0.55886215 * float(x[1655]))+ (-1.2547144 * float(x[1656]))+ (0.0847395 * float(x[1657]))+ (1.0303056 * float(x[1658]))+ (-2.3335423 * float(x[1659]))+ (-2.1827848 * float(x[1660]))+ (1.1640041 * float(x[1661]))+ (2.25079 * float(x[1662]))+ (-1.8021982 * float(x[1663]))+ (-0.6567456 * float(x[1664]))+ (-0.105986044 * float(x[1665]))+ (2.0932786 * float(x[1666]))+ (-2.4095492 * float(x[1667]))+ (-1.7309695 * float(x[1668]))+ (2.2279463 * float(x[1669]))+ (0.7878237 * float(x[1670]))+ (-0.99101275 * float(x[1671]))+ (-0.7407516 * float(x[1672]))+ (0.17957935 * float(x[1673]))+ (0.36141723 * float(x[1674]))+ (-1.1386344 * float(x[1675]))+ (-0.19396196 * float(x[1676]))+ (-1.317147 * float(x[1677]))+ (-0.86431444 * float(x[1678]))+ (0.46175185 * float(x[1679]))+ (2.4940403 * float(x[1680]))+ (0.8453037 * float(x[1681]))+ (-0.9397226 * float(x[1682]))+ (0.22985241 * float(x[1683]))+ (1.7305315 * float(x[1684]))+ (-0.2797961 * float(x[1685]))+ (-0.54323554 * float(x[1686]))+ (0.7567085 * float(x[1687]))+ (0.30105212 * float(x[1688]))+ (-0.29696718 * float(x[1689]))+ (0.28247413 * float(x[1690]))+ (0.3879404 * float(x[1691]))+ (-0.8122604 * float(x[1692]))+ (-0.9180596 * float(x[1693]))+ (-3.202047 * float(x[1694]))+ (1.1051543 * float(x[1695]))+ (1.6759052 * float(x[1696]))+ (-0.17680106 * float(x[1697]))+ (1.4222248 * float(x[1698]))+ (0.63761836 * float(x[1699])))+ ((-1.0593203 * float(x[1700]))+ (0.74443257 * float(x[1701]))+ (0.051961638 * float(x[1702]))+ (0.29690763 * float(x[1703]))+ (1.6053473 * float(x[1704]))+ (-0.33878833 * float(x[1705]))+ (-2.792249 * float(x[1706]))+ (0.572522 * float(x[1707]))+ (2.1153185 * float(x[1708]))+ (0.13113455 * float(x[1709]))+ (0.086156465 * float(x[1710]))+ (-0.043083873 * float(x[1711]))+ (-0.6801944 * float(x[1712]))+ (-1.2257425 * float(x[1713]))+ (-1.4314609 * float(x[1714]))+ (-0.7068712 * float(x[1715]))+ (2.0863812 * float(x[1716]))+ (0.9319672 * float(x[1717]))+ (0.7482705 * float(x[1718]))+ (2.6326785 * float(x[1719]))+ (0.5602155 * float(x[1720]))+ (1.7911402 * float(x[1721]))+ (0.190221 * float(x[1722]))+ (0.409584 * float(x[1723]))+ (0.914172 * float(x[1724]))+ (1.8581622 * float(x[1725]))+ (-1.399487 * float(x[1726]))+ (-0.79773074 * float(x[1727]))+ (2.4581003 * float(x[1728]))+ (1.5118098 * float(x[1729]))+ (0.619176 * float(x[1730]))+ (-2.2712605 * float(x[1731]))+ (-2.560907 * float(x[1732]))+ (0.0875043 * float(x[1733]))+ (0.5024913 * float(x[1734]))+ (-0.8238321 * float(x[1735]))+ (-0.13913992 * float(x[1736]))+ (-0.46516863 * float(x[1737]))+ (-0.05078298 * float(x[1738]))+ (1.096095 * float(x[1739]))+ (1.1818775 * float(x[1740]))+ (-0.4953196 * float(x[1741]))+ (0.3798584 * float(x[1742]))+ (0.39982557 * float(x[1743]))+ (1.1242026 * float(x[1744]))+ (0.13138628 * float(x[1745]))+ (-1.1467745 * float(x[1746]))+ (-1.154225 * float(x[1747]))+ (-1.0750902 * float(x[1748]))+ (2.0422244 * float(x[1749])))+ ((-1.0123395 * float(x[1750]))+ (-1.3354417 * float(x[1751]))+ (-1.7252631 * float(x[1752]))+ (1.5503637 * float(x[1753]))+ (-0.60112816 * float(x[1754]))+ (0.71020734 * float(x[1755]))+ (5.6141907e-05 * float(x[1756]))+ (2.1395795 * float(x[1757]))+ (1.0306497 * float(x[1758]))+ (-0.76813984 * float(x[1759]))+ (0.05061794 * float(x[1760]))+ (0.34741554 * float(x[1761]))+ (1.0030768 * float(x[1762]))+ (-1.3331935 * float(x[1763]))+ (0.3260855 * float(x[1764]))+ (0.15154201 * float(x[1765]))+ (0.642391 * float(x[1766]))+ (2.7261858 * float(x[1767]))+ (-0.10476353 * float(x[1768]))+ (-1.4063146 * float(x[1769]))+ (-0.85637933 * float(x[1770]))+ (-2.2600715 * float(x[1771]))+ (1.9558169 * float(x[1772]))+ (1.3576887 * float(x[1773]))+ (-0.82188547 * float(x[1774]))+ (0.4150781 * float(x[1775]))) + 0.65066004), 0)
    h_1 = max((((-0.34094062 * float(x[0]))+ (0.3219182 * float(x[1]))+ (-0.04991757 * float(x[2]))+ (0.12907346 * float(x[3]))+ (0.25770926 * float(x[4]))+ (-0.11717844 * float(x[5]))+ (-0.42030334 * float(x[6]))+ (-0.67637473 * float(x[7]))+ (-0.9589639 * float(x[8]))+ (0.46911994 * float(x[9]))+ (-0.7954418 * float(x[10]))+ (-0.0654961 * float(x[11]))+ (-0.3436091 * float(x[12]))+ (-0.43068174 * float(x[13]))+ (-0.7346388 * float(x[14]))+ (-1.0524957 * float(x[15]))+ (-0.3292388 * float(x[16]))+ (-0.62160707 * float(x[17]))+ (0.3849009 * float(x[18]))+ (0.9415176 * float(x[19]))+ (0.2481628 * float(x[20]))+ (0.111757755 * float(x[21]))+ (0.15566202 * float(x[22]))+ (-0.8955976 * float(x[23]))+ (-0.38704398 * float(x[24]))+ (-0.57327765 * float(x[25]))+ (0.60970587 * float(x[26]))+ (0.012676337 * float(x[27]))+ (0.40440935 * float(x[28]))+ (-0.3407203 * float(x[29]))+ (0.56424636 * float(x[30]))+ (-0.38543817 * float(x[31]))+ (-0.9125695 * float(x[32]))+ (-0.33750433 * float(x[33]))+ (-0.34013608 * float(x[34]))+ (0.47483203 * float(x[35]))+ (0.78285456 * float(x[36]))+ (0.0080267675 * float(x[37]))+ (-0.706976 * float(x[38]))+ (-0.9845534 * float(x[39]))+ (0.5336827 * float(x[40]))+ (0.08986638 * float(x[41]))+ (0.047509123 * float(x[42]))+ (0.3181019 * float(x[43]))+ (-0.3964796 * float(x[44]))+ (0.55828655 * float(x[45]))+ (-0.8887166 * float(x[46]))+ (-0.6212663 * float(x[47]))+ (0.5888482 * float(x[48]))+ (0.22234957 * float(x[49])))+ ((-0.9192731 * float(x[50]))+ (-0.20958014 * float(x[51]))+ (0.3350467 * float(x[52]))+ (-0.640344 * float(x[53]))+ (-0.19454713 * float(x[54]))+ (0.18930043 * float(x[55]))+ (-0.8645287 * float(x[56]))+ (0.06518305 * float(x[57]))+ (-0.111797705 * float(x[58]))+ (-0.25178468 * float(x[59]))+ (-0.50777775 * float(x[60]))+ (0.5117627 * float(x[61]))+ (0.21662171 * float(x[62]))+ (0.16098487 * float(x[63]))+ (0.5093757 * float(x[64]))+ (-0.88691324 * float(x[65]))+ (-0.634033 * float(x[66]))+ (-0.1810649 * float(x[67]))+ (0.010239744 * float(x[68]))+ (-0.18307084 * float(x[69]))+ (-0.015444659 * float(x[70]))+ (-0.246084 * float(x[71]))+ (-0.920773 * float(x[72]))+ (0.6081518 * float(x[73]))+ (-0.30340013 * float(x[74]))+ (0.17941444 * float(x[75]))+ (0.18693052 * float(x[76]))+ (0.40487552 * float(x[77]))+ (-0.0022205072 * float(x[78]))+ (0.39584082 * float(x[79]))+ (0.75191927 * float(x[80]))+ (0.9669379 * float(x[81]))+ (0.42360115 * float(x[82]))+ (0.47132233 * float(x[83]))+ (0.7809893 * float(x[84]))+ (0.1109634 * float(x[85]))+ (0.51988065 * float(x[86]))+ (0.4077696 * float(x[87]))+ (0.055431128 * float(x[88]))+ (0.82213247 * float(x[89]))+ (-1.1817509 * float(x[90]))+ (0.003959809 * float(x[91]))+ (0.113037184 * float(x[92]))+ (-0.97912675 * float(x[93]))+ (0.20629588 * float(x[94]))+ (-0.59134203 * float(x[95]))+ (-0.41956142 * float(x[96]))+ (0.93167144 * float(x[97]))+ (-0.28128907 * float(x[98]))+ (-1.0047687 * float(x[99])))+ ((0.5683723 * float(x[100]))+ (-0.94243824 * float(x[101]))+ (0.34649175 * float(x[102]))+ (-0.71471053 * float(x[103]))+ (0.48861316 * float(x[104]))+ (-0.8546394 * float(x[105]))+ (-0.29919586 * float(x[106]))+ (-0.85435313 * float(x[107]))+ (0.5949463 * float(x[108]))+ (0.8678674 * float(x[109]))+ (0.41596392 * float(x[110]))+ (0.653718 * float(x[111]))+ (-0.683455 * float(x[112]))+ (-0.24130946 * float(x[113]))+ (0.08039228 * float(x[114]))+ (0.9273855 * float(x[115]))+ (0.18143217 * float(x[116]))+ (-0.14916107 * float(x[117]))+ (0.8373332 * float(x[118]))+ (0.36808586 * float(x[119]))+ (0.6464438 * float(x[120]))+ (-0.8627469 * float(x[121]))+ (-0.92769456 * float(x[122]))+ (0.5941961 * float(x[123]))+ (0.6552206 * float(x[124]))+ (-0.8893756 * float(x[125]))+ (-0.0047621806 * float(x[126]))+ (-0.37572503 * float(x[127]))+ (-0.41159678 * float(x[128]))+ (-0.7690272 * float(x[129]))+ (-0.41966045 * float(x[130]))+ (0.66959655 * float(x[131]))+ (0.7513355 * float(x[132]))+ (0.18340144 * float(x[133]))+ (-0.1770969 * float(x[134]))+ (-0.8162336 * float(x[135]))+ (-0.71109176 * float(x[136]))+ (0.9265447 * float(x[137]))+ (0.6949989 * float(x[138]))+ (0.9132153 * float(x[139]))+ (0.07899804 * float(x[140]))+ (0.9165415 * float(x[141]))+ (0.38697734 * float(x[142]))+ (0.41769508 * float(x[143]))+ (0.61954373 * float(x[144]))+ (0.5035978 * float(x[145]))+ (0.47927532 * float(x[146]))+ (-0.86796814 * float(x[147]))+ (0.61893976 * float(x[148]))+ (-0.5915368 * float(x[149])))+ ((0.31842548 * float(x[150]))+ (0.8280747 * float(x[151]))+ (0.46581802 * float(x[152]))+ (0.22924307 * float(x[153]))+ (-0.74239504 * float(x[154]))+ (-0.44125536 * float(x[155]))+ (0.68502027 * float(x[156]))+ (0.8624133 * float(x[157]))+ (-0.43811205 * float(x[158]))+ (-0.27457494 * float(x[159]))+ (0.088583596 * float(x[160]))+ (-0.61608875 * float(x[161]))+ (0.28436214 * float(x[162]))+ (-0.7872276 * float(x[163]))+ (-0.61497116 * float(x[164]))+ (0.46204284 * float(x[165]))+ (-0.6849607 * float(x[166]))+ (-0.0153210275 * float(x[167]))+ (0.68819773 * float(x[168]))+ (-0.099459864 * float(x[169]))+ (-0.9521495 * float(x[170]))+ (-0.72509074 * float(x[171]))+ (-0.4298553 * float(x[172]))+ (-0.1642004 * float(x[173]))+ (-1.0057462 * float(x[174]))+ (0.9997928 * float(x[175]))+ (0.59881973 * float(x[176]))+ (-0.8016051 * float(x[177]))+ (-0.36422157 * float(x[178]))+ (0.7594432 * float(x[179]))+ (-0.8974991 * float(x[180]))+ (0.40462226 * float(x[181]))+ (-0.8002668 * float(x[182]))+ (0.046657745 * float(x[183]))+ (0.8437796 * float(x[184]))+ (-0.7513446 * float(x[185]))+ (-0.3143348 * float(x[186]))+ (0.6586981 * float(x[187]))+ (-1.0621016 * float(x[188]))+ (0.2998826 * float(x[189]))+ (0.6516821 * float(x[190]))+ (0.11840235 * float(x[191]))+ (-0.100357674 * float(x[192]))+ (0.29351148 * float(x[193]))+ (0.21541692 * float(x[194]))+ (-0.16032745 * float(x[195]))+ (-0.05013067 * float(x[196]))+ (0.37302768 * float(x[197]))+ (-0.022799747 * float(x[198]))+ (-1.1048244 * float(x[199])))+ ((-0.106825836 * float(x[200]))+ (-1.1904274 * float(x[201]))+ (-0.43915144 * float(x[202]))+ (-1.0204058 * float(x[203]))+ (-0.9867332 * float(x[204]))+ (-0.0019257795 * float(x[205]))+ (-0.9303005 * float(x[206]))+ (-0.14722848 * float(x[207]))+ (-0.9148309 * float(x[208]))+ (0.5846768 * float(x[209]))+ (0.19215812 * float(x[210]))+ (0.16954702 * float(x[211]))+ (-0.113180086 * float(x[212]))+ (-0.3301076 * float(x[213]))+ (0.35962194 * float(x[214]))+ (-1.0523505 * float(x[215]))+ (-0.40989673 * float(x[216]))+ (-0.004135623 * float(x[217]))+ (-0.28380468 * float(x[218]))+ (0.7159551 * float(x[219]))+ (-0.11143794 * float(x[220]))+ (0.33751816 * float(x[221]))+ (0.72913975 * float(x[222]))+ (0.47364622 * float(x[223]))+ (-0.72320366 * float(x[224]))+ (-0.9304029 * float(x[225]))+ (-0.3960815 * float(x[226]))+ (0.0007583245 * float(x[227]))+ (0.39731508 * float(x[228]))+ (-0.10425951 * float(x[229]))+ (0.7323114 * float(x[230]))+ (-0.2777223 * float(x[231]))+ (-0.6135485 * float(x[232]))+ (-0.92759997 * float(x[233]))+ (0.4344479 * float(x[234]))+ (0.03636607 * float(x[235]))+ (0.38303003 * float(x[236]))+ (-0.008306702 * float(x[237]))+ (-0.5409908 * float(x[238]))+ (0.4193509 * float(x[239]))+ (-0.51650125 * float(x[240]))+ (-0.011576864 * float(x[241]))+ (0.64643496 * float(x[242]))+ (0.740006 * float(x[243]))+ (-0.17698409 * float(x[244]))+ (-0.38789377 * float(x[245]))+ (-0.88143826 * float(x[246]))+ (0.78723127 * float(x[247]))+ (0.5301593 * float(x[248]))+ (-0.20139554 * float(x[249])))+ ((-0.13410042 * float(x[250]))+ (-0.85353917 * float(x[251]))+ (0.62403446 * float(x[252]))+ (0.17547193 * float(x[253]))+ (0.154122 * float(x[254]))+ (0.43123907 * float(x[255]))+ (0.7060153 * float(x[256]))+ (-0.9908688 * float(x[257]))+ (-0.79421115 * float(x[258]))+ (0.13468215 * float(x[259]))+ (-0.22794238 * float(x[260]))+ (-0.6448891 * float(x[261]))+ (0.74600047 * float(x[262]))+ (0.91192734 * float(x[263]))+ (-0.6857105 * float(x[264]))+ (0.7058727 * float(x[265]))+ (-0.5271368 * float(x[266]))+ (0.9333676 * float(x[267]))+ (0.9181087 * float(x[268]))+ (0.13707513 * float(x[269]))+ (0.41193 * float(x[270]))+ (0.39423123 * float(x[271]))+ (0.32473642 * float(x[272]))+ (0.29402447 * float(x[273]))+ (-0.4944876 * float(x[274]))+ (0.13402455 * float(x[275]))+ (0.4939754 * float(x[276]))+ (0.90577286 * float(x[277]))+ (-0.4549532 * float(x[278]))+ (0.5090189 * float(x[279]))+ (-0.59983224 * float(x[280]))+ (0.97987616 * float(x[281]))+ (-0.15559626 * float(x[282]))+ (0.47729686 * float(x[283]))+ (-0.5588722 * float(x[284]))+ (0.13507172 * float(x[285]))+ (0.50106484 * float(x[286]))+ (0.50279826 * float(x[287]))+ (0.405823 * float(x[288]))+ (-0.36605906 * float(x[289]))+ (-0.12751602 * float(x[290]))+ (-0.7466578 * float(x[291]))+ (0.09979232 * float(x[292]))+ (-0.16550149 * float(x[293]))+ (-0.9421624 * float(x[294]))+ (-0.57352686 * float(x[295]))+ (-0.75182045 * float(x[296]))+ (-0.8309738 * float(x[297]))+ (-0.9266465 * float(x[298]))+ (0.082113944 * float(x[299])))+ ((0.6420291 * float(x[300]))+ (0.613593 * float(x[301]))+ (-0.91597044 * float(x[302]))+ (-0.6248312 * float(x[303]))+ (-0.77467126 * float(x[304]))+ (-0.48624942 * float(x[305]))+ (-0.42439017 * float(x[306]))+ (-0.6354347 * float(x[307]))+ (0.39840293 * float(x[308]))+ (-0.20778452 * float(x[309]))+ (-0.8934984 * float(x[310]))+ (-0.17230327 * float(x[311]))+ (0.63631505 * float(x[312]))+ (-0.44520804 * float(x[313]))+ (-0.23588225 * float(x[314]))+ (-0.9082331 * float(x[315]))+ (-0.87019014 * float(x[316]))+ (0.78541756 * float(x[317]))+ (-0.91914636 * float(x[318]))+ (0.11679534 * float(x[319]))+ (-0.8996987 * float(x[320]))+ (0.91837716 * float(x[321]))+ (-0.7171625 * float(x[322]))+ (-0.7821143 * float(x[323]))+ (0.7717438 * float(x[324]))+ (-0.44831282 * float(x[325]))+ (-0.2231094 * float(x[326]))+ (0.6223283 * float(x[327]))+ (0.024148716 * float(x[328]))+ (-0.0732333 * float(x[329]))+ (0.4665084 * float(x[330]))+ (0.5730174 * float(x[331]))+ (-0.5499822 * float(x[332]))+ (0.2626139 * float(x[333]))+ (0.9282324 * float(x[334]))+ (0.82349783 * float(x[335]))+ (-0.09778318 * float(x[336]))+ (-0.77509826 * float(x[337]))+ (-0.06362332 * float(x[338]))+ (0.4001421 * float(x[339]))+ (-0.52504706 * float(x[340]))+ (-0.821591 * float(x[341]))+ (0.87488943 * float(x[342]))+ (-0.7021222 * float(x[343]))+ (-0.83432287 * float(x[344]))+ (0.0649119 * float(x[345]))+ (-0.23032291 * float(x[346]))+ (0.7538418 * float(x[347]))+ (-0.30269387 * float(x[348]))+ (-0.4643022 * float(x[349])))+ ((0.4953822 * float(x[350]))+ (-0.86627316 * float(x[351]))+ (0.7577901 * float(x[352]))+ (0.7440072 * float(x[353]))+ (0.78079396 * float(x[354]))+ (0.6243869 * float(x[355]))+ (0.3750649 * float(x[356]))+ (-0.81266737 * float(x[357]))+ (-0.12972161 * float(x[358]))+ (-0.7450003 * float(x[359]))+ (0.20233043 * float(x[360]))+ (-0.44319704 * float(x[361]))+ (0.91878366 * float(x[362]))+ (0.829815 * float(x[363]))+ (-0.45169204 * float(x[364]))+ (-0.7636756 * float(x[365]))+ (0.6028406 * float(x[366]))+ (-0.004678151 * float(x[367]))+ (0.8310025 * float(x[368]))+ (0.9475291 * float(x[369]))+ (0.25310755 * float(x[370]))+ (0.8891167 * float(x[371]))+ (0.840987 * float(x[372]))+ (0.93515044 * float(x[373]))+ (-0.96763957 * float(x[374]))+ (-0.78140044 * float(x[375]))+ (-1.0242349 * float(x[376]))+ (-0.36676303 * float(x[377]))+ (-0.33798587 * float(x[378]))+ (0.124096006 * float(x[379]))+ (0.924129 * float(x[380]))+ (0.3796702 * float(x[381]))+ (-0.13446745 * float(x[382]))+ (0.0030497515 * float(x[383]))+ (-0.7820171 * float(x[384]))+ (0.5712649 * float(x[385]))+ (0.26740113 * float(x[386]))+ (-0.26147875 * float(x[387]))+ (0.22758995 * float(x[388]))+ (0.84301734 * float(x[389]))+ (-0.383036 * float(x[390]))+ (0.90722424 * float(x[391]))+ (-0.65630287 * float(x[392]))+ (0.14444539 * float(x[393]))+ (0.17178863 * float(x[394]))+ (0.1098908 * float(x[395]))+ (-0.24462453 * float(x[396]))+ (-0.93258905 * float(x[397]))+ (-0.07752938 * float(x[398]))+ (-0.06441144 * float(x[399])))+ ((-0.7166324 * float(x[400]))+ (0.34446287 * float(x[401]))+ (-0.20593783 * float(x[402]))+ (0.61520183 * float(x[403]))+ (0.72410715 * float(x[404]))+ (-0.41675058 * float(x[405]))+ (-0.5853208 * float(x[406]))+ (0.49197307 * float(x[407]))+ (0.8572339 * float(x[408]))+ (-0.20637248 * float(x[409]))+ (-0.6277245 * float(x[410]))+ (-0.44187707 * float(x[411]))+ (-0.34539276 * float(x[412]))+ (-0.6306971 * float(x[413]))+ (-0.17218888 * float(x[414]))+ (-0.7586504 * float(x[415]))+ (0.40323797 * float(x[416]))+ (-0.7507121 * float(x[417]))+ (0.40080866 * float(x[418]))+ (-0.3200742 * float(x[419]))+ (-0.59810674 * float(x[420]))+ (-0.2635808 * float(x[421]))+ (0.72243 * float(x[422]))+ (-0.1608172 * float(x[423]))+ (-0.9187621 * float(x[424]))+ (0.07725048 * float(x[425]))+ (0.69290894 * float(x[426]))+ (0.55239075 * float(x[427]))+ (-0.2917852 * float(x[428]))+ (-0.67054576 * float(x[429]))+ (0.90499085 * float(x[430]))+ (0.2300392 * float(x[431]))+ (-0.39896035 * float(x[432]))+ (-0.22730587 * float(x[433]))+ (-0.90705806 * float(x[434]))+ (-0.81197345 * float(x[435]))+ (-0.96252906 * float(x[436]))+ (-0.5941089 * float(x[437]))+ (-0.8131487 * float(x[438]))+ (-0.6715095 * float(x[439]))+ (0.31917235 * float(x[440]))+ (0.22684933 * float(x[441]))+ (-0.18974039 * float(x[442]))+ (0.87657154 * float(x[443]))+ (0.81539357 * float(x[444]))+ (0.049057215 * float(x[445]))+ (0.5225625 * float(x[446]))+ (-0.8018495 * float(x[447]))+ (-0.06724564 * float(x[448]))+ (0.32584712 * float(x[449])))+ ((0.79398865 * float(x[450]))+ (-0.91213465 * float(x[451]))+ (-0.6974736 * float(x[452]))+ (0.75044984 * float(x[453]))+ (0.9839687 * float(x[454]))+ (-0.22665109 * float(x[455]))+ (0.6267475 * float(x[456]))+ (0.8352936 * float(x[457]))+ (0.62225515 * float(x[458]))+ (-0.04346834 * float(x[459]))+ (0.7749112 * float(x[460]))+ (-0.10043359 * float(x[461]))+ (0.28334022 * float(x[462]))+ (-0.90202856 * float(x[463]))+ (0.3338286 * float(x[464]))+ (0.0418625 * float(x[465]))+ (-0.06125875 * float(x[466]))+ (0.9913284 * float(x[467]))+ (0.7564033 * float(x[468]))+ (-0.06714485 * float(x[469]))+ (0.7722652 * float(x[470]))+ (0.2744684 * float(x[471]))+ (0.82473373 * float(x[472]))+ (-0.39436975 * float(x[473]))+ (0.36985502 * float(x[474]))+ (-0.10273632 * float(x[475]))+ (-0.73465526 * float(x[476]))+ (0.5831103 * float(x[477]))+ (-0.44883844 * float(x[478]))+ (-0.9573449 * float(x[479]))+ (0.07034631 * float(x[480]))+ (-0.6049706 * float(x[481]))+ (0.98406434 * float(x[482]))+ (0.7855591 * float(x[483]))+ (0.39603516 * float(x[484]))+ (0.2133486 * float(x[485]))+ (-0.5001597 * float(x[486]))+ (-0.5523695 * float(x[487]))+ (-0.34578657 * float(x[488]))+ (-0.64627814 * float(x[489]))+ (0.54101527 * float(x[490]))+ (-0.83964795 * float(x[491]))+ (0.30191672 * float(x[492]))+ (0.7859264 * float(x[493]))+ (0.5951905 * float(x[494]))+ (-0.02944168 * float(x[495]))+ (0.5346516 * float(x[496]))+ (0.8658009 * float(x[497]))+ (-0.58775425 * float(x[498]))+ (-0.119269 * float(x[499])))+ ((0.017034514 * float(x[500]))+ (0.3714293 * float(x[501]))+ (0.8408834 * float(x[502]))+ (-0.27988437 * float(x[503]))+ (-0.7246805 * float(x[504]))+ (0.29873067 * float(x[505]))+ (0.17053959 * float(x[506]))+ (-0.033112004 * float(x[507]))+ (0.07418153 * float(x[508]))+ (0.083964445 * float(x[509]))+ (0.5733836 * float(x[510]))+ (-0.44600832 * float(x[511]))+ (0.27819368 * float(x[512]))+ (0.045081966 * float(x[513]))+ (-0.68495506 * float(x[514]))+ (-0.08251589 * float(x[515]))+ (0.52216923 * float(x[516]))+ (-0.35470447 * float(x[517]))+ (-0.48435396 * float(x[518]))+ (-0.68551433 * float(x[519]))+ (0.3669301 * float(x[520]))+ (0.9805072 * float(x[521]))+ (0.030432517 * float(x[522]))+ (-0.29820403 * float(x[523]))+ (0.19302508 * float(x[524]))+ (-0.643523 * float(x[525]))+ (0.29609114 * float(x[526]))+ (-0.20162751 * float(x[527]))+ (-0.54167783 * float(x[528]))+ (0.3081239 * float(x[529]))+ (-0.31883934 * float(x[530]))+ (-0.848608 * float(x[531]))+ (0.82730263 * float(x[532]))+ (-0.3070246 * float(x[533]))+ (0.13436729 * float(x[534]))+ (0.9857229 * float(x[535]))+ (-0.8370503 * float(x[536]))+ (0.22630215 * float(x[537]))+ (-0.97849107 * float(x[538]))+ (0.4717096 * float(x[539]))+ (-0.5047972 * float(x[540]))+ (0.75467443 * float(x[541]))+ (-0.51073587 * float(x[542]))+ (-0.465579 * float(x[543]))+ (-0.84243435 * float(x[544]))+ (-0.8249306 * float(x[545]))+ (-0.4436627 * float(x[546]))+ (0.4826383 * float(x[547]))+ (0.47383526 * float(x[548]))+ (-0.10975989 * float(x[549])))+ ((0.82535154 * float(x[550]))+ (0.19032408 * float(x[551]))+ (-0.08290985 * float(x[552]))+ (0.906013 * float(x[553]))+ (-0.79162693 * float(x[554]))+ (-0.8054094 * float(x[555]))+ (-0.7291644 * float(x[556]))+ (-0.0055763363 * float(x[557]))+ (-0.19900149 * float(x[558]))+ (0.2946734 * float(x[559]))+ (0.3958108 * float(x[560]))+ (0.568138 * float(x[561]))+ (-0.8602738 * float(x[562]))+ (-0.3847598 * float(x[563]))+ (0.2487779 * float(x[564]))+ (-0.4325616 * float(x[565]))+ (0.084611386 * float(x[566]))+ (-0.28226 * float(x[567]))+ (-0.31120956 * float(x[568]))+ (0.8278197 * float(x[569]))+ (-0.64784664 * float(x[570]))+ (-0.6209994 * float(x[571]))+ (-0.9674735 * float(x[572]))+ (-0.7749947 * float(x[573]))+ (-0.6840883 * float(x[574]))+ (0.55755526 * float(x[575]))+ (-0.54211986 * float(x[576]))+ (0.7714518 * float(x[577]))+ (0.3661192 * float(x[578]))+ (-0.80063796 * float(x[579]))+ (0.4535459 * float(x[580]))+ (-0.08532121 * float(x[581]))+ (0.59064555 * float(x[582]))+ (0.1471225 * float(x[583]))+ (-0.17180243 * float(x[584]))+ (-0.9760424 * float(x[585]))+ (-0.9278826 * float(x[586]))+ (0.5886145 * float(x[587]))+ (-0.90120596 * float(x[588]))+ (-0.34639972 * float(x[589]))+ (-0.70009214 * float(x[590]))+ (-0.111843206 * float(x[591]))+ (0.5573222 * float(x[592]))+ (-0.98032236 * float(x[593]))+ (0.22224264 * float(x[594]))+ (-0.80338806 * float(x[595]))+ (0.49314585 * float(x[596]))+ (0.5527933 * float(x[597]))+ (-0.51418746 * float(x[598]))+ (-0.5130507 * float(x[599])))+ ((0.15047227 * float(x[600]))+ (-0.24643955 * float(x[601]))+ (0.6878239 * float(x[602]))+ (-0.6811398 * float(x[603]))+ (-0.8851882 * float(x[604]))+ (0.33312345 * float(x[605]))+ (-0.68782806 * float(x[606]))+ (-0.81317526 * float(x[607]))+ (0.38678735 * float(x[608]))+ (0.72665316 * float(x[609]))+ (0.5465919 * float(x[610]))+ (-0.7023108 * float(x[611]))+ (0.102503926 * float(x[612]))+ (-0.40574402 * float(x[613]))+ (-0.81868935 * float(x[614]))+ (-0.45618308 * float(x[615]))+ (-0.1198616 * float(x[616]))+ (-0.5899839 * float(x[617]))+ (0.577409 * float(x[618]))+ (0.5538828 * float(x[619]))+ (-0.5131598 * float(x[620]))+ (0.5133688 * float(x[621]))+ (-0.3194122 * float(x[622]))+ (0.18596452 * float(x[623]))+ (0.11277138 * float(x[624]))+ (0.10259008 * float(x[625]))+ (-0.61190534 * float(x[626]))+ (-0.67542654 * float(x[627]))+ (-0.03251639 * float(x[628]))+ (0.73532176 * float(x[629]))+ (-0.9039204 * float(x[630]))+ (0.12820642 * float(x[631]))+ (-0.9244548 * float(x[632]))+ (-0.702901 * float(x[633]))+ (-0.65303046 * float(x[634]))+ (0.0031278268 * float(x[635]))+ (0.9176949 * float(x[636]))+ (0.15462081 * float(x[637]))+ (0.8960354 * float(x[638]))+ (-0.5942287 * float(x[639]))+ (-0.5343859 * float(x[640]))+ (-0.13554977 * float(x[641]))+ (-0.26522925 * float(x[642]))+ (0.8840694 * float(x[643]))+ (0.5885772 * float(x[644]))+ (0.9634674 * float(x[645]))+ (-0.12816267 * float(x[646]))+ (-0.9439991 * float(x[647]))+ (-0.89142793 * float(x[648]))+ (-0.49714342 * float(x[649])))+ ((-0.29422596 * float(x[650]))+ (-0.8601022 * float(x[651]))+ (0.124549456 * float(x[652]))+ (0.49604166 * float(x[653]))+ (0.10982293 * float(x[654]))+ (-0.4622153 * float(x[655]))+ (0.5310777 * float(x[656]))+ (0.5950125 * float(x[657]))+ (-0.377146 * float(x[658]))+ (0.33333498 * float(x[659]))+ (0.45527422 * float(x[660]))+ (-0.57669204 * float(x[661]))+ (-0.7493272 * float(x[662]))+ (0.6539576 * float(x[663]))+ (-0.016129982 * float(x[664]))+ (0.5633316 * float(x[665]))+ (-0.23205678 * float(x[666]))+ (0.83552027 * float(x[667]))+ (0.26727852 * float(x[668]))+ (0.9364412 * float(x[669]))+ (-0.5706875 * float(x[670]))+ (0.012826921 * float(x[671]))+ (-0.66643137 * float(x[672]))+ (-0.7333333 * float(x[673]))+ (0.38302684 * float(x[674]))+ (-0.55856353 * float(x[675]))+ (0.5912807 * float(x[676]))+ (0.060179196 * float(x[677]))+ (0.675512 * float(x[678]))+ (-0.38721007 * float(x[679]))+ (0.121940546 * float(x[680]))+ (0.16586614 * float(x[681]))+ (-0.52650267 * float(x[682]))+ (0.45482457 * float(x[683]))+ (0.29170078 * float(x[684]))+ (0.6469126 * float(x[685]))+ (0.10369331 * float(x[686]))+ (-0.096230075 * float(x[687]))+ (-0.4177806 * float(x[688]))+ (-0.14016981 * float(x[689]))+ (0.18274803 * float(x[690]))+ (-0.43678463 * float(x[691]))+ (0.015400087 * float(x[692]))+ (0.46015432 * float(x[693]))+ (-0.12396265 * float(x[694]))+ (-0.55152583 * float(x[695]))+ (-0.1197059 * float(x[696]))+ (0.6744882 * float(x[697]))+ (0.13398685 * float(x[698]))+ (0.41291332 * float(x[699])))+ ((-0.60416603 * float(x[700]))+ (-0.7124382 * float(x[701]))+ (-0.6136613 * float(x[702]))+ (0.38390058 * float(x[703]))+ (0.75306624 * float(x[704]))+ (0.9723458 * float(x[705]))+ (0.7549402 * float(x[706]))+ (0.7270848 * float(x[707]))+ (0.5327772 * float(x[708]))+ (0.97708994 * float(x[709]))+ (-0.87883615 * float(x[710]))+ (0.40339878 * float(x[711]))+ (0.4901929 * float(x[712]))+ (-0.03920874 * float(x[713]))+ (0.927325 * float(x[714]))+ (0.36560723 * float(x[715]))+ (-0.024622204 * float(x[716]))+ (0.06840014 * float(x[717]))+ (0.75846297 * float(x[718]))+ (0.0069441176 * float(x[719]))+ (0.20495611 * float(x[720]))+ (0.7337355 * float(x[721]))+ (0.1770837 * float(x[722]))+ (0.84467703 * float(x[723]))+ (-0.45006925 * float(x[724]))+ (-0.21812294 * float(x[725]))+ (-0.7507724 * float(x[726]))+ (-0.41046333 * float(x[727]))+ (0.17943127 * float(x[728]))+ (0.49392164 * float(x[729]))+ (-0.651696 * float(x[730]))+ (-0.8603025 * float(x[731]))+ (-0.0051880153 * float(x[732]))+ (-0.0867604 * float(x[733]))+ (-0.06784382 * float(x[734]))+ (-0.24448267 * float(x[735]))+ (-0.9000236 * float(x[736]))+ (0.35451424 * float(x[737]))+ (-0.79684925 * float(x[738]))+ (-0.37166747 * float(x[739]))+ (0.6601421 * float(x[740]))+ (0.84639037 * float(x[741]))+ (-0.76587504 * float(x[742]))+ (-0.51389927 * float(x[743]))+ (0.7761855 * float(x[744]))+ (-0.41921082 * float(x[745]))+ (-0.9528285 * float(x[746]))+ (0.76678604 * float(x[747]))+ (-0.2138519 * float(x[748]))+ (-0.8715928 * float(x[749])))+ ((-0.6633774 * float(x[750]))+ (0.5084306 * float(x[751]))+ (0.032624807 * float(x[752]))+ (0.38196856 * float(x[753]))+ (0.25929308 * float(x[754]))+ (0.2436602 * float(x[755]))+ (-0.5703564 * float(x[756]))+ (0.11220719 * float(x[757]))+ (-0.40229803 * float(x[758]))+ (-0.8319779 * float(x[759]))+ (0.08506908 * float(x[760]))+ (-0.5721242 * float(x[761]))+ (0.9744585 * float(x[762]))+ (0.8616052 * float(x[763]))+ (-0.6973149 * float(x[764]))+ (-0.35497484 * float(x[765]))+ (-0.90770644 * float(x[766]))+ (-0.05586082 * float(x[767]))+ (-0.8342799 * float(x[768]))+ (0.9262435 * float(x[769]))+ (0.21075648 * float(x[770]))+ (-0.35336387 * float(x[771]))+ (-0.25087735 * float(x[772]))+ (0.5003194 * float(x[773]))+ (0.32287621 * float(x[774]))+ (-0.36223853 * float(x[775]))+ (0.7751901 * float(x[776]))+ (0.6780962 * float(x[777]))+ (-0.8444361 * float(x[778]))+ (-0.906521 * float(x[779]))+ (0.6416641 * float(x[780]))+ (-0.26841033 * float(x[781]))+ (-0.9730266 * float(x[782]))+ (-0.80886513 * float(x[783]))+ (0.67291975 * float(x[784]))+ (0.62887025 * float(x[785]))+ (0.47124684 * float(x[786]))+ (-0.2653671 * float(x[787]))+ (-0.49171397 * float(x[788]))+ (0.7475553 * float(x[789]))+ (-0.66746193 * float(x[790]))+ (-0.14749439 * float(x[791]))+ (0.7529763 * float(x[792]))+ (-0.0649865 * float(x[793]))+ (-0.2859803 * float(x[794]))+ (0.021985115 * float(x[795]))+ (0.63739496 * float(x[796]))+ (-0.042315822 * float(x[797]))+ (0.14929776 * float(x[798]))+ (-0.21527764 * float(x[799])))+ ((0.072722256 * float(x[800]))+ (0.59159577 * float(x[801]))+ (0.088185616 * float(x[802]))+ (-0.0074938955 * float(x[803]))+ (-0.057948977 * float(x[804]))+ (0.55293494 * float(x[805]))+ (-0.54365396 * float(x[806]))+ (-0.15074006 * float(x[807]))+ (-0.38478446 * float(x[808]))+ (-0.76414037 * float(x[809]))+ (0.24055447 * float(x[810]))+ (0.3242435 * float(x[811]))+ (-0.8056403 * float(x[812]))+ (0.79927427 * float(x[813]))+ (0.18264322 * float(x[814]))+ (-0.4383784 * float(x[815]))+ (-0.9589212 * float(x[816]))+ (0.081906535 * float(x[817]))+ (-0.33467275 * float(x[818]))+ (0.95853543 * float(x[819]))+ (0.9329773 * float(x[820]))+ (-0.03914733 * float(x[821]))+ (0.3702552 * float(x[822]))+ (0.15979573 * float(x[823]))+ (-0.79577875 * float(x[824]))+ (-0.45136616 * float(x[825]))+ (-0.6499081 * float(x[826]))+ (-0.35490215 * float(x[827]))+ (-0.46180493 * float(x[828]))+ (-0.52186555 * float(x[829]))+ (0.5092116 * float(x[830]))+ (0.69894195 * float(x[831]))+ (-0.08575821 * float(x[832]))+ (0.5528738 * float(x[833]))+ (-0.7908769 * float(x[834]))+ (0.6137434 * float(x[835]))+ (0.23904873 * float(x[836]))+ (0.41998738 * float(x[837]))+ (-0.6442242 * float(x[838]))+ (0.8138181 * float(x[839]))+ (-0.19167948 * float(x[840]))+ (-0.72576296 * float(x[841]))+ (0.5298049 * float(x[842]))+ (0.57552695 * float(x[843]))+ (0.000335317 * float(x[844]))+ (-0.45244697 * float(x[845]))+ (-0.8253387 * float(x[846]))+ (-0.3262382 * float(x[847]))+ (0.19056444 * float(x[848]))+ (0.49542668 * float(x[849])))+ ((0.777192 * float(x[850]))+ (0.13993192 * float(x[851]))+ (-0.78755546 * float(x[852]))+ (0.36610985 * float(x[853]))+ (-0.9443626 * float(x[854]))+ (0.5270846 * float(x[855]))+ (-0.055105094 * float(x[856]))+ (0.37453687 * float(x[857]))+ (0.6738577 * float(x[858]))+ (-0.40537554 * float(x[859]))+ (0.10744685 * float(x[860]))+ (-0.4546554 * float(x[861]))+ (0.42563316 * float(x[862]))+ (-0.16723152 * float(x[863]))+ (-0.3882351 * float(x[864]))+ (0.8185275 * float(x[865]))+ (-0.7424339 * float(x[866]))+ (-0.7227982 * float(x[867]))+ (-0.035093147 * float(x[868]))+ (0.51722795 * float(x[869]))+ (-0.84309685 * float(x[870]))+ (0.73906446 * float(x[871]))+ (-0.9146658 * float(x[872]))+ (-0.8083199 * float(x[873]))+ (-0.04989615 * float(x[874]))+ (-0.09377385 * float(x[875]))+ (-0.4265075 * float(x[876]))+ (0.87535834 * float(x[877]))+ (0.16273491 * float(x[878]))+ (-0.93066657 * float(x[879]))+ (0.48312515 * float(x[880]))+ (-0.6269516 * float(x[881]))+ (0.4984672 * float(x[882]))+ (0.112271704 * float(x[883]))+ (-0.98509985 * float(x[884]))+ (0.6647981 * float(x[885]))+ (0.021022532 * float(x[886]))+ (0.57838655 * float(x[887]))+ (-0.10912385 * float(x[888]))+ (0.6982878 * float(x[889]))+ (0.70445967 * float(x[890]))+ (0.06613523 * float(x[891]))+ (0.38495052 * float(x[892]))+ (-0.27815172 * float(x[893]))+ (0.6572162 * float(x[894]))+ (-0.53121084 * float(x[895]))+ (0.88308614 * float(x[896]))+ (-0.3402248 * float(x[897]))+ (0.3989602 * float(x[898]))+ (-0.59786123 * float(x[899])))+ ((-0.8314003 * float(x[900]))+ (-0.5807603 * float(x[901]))+ (0.9972514 * float(x[902]))+ (0.95169616 * float(x[903]))+ (-0.9383174 * float(x[904]))+ (-0.0356413 * float(x[905]))+ (0.31729978 * float(x[906]))+ (-0.7568064 * float(x[907]))+ (-0.25377762 * float(x[908]))+ (-0.45071584 * float(x[909]))+ (-0.050559916 * float(x[910]))+ (-0.43479195 * float(x[911]))+ (-0.13186906 * float(x[912]))+ (-0.40855354 * float(x[913]))+ (-0.96865153 * float(x[914]))+ (0.68811864 * float(x[915]))+ (0.7173515 * float(x[916]))+ (0.9308173 * float(x[917]))+ (0.46682426 * float(x[918]))+ (0.6244247 * float(x[919]))+ (-0.87445515 * float(x[920]))+ (0.9210352 * float(x[921]))+ (-0.38833705 * float(x[922]))+ (-0.90545064 * float(x[923]))+ (0.18238077 * float(x[924]))+ (-0.91679096 * float(x[925]))+ (-0.6536331 * float(x[926]))+ (0.94315237 * float(x[927]))+ (0.19778533 * float(x[928]))+ (0.5678945 * float(x[929]))+ (-0.97168326 * float(x[930]))+ (-0.122537054 * float(x[931]))+ (-0.15594864 * float(x[932]))+ (0.569895 * float(x[933]))+ (-0.5281872 * float(x[934]))+ (-0.20847973 * float(x[935]))+ (-0.909287 * float(x[936]))+ (-0.28618154 * float(x[937]))+ (-0.69030094 * float(x[938]))+ (0.7891109 * float(x[939]))+ (0.8216303 * float(x[940]))+ (0.97185063 * float(x[941]))+ (-0.36079335 * float(x[942]))+ (-0.25597355 * float(x[943]))+ (0.4340774 * float(x[944]))+ (0.4017188 * float(x[945]))+ (-0.0034296454 * float(x[946]))+ (0.08239896 * float(x[947]))+ (-0.6577706 * float(x[948]))+ (-0.5906932 * float(x[949])))+ ((-0.20534211 * float(x[950]))+ (-0.9261489 * float(x[951]))+ (-0.060683724 * float(x[952]))+ (0.19029896 * float(x[953]))+ (-0.12351042 * float(x[954]))+ (-0.8558712 * float(x[955]))+ (0.43129462 * float(x[956]))+ (-0.8855237 * float(x[957]))+ (0.5891488 * float(x[958]))+ (-0.28449836 * float(x[959]))+ (-0.72841567 * float(x[960]))+ (0.72715163 * float(x[961]))+ (0.36898828 * float(x[962]))+ (-0.14513917 * float(x[963]))+ (-0.14063065 * float(x[964]))+ (-0.7011639 * float(x[965]))+ (0.25833 * float(x[966]))+ (-0.46728554 * float(x[967]))+ (0.2618578 * float(x[968]))+ (-0.55332386 * float(x[969]))+ (-0.7839209 * float(x[970]))+ (-0.03957489 * float(x[971]))+ (0.74102175 * float(x[972]))+ (-0.5137048 * float(x[973]))+ (0.20116487 * float(x[974]))+ (0.4671072 * float(x[975]))+ (-0.18576464 * float(x[976]))+ (-1.0672617 * float(x[977]))+ (-1.0129296 * float(x[978]))+ (-0.8440304 * float(x[979]))+ (0.5665684 * float(x[980]))+ (-0.8811502 * float(x[981]))+ (-0.16688578 * float(x[982]))+ (0.72330284 * float(x[983]))+ (-0.39191014 * float(x[984]))+ (-0.5407944 * float(x[985]))+ (0.8137155 * float(x[986]))+ (0.7946669 * float(x[987]))+ (-1.2185533 * float(x[988]))+ (-0.7353058 * float(x[989]))+ (0.9743414 * float(x[990]))+ (-0.365644 * float(x[991]))+ (-1.3466195 * float(x[992]))+ (-0.3051111 * float(x[993]))+ (0.30270728 * float(x[994]))+ (-0.73495805 * float(x[995]))+ (-1.369128 * float(x[996]))+ (-0.6699284 * float(x[997]))+ (-0.30100432 * float(x[998]))+ (0.96583354 * float(x[999])))+ ((0.32729188 * float(x[1000]))+ (0.46076143 * float(x[1001]))+ (0.7903444 * float(x[1002]))+ (0.15756598 * float(x[1003]))+ (0.12757607 * float(x[1004]))+ (-0.100014046 * float(x[1005]))+ (-0.6941634 * float(x[1006]))+ (0.021819435 * float(x[1007]))+ (0.65597796 * float(x[1008]))+ (0.83027405 * float(x[1009]))+ (-0.76678777 * float(x[1010]))+ (-0.51123214 * float(x[1011]))+ (0.55080837 * float(x[1012]))+ (0.31540272 * float(x[1013]))+ (-0.21275204 * float(x[1014]))+ (0.009820936 * float(x[1015]))+ (-0.61439264 * float(x[1016]))+ (-0.89898545 * float(x[1017]))+ (-0.32021067 * float(x[1018]))+ (0.8075726 * float(x[1019]))+ (0.23110506 * float(x[1020]))+ (0.19146913 * float(x[1021]))+ (0.55825 * float(x[1022]))+ (0.83227235 * float(x[1023]))+ (-0.19460313 * float(x[1024]))+ (-0.9569023 * float(x[1025]))+ (-0.99740636 * float(x[1026]))+ (0.23156762 * float(x[1027]))+ (0.31035668 * float(x[1028]))+ (0.8674962 * float(x[1029]))+ (-0.48843858 * float(x[1030]))+ (-0.79876393 * float(x[1031]))+ (0.6519663 * float(x[1032]))+ (-0.6793906 * float(x[1033]))+ (-0.6756995 * float(x[1034]))+ (-0.51410824 * float(x[1035]))+ (0.112582475 * float(x[1036]))+ (0.22698714 * float(x[1037]))+ (-0.9075217 * float(x[1038]))+ (0.032219533 * float(x[1039]))+ (0.19097587 * float(x[1040]))+ (-0.9099374 * float(x[1041]))+ (-0.68010175 * float(x[1042]))+ (0.14033522 * float(x[1043]))+ (-0.4382193 * float(x[1044]))+ (0.38425097 * float(x[1045]))+ (0.0859398 * float(x[1046]))+ (-0.9977054 * float(x[1047]))+ (-0.29309708 * float(x[1048]))+ (-0.5318305 * float(x[1049])))+ ((0.24704297 * float(x[1050]))+ (-0.96017927 * float(x[1051]))+ (0.12526605 * float(x[1052]))+ (-0.6921183 * float(x[1053]))+ (0.03595737 * float(x[1054]))+ (0.18263738 * float(x[1055]))+ (-0.9270035 * float(x[1056]))+ (0.05217943 * float(x[1057]))+ (-0.03145731 * float(x[1058]))+ (0.4511032 * float(x[1059]))+ (-0.18047538 * float(x[1060]))+ (-1.3226529 * float(x[1061]))+ (-0.99999195 * float(x[1062]))+ (0.79967064 * float(x[1063]))+ (0.06197768 * float(x[1064]))+ (-0.36514592 * float(x[1065]))+ (0.43108594 * float(x[1066]))+ (-0.91216457 * float(x[1067]))+ (-0.13079838 * float(x[1068]))+ (-0.28339988 * float(x[1069]))+ (0.7730785 * float(x[1070]))+ (-0.48763877 * float(x[1071]))+ (-0.66029215 * float(x[1072]))+ (-0.2832618 * float(x[1073]))+ (-1.4089761 * float(x[1074]))+ (-0.13577965 * float(x[1075]))+ (-0.44807565 * float(x[1076]))+ (0.4871432 * float(x[1077]))+ (0.8535338 * float(x[1078]))+ (0.27715093 * float(x[1079]))+ (-0.28799883 * float(x[1080]))+ (-0.47491518 * float(x[1081]))+ (0.27935123 * float(x[1082]))+ (-0.4069896 * float(x[1083]))+ (-0.901297 * float(x[1084]))+ (0.43141526 * float(x[1085]))+ (0.6840684 * float(x[1086]))+ (-0.3650601 * float(x[1087]))+ (-1.295898 * float(x[1088]))+ (-0.46550924 * float(x[1089]))+ (-0.8718783 * float(x[1090]))+ (-0.90918255 * float(x[1091]))+ (0.3838188 * float(x[1092]))+ (0.17822087 * float(x[1093]))+ (-0.79294455 * float(x[1094]))+ (-0.3238807 * float(x[1095]))+ (0.35478744 * float(x[1096]))+ (0.069958515 * float(x[1097]))+ (0.031183159 * float(x[1098]))+ (0.062323947 * float(x[1099])))+ ((-0.57632285 * float(x[1100]))+ (-0.06063492 * float(x[1101]))+ (-0.2548737 * float(x[1102]))+ (0.04878497 * float(x[1103]))+ (-0.9600166 * float(x[1104]))+ (-0.7168295 * float(x[1105]))+ (0.5639497 * float(x[1106]))+ (-0.40211824 * float(x[1107]))+ (-0.5509592 * float(x[1108]))+ (-0.5578304 * float(x[1109]))+ (-0.89739525 * float(x[1110]))+ (0.5907595 * float(x[1111]))+ (-0.33680665 * float(x[1112]))+ (0.48855492 * float(x[1113]))+ (0.41459656 * float(x[1114]))+ (-0.4012061 * float(x[1115]))+ (-0.4644572 * float(x[1116]))+ (0.10276871 * float(x[1117]))+ (-0.20246445 * float(x[1118]))+ (-0.028429376 * float(x[1119]))+ (-0.30472922 * float(x[1120]))+ (0.6767617 * float(x[1121]))+ (0.8239477 * float(x[1122]))+ (0.12036307 * float(x[1123]))+ (-0.9761443 * float(x[1124]))+ (0.7636794 * float(x[1125]))+ (0.38296026 * float(x[1126]))+ (0.2535032 * float(x[1127]))+ (-0.069494374 * float(x[1128]))+ (0.36360782 * float(x[1129]))+ (0.41610387 * float(x[1130]))+ (0.19203925 * float(x[1131]))+ (-0.07795695 * float(x[1132]))+ (-0.9734767 * float(x[1133]))+ (-0.5268629 * float(x[1134]))+ (-0.7126066 * float(x[1135]))+ (-0.16334116 * float(x[1136]))+ (-1.3739024 * float(x[1137]))+ (0.71246827 * float(x[1138]))+ (-0.16016936 * float(x[1139]))+ (-0.2583715 * float(x[1140]))+ (-0.29295254 * float(x[1141]))+ (-0.5190502 * float(x[1142]))+ (-0.21618041 * float(x[1143]))+ (-0.53883165 * float(x[1144]))+ (0.3623503 * float(x[1145]))+ (-0.6047864 * float(x[1146]))+ (-0.2683561 * float(x[1147]))+ (-0.69085884 * float(x[1148]))+ (0.87634355 * float(x[1149])))+ ((0.84705687 * float(x[1150]))+ (-0.5714406 * float(x[1151]))+ (-0.7238795 * float(x[1152]))+ (-0.27056113 * float(x[1153]))+ (-0.42028373 * float(x[1154]))+ (0.27518117 * float(x[1155]))+ (0.5257453 * float(x[1156]))+ (0.2440126 * float(x[1157]))+ (-1.4151549 * float(x[1158]))+ (0.38964707 * float(x[1159]))+ (0.22409837 * float(x[1160]))+ (-0.43992665 * float(x[1161]))+ (0.8068117 * float(x[1162]))+ (-0.16678424 * float(x[1163]))+ (0.082245 * float(x[1164]))+ (0.22772625 * float(x[1165]))+ (0.30872536 * float(x[1166]))+ (0.7809826 * float(x[1167]))+ (-0.09003344 * float(x[1168]))+ (-0.45346513 * float(x[1169]))+ (0.36047265 * float(x[1170]))+ (-0.64137894 * float(x[1171]))+ (-0.04436544 * float(x[1172]))+ (-0.11740727 * float(x[1173]))+ (-0.10645 * float(x[1174]))+ (-0.6214183 * float(x[1175]))+ (0.15531841 * float(x[1176]))+ (0.9908304 * float(x[1177]))+ (-0.9996738 * float(x[1178]))+ (-0.7365404 * float(x[1179]))+ (-0.5678449 * float(x[1180]))+ (-0.17912076 * float(x[1181]))+ (0.4551223 * float(x[1182]))+ (-0.9092113 * float(x[1183]))+ (-0.64838153 * float(x[1184]))+ (0.12648797 * float(x[1185]))+ (-0.5016147 * float(x[1186]))+ (0.96092933 * float(x[1187]))+ (-0.32688633 * float(x[1188]))+ (0.5054414 * float(x[1189]))+ (0.78573036 * float(x[1190]))+ (0.44242644 * float(x[1191]))+ (0.29873878 * float(x[1192]))+ (0.82961684 * float(x[1193]))+ (0.63136345 * float(x[1194]))+ (0.36372638 * float(x[1195]))+ (-0.41663826 * float(x[1196]))+ (-0.27444234 * float(x[1197]))+ (-0.3209046 * float(x[1198]))+ (-0.9891489 * float(x[1199])))+ ((-0.8310769 * float(x[1200]))+ (-1.3753445 * float(x[1201]))+ (0.45058498 * float(x[1202]))+ (-0.95730615 * float(x[1203]))+ (-0.78171116 * float(x[1204]))+ (-0.28850216 * float(x[1205]))+ (-0.27925494 * float(x[1206]))+ (0.4795194 * float(x[1207]))+ (-0.56317216 * float(x[1208]))+ (-0.3943346 * float(x[1209]))+ (0.12293447 * float(x[1210]))+ (-0.082819834 * float(x[1211]))+ (0.20319007 * float(x[1212]))+ (0.37076786 * float(x[1213]))+ (0.23681255 * float(x[1214]))+ (0.37936336 * float(x[1215]))+ (-0.95508206 * float(x[1216]))+ (0.2639687 * float(x[1217]))+ (0.45307654 * float(x[1218]))+ (-0.4311614 * float(x[1219]))+ (0.10847549 * float(x[1220]))+ (-0.9880617 * float(x[1221]))+ (-0.9243635 * float(x[1222]))+ (0.23551373 * float(x[1223]))+ (0.3439307 * float(x[1224]))+ (0.38692346 * float(x[1225]))+ (-0.05830128 * float(x[1226]))+ (0.19591382 * float(x[1227]))+ (-0.71217674 * float(x[1228]))+ (-0.34598818 * float(x[1229]))+ (0.0045597856 * float(x[1230]))+ (-0.77950466 * float(x[1231]))+ (-0.3493646 * float(x[1232]))+ (-0.7591467 * float(x[1233]))+ (0.73641986 * float(x[1234]))+ (0.6639117 * float(x[1235]))+ (-0.5984076 * float(x[1236]))+ (0.7874333 * float(x[1237]))+ (0.08101356 * float(x[1238]))+ (-0.7986188 * float(x[1239]))+ (0.56693137 * float(x[1240]))+ (0.1877847 * float(x[1241]))+ (0.08175127 * float(x[1242]))+ (0.647168 * float(x[1243]))+ (-0.8696497 * float(x[1244]))+ (0.5955674 * float(x[1245]))+ (-0.71834326 * float(x[1246]))+ (-0.63784194 * float(x[1247]))+ (0.0750842 * float(x[1248]))+ (0.75547504 * float(x[1249])))+ ((-0.43877602 * float(x[1250]))+ (0.5413176 * float(x[1251]))+ (-0.16859253 * float(x[1252]))+ (-0.23732069 * float(x[1253]))+ (-0.79872423 * float(x[1254]))+ (0.65573156 * float(x[1255]))+ (0.06439535 * float(x[1256]))+ (-0.27303103 * float(x[1257]))+ (-0.6579946 * float(x[1258]))+ (0.02648702 * float(x[1259]))+ (-0.6379008 * float(x[1260]))+ (-0.59422463 * float(x[1261]))+ (0.065637626 * float(x[1262]))+ (0.6924462 * float(x[1263]))+ (0.6126216 * float(x[1264]))+ (0.2147532 * float(x[1265]))+ (-0.3786477 * float(x[1266]))+ (-0.49321273 * float(x[1267]))+ (0.14186259 * float(x[1268]))+ (0.2122605 * float(x[1269]))+ (0.8343702 * float(x[1270]))+ (0.86685646 * float(x[1271]))+ (-0.34924403 * float(x[1272]))+ (-0.677574 * float(x[1273]))+ (0.9409188 * float(x[1274]))+ (0.6868428 * float(x[1275]))+ (-0.95321804 * float(x[1276]))+ (0.44552308 * float(x[1277]))+ (-0.6491449 * float(x[1278]))+ (-0.15530793 * float(x[1279]))+ (0.15541352 * float(x[1280]))+ (-0.2612358 * float(x[1281]))+ (-0.010806225 * float(x[1282]))+ (-0.6844815 * float(x[1283]))+ (-0.073441066 * float(x[1284]))+ (0.09706525 * float(x[1285]))+ (-0.87752104 * float(x[1286]))+ (0.33251414 * float(x[1287]))+ (-0.49622667 * float(x[1288]))+ (-0.23080175 * float(x[1289]))+ (-0.978935 * float(x[1290]))+ (0.5122891 * float(x[1291]))+ (0.04070265 * float(x[1292]))+ (-0.39632413 * float(x[1293]))+ (-0.97068906 * float(x[1294]))+ (-0.45269477 * float(x[1295]))+ (0.6476053 * float(x[1296]))+ (0.3307387 * float(x[1297]))+ (-0.07027764 * float(x[1298]))+ (-0.6786232 * float(x[1299])))+ ((-0.72532856 * float(x[1300]))+ (-0.45801508 * float(x[1301]))+ (0.47831988 * float(x[1302]))+ (0.09329089 * float(x[1303]))+ (-0.9531218 * float(x[1304]))+ (-0.040244076 * float(x[1305]))+ (-0.8003095 * float(x[1306]))+ (-0.21269281 * float(x[1307]))+ (-0.74742377 * float(x[1308]))+ (-0.56669545 * float(x[1309]))+ (0.85742146 * float(x[1310]))+ (0.4571991 * float(x[1311]))+ (0.5993757 * float(x[1312]))+ (0.25211704 * float(x[1313]))+ (-0.8093254 * float(x[1314]))+ (0.59417385 * float(x[1315]))+ (-0.027185235 * float(x[1316]))+ (-0.7505075 * float(x[1317]))+ (0.27502277 * float(x[1318]))+ (-0.73326015 * float(x[1319]))+ (0.6322638 * float(x[1320]))+ (-0.51016504 * float(x[1321]))+ (0.32657012 * float(x[1322]))+ (0.5894862 * float(x[1323]))+ (0.29269958 * float(x[1324]))+ (0.014696072 * float(x[1325]))+ (-0.60620046 * float(x[1326]))+ (0.8738115 * float(x[1327]))+ (-0.85245717 * float(x[1328]))+ (-0.051156085 * float(x[1329]))+ (0.3713853 * float(x[1330]))+ (-0.74349767 * float(x[1331]))+ (-0.3768343 * float(x[1332]))+ (0.7055081 * float(x[1333]))+ (-0.32614812 * float(x[1334]))+ (-0.5227742 * float(x[1335]))+ (0.51105237 * float(x[1336]))+ (-0.56619924 * float(x[1337]))+ (-0.095109805 * float(x[1338]))+ (0.7708178 * float(x[1339]))+ (0.9485236 * float(x[1340]))+ (0.490955 * float(x[1341]))+ (-0.9953151 * float(x[1342]))+ (-0.7011327 * float(x[1343]))+ (0.2113864 * float(x[1344]))+ (0.13545127 * float(x[1345]))+ (0.01975447 * float(x[1346]))+ (0.21070148 * float(x[1347]))+ (-0.84601665 * float(x[1348]))+ (-0.25027892 * float(x[1349])))+ ((0.80381316 * float(x[1350]))+ (-0.14406388 * float(x[1351]))+ (0.1137332 * float(x[1352]))+ (0.2287066 * float(x[1353]))+ (-0.45788178 * float(x[1354]))+ (0.14363271 * float(x[1355]))+ (0.09955344 * float(x[1356]))+ (0.91145915 * float(x[1357]))+ (0.8852728 * float(x[1358]))+ (0.41943133 * float(x[1359]))+ (-0.496216 * float(x[1360]))+ (-0.41026416 * float(x[1361]))+ (-0.15237407 * float(x[1362]))+ (-0.3423997 * float(x[1363]))+ (-0.8772619 * float(x[1364]))+ (-0.08970686 * float(x[1365]))+ (0.020440858 * float(x[1366]))+ (-0.9807983 * float(x[1367]))+ (0.26702067 * float(x[1368]))+ (-0.8010157 * float(x[1369]))+ (-0.770976 * float(x[1370]))+ (-0.7104634 * float(x[1371]))+ (-0.63442445 * float(x[1372]))+ (-0.24008852 * float(x[1373]))+ (-0.64909136 * float(x[1374]))+ (-0.5369993 * float(x[1375]))+ (-0.6549848 * float(x[1376]))+ (-0.8239725 * float(x[1377]))+ (-0.39690432 * float(x[1378]))+ (-0.7482672 * float(x[1379]))+ (0.19719048 * float(x[1380]))+ (-0.25059652 * float(x[1381]))+ (-0.81124675 * float(x[1382]))+ (-0.40627834 * float(x[1383]))+ (-0.9354588 * float(x[1384]))+ (0.5212718 * float(x[1385]))+ (0.32585555 * float(x[1386]))+ (-0.4777812 * float(x[1387]))+ (0.16172743 * float(x[1388]))+ (0.4257996 * float(x[1389]))+ (-0.4616275 * float(x[1390]))+ (0.8420641 * float(x[1391]))+ (0.8900703 * float(x[1392]))+ (0.29688647 * float(x[1393]))+ (-0.500909 * float(x[1394]))+ (0.44467553 * float(x[1395]))+ (0.77441823 * float(x[1396]))+ (0.39652082 * float(x[1397]))+ (0.2527438 * float(x[1398]))+ (0.13880396 * float(x[1399])))+ ((-0.49604902 * float(x[1400]))+ (-0.45909932 * float(x[1401]))+ (-0.092809156 * float(x[1402]))+ (0.79994786 * float(x[1403]))+ (-0.8792037 * float(x[1404]))+ (-0.22590315 * float(x[1405]))+ (-0.9819112 * float(x[1406]))+ (0.009748872 * float(x[1407]))+ (0.20909244 * float(x[1408]))+ (0.43487048 * float(x[1409]))+ (0.8734681 * float(x[1410]))+ (0.071772315 * float(x[1411]))+ (0.6481932 * float(x[1412]))+ (0.22627507 * float(x[1413]))+ (0.68154323 * float(x[1414]))+ (0.7624593 * float(x[1415]))+ (-0.637475 * float(x[1416]))+ (0.99139935 * float(x[1417]))+ (0.70152104 * float(x[1418]))+ (-0.7182095 * float(x[1419]))+ (0.7157272 * float(x[1420]))+ (-0.7079713 * float(x[1421]))+ (0.70106953 * float(x[1422]))+ (-0.6773534 * float(x[1423]))+ (0.1978508 * float(x[1424]))+ (0.56100506 * float(x[1425]))+ (-0.01693515 * float(x[1426]))+ (-0.5268492 * float(x[1427]))+ (-0.021166926 * float(x[1428]))+ (0.744687 * float(x[1429]))+ (-0.4686198 * float(x[1430]))+ (-0.5384773 * float(x[1431]))+ (-0.097232655 * float(x[1432]))+ (-0.4070343 * float(x[1433]))+ (0.615166 * float(x[1434]))+ (0.6750101 * float(x[1435]))+ (-0.9625322 * float(x[1436]))+ (0.3338465 * float(x[1437]))+ (0.12203412 * float(x[1438]))+ (-0.99990743 * float(x[1439]))+ (-0.28558758 * float(x[1440]))+ (-0.9300452 * float(x[1441]))+ (-0.67155963 * float(x[1442]))+ (-0.7073883 * float(x[1443]))+ (0.6493978 * float(x[1444]))+ (0.80841285 * float(x[1445]))+ (0.093066275 * float(x[1446]))+ (0.83847743 * float(x[1447]))+ (0.4641474 * float(x[1448]))+ (-0.37727854 * float(x[1449])))+ ((0.5950223 * float(x[1450]))+ (0.67175454 * float(x[1451]))+ (0.024369912 * float(x[1452]))+ (-0.6132141 * float(x[1453]))+ (-0.857919 * float(x[1454]))+ (0.279516 * float(x[1455]))+ (-0.6346323 * float(x[1456]))+ (0.79663455 * float(x[1457]))+ (0.081798516 * float(x[1458]))+ (-0.50566655 * float(x[1459]))+ (-0.8732661 * float(x[1460]))+ (0.2272447 * float(x[1461]))+ (-0.18828647 * float(x[1462]))+ (-0.49235144 * float(x[1463]))+ (-0.14605731 * float(x[1464]))+ (0.6722183 * float(x[1465]))+ (0.3350618 * float(x[1466]))+ (-0.83530545 * float(x[1467]))+ (0.38386554 * float(x[1468]))+ (0.88163006 * float(x[1469]))+ (0.91353035 * float(x[1470]))+ (-0.54301333 * float(x[1471]))+ (0.18248276 * float(x[1472]))+ (0.13161914 * float(x[1473]))+ (0.6093559 * float(x[1474]))+ (0.26474118 * float(x[1475]))+ (-0.23395896 * float(x[1476]))+ (0.41205934 * float(x[1477]))+ (0.6216291 * float(x[1478]))+ (-0.5512076 * float(x[1479]))+ (0.9251541 * float(x[1480]))+ (-0.92178255 * float(x[1481]))+ (0.58121425 * float(x[1482]))+ (-0.34265578 * float(x[1483]))+ (-0.3320499 * float(x[1484]))+ (0.18568307 * float(x[1485]))+ (0.78026503 * float(x[1486]))+ (0.8564141 * float(x[1487]))+ (-0.32378265 * float(x[1488]))+ (0.2951113 * float(x[1489]))+ (0.4379214 * float(x[1490]))+ (0.46868736 * float(x[1491]))+ (-0.6970207 * float(x[1492]))+ (0.6306795 * float(x[1493]))+ (-0.13370454 * float(x[1494]))+ (0.33940446 * float(x[1495]))+ (-0.43023422 * float(x[1496]))+ (-0.41145208 * float(x[1497]))+ (0.43772814 * float(x[1498]))+ (-0.6368416 * float(x[1499])))+ ((-0.75021434 * float(x[1500]))+ (0.4439572 * float(x[1501]))+ (0.64789766 * float(x[1502]))+ (-0.35396832 * float(x[1503]))+ (0.73020667 * float(x[1504]))+ (0.58748835 * float(x[1505]))+ (0.9744515 * float(x[1506]))+ (0.39270908 * float(x[1507]))+ (-0.07835173 * float(x[1508]))+ (-0.61943406 * float(x[1509]))+ (0.46613303 * float(x[1510]))+ (0.63608795 * float(x[1511]))+ (0.6480254 * float(x[1512]))+ (-0.054984525 * float(x[1513]))+ (-0.6213705 * float(x[1514]))+ (0.34819964 * float(x[1515]))+ (0.30917537 * float(x[1516]))+ (-0.7144268 * float(x[1517]))+ (0.35042363 * float(x[1518]))+ (-0.36615413 * float(x[1519]))+ (0.8420513 * float(x[1520]))+ (-0.6802677 * float(x[1521]))+ (-0.076559 * float(x[1522]))+ (0.67406833 * float(x[1523]))+ (-0.8330397 * float(x[1524]))+ (-0.12338907 * float(x[1525]))+ (-0.37251633 * float(x[1526]))+ (0.63201374 * float(x[1527]))+ (0.17207244 * float(x[1528]))+ (-0.13530101 * float(x[1529]))+ (-0.28952175 * float(x[1530]))+ (0.41614527 * float(x[1531]))+ (-0.85335815 * float(x[1532]))+ (0.5903176 * float(x[1533]))+ (0.54503644 * float(x[1534]))+ (-0.18005772 * float(x[1535]))+ (0.023112176 * float(x[1536]))+ (0.98711824 * float(x[1537]))+ (-0.6793377 * float(x[1538]))+ (-0.6410451 * float(x[1539]))+ (0.40969363 * float(x[1540]))+ (-0.6406031 * float(x[1541]))+ (0.5499999 * float(x[1542]))+ (0.4476769 * float(x[1543]))+ (-0.5368686 * float(x[1544]))+ (-0.2702811 * float(x[1545]))+ (-0.7227823 * float(x[1546]))+ (0.8878584 * float(x[1547]))+ (0.3750822 * float(x[1548]))+ (-0.51701504 * float(x[1549])))+ ((-0.71324164 * float(x[1550]))+ (-0.8343112 * float(x[1551]))+ (-0.47805542 * float(x[1552]))+ (0.006691653 * float(x[1553]))+ (-0.9562114 * float(x[1554]))+ (0.1052306 * float(x[1555]))+ (0.12172787 * float(x[1556]))+ (-0.5788501 * float(x[1557]))+ (-0.9804306 * float(x[1558]))+ (-0.089312755 * float(x[1559]))+ (0.036005184 * float(x[1560]))+ (0.8843827 * float(x[1561]))+ (-0.94663787 * float(x[1562]))+ (0.14677143 * float(x[1563]))+ (0.99908024 * float(x[1564]))+ (-0.76025975 * float(x[1565]))+ (-0.33633354 * float(x[1566]))+ (0.056024242 * float(x[1567]))+ (-0.94537747 * float(x[1568]))+ (0.49321547 * float(x[1569]))+ (0.9125193 * float(x[1570]))+ (0.010151804 * float(x[1571]))+ (0.3143363 * float(x[1572]))+ (-0.35114783 * float(x[1573]))+ (-0.23807418 * float(x[1574]))+ (-0.03367274 * float(x[1575]))+ (-0.3160892 * float(x[1576]))+ (-0.32652214 * float(x[1577]))+ (-0.89080817 * float(x[1578]))+ (0.10998443 * float(x[1579]))+ (-0.96106106 * float(x[1580]))+ (0.70663047 * float(x[1581]))+ (-0.46669462 * float(x[1582]))+ (0.4637904 * float(x[1583]))+ (-0.92544377 * float(x[1584]))+ (-0.0150029 * float(x[1585]))+ (0.43620846 * float(x[1586]))+ (-0.7282913 * float(x[1587]))+ (0.7694321 * float(x[1588]))+ (-0.031505063 * float(x[1589]))+ (0.68323433 * float(x[1590]))+ (-0.6787191 * float(x[1591]))+ (-0.19440956 * float(x[1592]))+ (-0.68423045 * float(x[1593]))+ (0.081690684 * float(x[1594]))+ (-0.38504344 * float(x[1595]))+ (-0.036386188 * float(x[1596]))+ (0.13687651 * float(x[1597]))+ (-0.12986708 * float(x[1598]))+ (0.40380034 * float(x[1599])))+ ((-0.078478254 * float(x[1600]))+ (0.12640266 * float(x[1601]))+ (-0.55556744 * float(x[1602]))+ (0.92020446 * float(x[1603]))+ (-0.38774845 * float(x[1604]))+ (-0.19184312 * float(x[1605]))+ (-0.12618868 * float(x[1606]))+ (0.71763366 * float(x[1607]))+ (0.96502113 * float(x[1608]))+ (0.82084674 * float(x[1609]))+ (-0.13084568 * float(x[1610]))+ (0.27768186 * float(x[1611]))+ (-0.0469186 * float(x[1612]))+ (-0.6317963 * float(x[1613]))+ (-0.81964993 * float(x[1614]))+ (-0.2925375 * float(x[1615]))+ (0.7436785 * float(x[1616]))+ (0.12333264 * float(x[1617]))+ (-0.64372194 * float(x[1618]))+ (0.14003883 * float(x[1619]))+ (-0.22054632 * float(x[1620]))+ (0.20937192 * float(x[1621]))+ (0.15454818 * float(x[1622]))+ (-0.84421545 * float(x[1623]))+ (-0.7219608 * float(x[1624]))+ (0.9722951 * float(x[1625]))+ (-0.14572509 * float(x[1626]))+ (-0.7624074 * float(x[1627]))+ (-0.84435654 * float(x[1628]))+ (-0.32350245 * float(x[1629]))+ (0.025818441 * float(x[1630]))+ (0.59855324 * float(x[1631]))+ (-0.6367079 * float(x[1632]))+ (-0.691587 * float(x[1633]))+ (0.052391555 * float(x[1634]))+ (-0.70159036 * float(x[1635]))+ (0.39423615 * float(x[1636]))+ (-0.7210677 * float(x[1637]))+ (0.36875814 * float(x[1638]))+ (0.8811744 * float(x[1639]))+ (-0.19875374 * float(x[1640]))+ (-0.74048746 * float(x[1641]))+ (0.9616683 * float(x[1642]))+ (0.12144887 * float(x[1643]))+ (0.2635352 * float(x[1644]))+ (0.64160454 * float(x[1645]))+ (0.38887 * float(x[1646]))+ (-0.11945161 * float(x[1647]))+ (0.029125113 * float(x[1648]))+ (0.112154685 * float(x[1649])))+ ((-0.10927918 * float(x[1650]))+ (0.4195722 * float(x[1651]))+ (-0.06897812 * float(x[1652]))+ (-0.5456731 * float(x[1653]))+ (-0.4725352 * float(x[1654]))+ (0.70730615 * float(x[1655]))+ (-0.709728 * float(x[1656]))+ (-0.47585303 * float(x[1657]))+ (0.390348 * float(x[1658]))+ (-0.957888 * float(x[1659]))+ (0.6011975 * float(x[1660]))+ (0.17443438 * float(x[1661]))+ (-0.4858725 * float(x[1662]))+ (-0.23131977 * float(x[1663]))+ (0.17136116 * float(x[1664]))+ (-0.09304426 * float(x[1665]))+ (0.8417586 * float(x[1666]))+ (0.90547025 * float(x[1667]))+ (-0.43353033 * float(x[1668]))+ (-0.8808023 * float(x[1669]))+ (-0.5842096 * float(x[1670]))+ (-0.8330487 * float(x[1671]))+ (-0.34934017 * float(x[1672]))+ (0.3656247 * float(x[1673]))+ (0.71131235 * float(x[1674]))+ (0.17394319 * float(x[1675]))+ (0.10747079 * float(x[1676]))+ (0.022262096 * float(x[1677]))+ (0.3114601 * float(x[1678]))+ (-0.51983327 * float(x[1679]))+ (0.020483866 * float(x[1680]))+ (0.46306697 * float(x[1681]))+ (-0.096115336 * float(x[1682]))+ (0.24299447 * float(x[1683]))+ (0.8847508 * float(x[1684]))+ (-0.95576835 * float(x[1685]))+ (0.13105154 * float(x[1686]))+ (-0.03781337 * float(x[1687]))+ (0.92316175 * float(x[1688]))+ (-0.35672662 * float(x[1689]))+ (0.9524566 * float(x[1690]))+ (0.98784393 * float(x[1691]))+ (0.33786607 * float(x[1692]))+ (0.3201627 * float(x[1693]))+ (0.37026548 * float(x[1694]))+ (0.79310864 * float(x[1695]))+ (0.7856756 * float(x[1696]))+ (0.41228235 * float(x[1697]))+ (0.8083441 * float(x[1698]))+ (0.44725353 * float(x[1699])))+ ((0.42697522 * float(x[1700]))+ (0.92549527 * float(x[1701]))+ (-0.4961607 * float(x[1702]))+ (-0.005035072 * float(x[1703]))+ (0.17680177 * float(x[1704]))+ (0.78001195 * float(x[1705]))+ (0.07100805 * float(x[1706]))+ (0.96150094 * float(x[1707]))+ (0.626962 * float(x[1708]))+ (0.24746718 * float(x[1709]))+ (0.2667325 * float(x[1710]))+ (-0.75263953 * float(x[1711]))+ (0.39452976 * float(x[1712]))+ (0.62668604 * float(x[1713]))+ (-0.256936 * float(x[1714]))+ (0.2454012 * float(x[1715]))+ (-0.04916519 * float(x[1716]))+ (0.5357782 * float(x[1717]))+ (-0.97036594 * float(x[1718]))+ (-0.8984017 * float(x[1719]))+ (-0.054094587 * float(x[1720]))+ (0.26821443 * float(x[1721]))+ (-0.8530221 * float(x[1722]))+ (0.4318106 * float(x[1723]))+ (0.27688345 * float(x[1724]))+ (0.060071427 * float(x[1725]))+ (0.040579997 * float(x[1726]))+ (0.37242487 * float(x[1727]))+ (0.057165213 * float(x[1728]))+ (0.33568332 * float(x[1729]))+ (-0.20117426 * float(x[1730]))+ (0.30269516 * float(x[1731]))+ (-0.3349798 * float(x[1732]))+ (0.90921205 * float(x[1733]))+ (0.77096695 * float(x[1734]))+ (-0.10971299 * float(x[1735]))+ (0.74486345 * float(x[1736]))+ (0.45962095 * float(x[1737]))+ (0.7596623 * float(x[1738]))+ (0.76019627 * float(x[1739]))+ (-0.76606715 * float(x[1740]))+ (-0.27933234 * float(x[1741]))+ (0.71890527 * float(x[1742]))+ (-0.24342781 * float(x[1743]))+ (0.020936383 * float(x[1744]))+ (0.9808321 * float(x[1745]))+ (0.9291622 * float(x[1746]))+ (-0.093495525 * float(x[1747]))+ (0.03324407 * float(x[1748]))+ (-0.6475469 * float(x[1749])))+ ((0.5117927 * float(x[1750]))+ (-0.4063084 * float(x[1751]))+ (0.4368396 * float(x[1752]))+ (-0.77972347 * float(x[1753]))+ (0.8842286 * float(x[1754]))+ (-0.8127426 * float(x[1755]))+ (0.9538293 * float(x[1756]))+ (-0.08719439 * float(x[1757]))+ (0.43893215 * float(x[1758]))+ (-0.38393903 * float(x[1759]))+ (-0.44659233 * float(x[1760]))+ (0.15151297 * float(x[1761]))+ (0.5679667 * float(x[1762]))+ (0.8589909 * float(x[1763]))+ (0.989109 * float(x[1764]))+ (0.003216328 * float(x[1765]))+ (-0.07498485 * float(x[1766]))+ (0.5043493 * float(x[1767]))+ (0.55385107 * float(x[1768]))+ (-0.5678479 * float(x[1769]))+ (-0.06137938 * float(x[1770]))+ (0.517097 * float(x[1771]))+ (0.15178737 * float(x[1772]))+ (-0.99568766 * float(x[1773]))+ (0.59491354 * float(x[1774]))+ (0.73076224 * float(x[1775]))) + -0.145933), 0)
    o_0 = (3.0767796 * h_0)+ (-0.38107598 * h_1) + -4.095955
             
    if num_output_logits==1:
        return o_0>=0
    else:
        return argmax([eval('o'+str(i)) for i in range(num_output_logits)])

# Main method
if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Predictor trained on '+TRAINFILE)
    parser.add_argument('csvfile', type=str, help='CSV file containing test set (unlabeled).')
    parser.add_argument('-validate', action='store_true', help='Validation mode. csvfile must be labeled. Output is classification statistics rather than predictions.')
    parser.add_argument('-cleanfile',action='store_true',help='Use this flag to save prediction time if the csvfile you are passing has already been preprocessed. Implies headerless.')
    parser.add_argument('-headerless', help='Do not treat the first line of csvfile as a header.', action='store_true')
    args = parser.parse_args()

    if not args.validate: # Then predict
        if args.cleanfile:
            with open(args.csvfile,'r') as cleancsvfile:
                cleancsvreader = csv.reader(cleancsvfile)
                for cleanrow in cleancsvreader:
                    if len(cleanrow)==0:
                        continue
                print(str(','.join(str(j) for j in ([i for i in cleanrow])))+','+str(int(classify(cleanrow))))
        else:
            tempdir=tempfile.gettempdir()
            cleanfile=tempdir+os.sep+"clean.csv"
            clean(args.csvfile,cleanfile, -1, args.headerless, True)
            with open(cleanfile,'r') as cleancsvfile, open(args.csvfile,'r') as dirtycsvfile:
                cleancsvreader = csv.reader(cleancsvfile)
                dirtycsvreader = csv.reader(dirtycsvfile)
                if (not args.headerless):
                        print(','.join(next(dirtycsvreader, None)+['Prediction']))
                for cleanrow,dirtyrow in zip(cleancsvreader,dirtycsvreader):
                    if len(cleanrow)==0:
                        continue
                    print(str(','.join(str(j) for j in ([i for i in dirtyrow])))+','+str(int(classify(cleanrow))))
            os.remove(cleanfile)
            
    else: # Then validate this predictor
        tempdir=tempfile.gettempdir()
        temp_name = next(tempfile._get_candidate_names())
        cleanvalfile=tempdir+os.sep+temp_name
        clean(args.csvfile,cleanvalfile, -1, args.headerless)
        with open(cleanvalfile,'r') as valcsvfile:
            count,correct_count,num_TP,num_TN,num_FP,num_FN,num_class_1,num_class_0=0,0,0,0,0,0,0,0
            valcsvreader = csv.reader(valcsvfile)
            for valrow in valcsvreader:
                if len(valrow)==0:
                    continue
                if int(classify(valrow[:-1]))==int(float(valrow[-1])):
                    correct_count+=1
                    if int(float(valrow[-1]))==1:
                        num_class_1+=1
                        num_TP+=1
                    else:
                        num_class_0+=1
                        num_TN+=1
                else:
                    if int(float(valrow[-1]))==1:
                        num_class_1+=1
                        num_FN+=1
                    else:
                        num_class_0+=1
                        num_FP+=1
                count+=1

        model_cap=3557

        FN=float(num_FN)*100.0/float(count)
        FP=float(num_FP)*100.0/float(count)
        TN=float(num_TN)*100.0/float(count)
        TP=float(num_TP)*100.0/float(count)
        num_correct=correct_count

        if int(num_TP+num_FN)!=0:
            TPR=num_TP/(num_TP+num_FN) # Sensitivity, Recall
        if int(num_TN+num_FP)!=0:
            TNR=num_TN/(num_TN+num_FP) # Specificity, 
        if int(num_TP+num_FP)!=0:
            PPV=num_TP/(num_TP+num_FP) # Recall
        if int(num_FN+num_TP)!=0:
            FNR=num_FN/(num_FN+num_TP) # Miss rate
        if int(2*num_TP+num_FP+num_FN)!=0:
            FONE=2*num_TP/(2*num_TP+num_FP+num_FN) # F1 Score
        if int(num_TP+num_FN+num_FP)!=0:
            TS=num_TP/(num_TP+num_FN+num_FP) # Critical Success Index

        randguess=int(float(10000.0*max(num_class_1,num_class_0))/count)/100.0
        modelacc=int(float(num_correct*10000)/count)/100.0

        print("System Type:                        Binary classifier")
        print("Best-guess accuracy:                {:.2f}%".format(randguess))
        print("Model accuracy:                     {:.2f}%".format(modelacc)+" ("+str(int(num_correct))+"/"+str(count)+" correct)")
        print("Improvement over best guess:        {:.2f}%".format(modelacc-randguess)+" (of possible "+str(round(100-randguess,2))+"%)")
        print("Model capacity (MEC):               {:.0f} bits".format(model_cap))
        print("Generalization ratio:               {:.2f}".format(int(float(num_correct*100)/model_cap)/100.0)+" bits/bit")
        print("Model efficiency:                   {:.2f}%/parameter".format(int(100*(modelacc-randguess)/model_cap)/100.0))
        print("System behavior")
        print("True Negatives:                     {:.2f}%".format(TN)+" ("+str(int(num_TN))+"/"+str(count)+")")
        print("True Positives:                     {:.2f}%".format(TP)+" ("+str(int(num_TP))+"/"+str(count)+")")
        print("False Negatives:                    {:.2f}%".format(FN)+" ("+str(int(num_FN))+"/"+str(count)+")")
        print("False Positives:                    {:.2f}%".format(FP)+" ("+str(int(num_FP))+"/"+str(count)+")")
        if int(num_TP+num_FN)!=0:
            print("True Pos. Rate/Sensitivity/Recall:  {:.2f}".format(TPR))
        if int(num_TN+num_FP)!=0:
            print("True Neg. Rate/Specificity:         {:.2f}".format(TNR))
        if int(num_TP+num_FP)!=0:
            print("Precision:                          {:.2f}".format(PPV))
        if int(2*num_TP+num_FP+num_FN)!=0:
            print("F-1 Measure:                        {:.2f}".format(FONE))
        if int(num_TP+num_FN)!=0:
            print("False Negative Rate/Miss Rate:      {:.2f}".format(FNR))
        if int(num_TP+num_FN+num_FP)!=0:    
            print("Critical Success Index:             {:.2f}".format(TS))


        os.remove(cleanvalfile)

