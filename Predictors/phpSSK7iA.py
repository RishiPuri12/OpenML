#!/usr/bin/env python3
#
# Output of Brainome Daimensions(tm) Table Compiler v0.5.
# Compile time: Feb-16-2020 14:33:29
# Invocation: btc -v -v phpSSK7iA-1.csv -o phpSSK7iA-1.py
# This source code requires Python 3.
#
"""
System Type:                        Binary classifier
Best-guess accuracy:                54.22%
Model accuracy:                     72.88% (2734/3751 correct)
Improvement over best guess:        18.66% (of possible 45.78%)
Model capacity (MEC):               3557 bits
Generalization ratio:               0.76 bits/bit
Model efficiency:                   0.00%/parameter
System behavior
True Negatives:                     21.97% (824/3751)
True Positives:                     50.92% (1910/3751)
False Negatives:                    3.31% (124/3751)
False Positives:                    23.81% (893/3751)
True Pos. Rate/Sensitivity/Recall:  0.94
True Neg. Rate/Specificity:         0.48
Precision:                          0.68
F-1 Measure:                        0.79
False Negative Rate/Miss Rate:      0.06
Critical Success Index:             0.65
Model bias:                         100.00% higher chance to pick class 1
"""

# Imports -- Python3 standard library
import sys
import math
import os
import argparse
import tempfile
import csv
import binascii


# Magic constants follow
# I/O buffer for clean. Reduce this constant for low memory devices. 
IOBUF=100000000

# Ugly workaround for large classifiers
sys.setrecursionlimit(1000000)

# Training file given to compiler
TRAINFILE="phpSSK7iA-1.csv"


#Number of output logits
num_output_logits = 1

#Number of attributes
num_attr = 1776

# Preprocessor for CSV files
def clean(filename, outfile, rounding=-1, headerless=False, testfile=False):
    
    clean.classlist=[]
    clean.testfile=testfile
    
    def convert(cell):
        value=str(cell)
        try:
            result=int(value)
            return result
        except:
            try:
                result=float(value)
                if (rounding!=-1):
                    result=int(result*math.pow(10,rounding))/math.pow(10,rounding)
                return result
            except:
                result=(binascii.crc32(value.encode('utf8')) % (1<<32))
                return result

    def convertclassid(cell):
        if (clean.testfile):
            return convert(cell)
        value=str(cell)
        if (value==''):
            raise ValueError("All cells in the target column need to contain a class label.")
        try:
            result=int(value)
            if (not (result==0 or result==1)):
                raise ValueError("Integer class labels need to be 0 or 1.")
            if (not str(result) in clean.classlist):
                clean.classlist=clean.classlist+[str(result)]
            return result
        except:
            try:
                result=float(value)
                if (rounding!=-1):
                    result=int(result*math.pow(10,rounding))/math.pow(10,rounding)
                if (not (result==0 or result==1)):
                    raise ValueError("Numeric class labels need to be 0 or 1.")
                if (not str(result) in clean.classlist):
                    clean.classlist=clean.classlist+[str(result)]
                return result
            except:
                result=(binascii.crc32(value.encode('utf8')) % (1<<32))
                if (result in clean.classlist):
                    result=clean.classlist.index(result)
                else:
                    clean.classlist=clean.classlist+[result]
                    result=clean.classlist.index(result)
                return result
    rowcount=0
    with open(filename) as csv_file:
        reader = csv.reader(csv_file)
        f=open(outfile,"w+")
        if (headerless==False):
            next(reader,None)
        outbuf=[]
        for row in reader:
            if (row==[]):  # Skip empty rows
                continue
            rowcount=rowcount+1
            rowlen=num_attr
            if (not testfile):
                rowlen=rowlen+1    
            if (not len(row)==rowlen):
                raise ValueError("Column count must match trained predictor. Row "+str(rowcount)+" differs.")
            i=0
            for elem in row:
                if(i+1<len(row)):
                    outbuf.append(str(convert(elem)))
                    outbuf.append(',')
                else:
                    classid=str(convertclassid(elem))
                    outbuf.append(classid)
                i=i+1
            if (len(outbuf)<IOBUF):
                outbuf.append("\n")
            else:
                print(''.join(outbuf), file=f)
                outbuf=[]
        print(''.join(outbuf),end="", file=f)
        f.close()

        if (testfile==False and not len(clean.classlist)==2):
            raise ValueError("Number of classes must be 2.")


# Helper (save an import)
def argmax(l):
    f = lambda i: l[i]
    return max(range(len(l)), key=f)

# Classifier
def classify(row):
    x=row
    h_0 = max((((-0.7622089 * float(x[0]))+ (0.2790958 * float(x[1]))+ (-1.9863269 * float(x[2]))+ (-0.4245914 * float(x[3]))+ (1.0571984 * float(x[4]))+ (0.14575483 * float(x[5]))+ (-0.17889592 * float(x[6]))+ (1.1527381 * float(x[7]))+ (0.22022508 * float(x[8]))+ (-0.64530355 * float(x[9]))+ (0.3501557 * float(x[10]))+ (0.15500137 * float(x[11]))+ (3.3881867 * float(x[12]))+ (-2.0802147 * float(x[13]))+ (-0.7130543 * float(x[14]))+ (-0.7021652 * float(x[15]))+ (1.1026741 * float(x[16]))+ (0.035893716 * float(x[17]))+ (0.7988373 * float(x[18]))+ (3.3818793 * float(x[19]))+ (-2.088491 * float(x[20]))+ (-3.5524845 * float(x[21]))+ (1.9092379 * float(x[22]))+ (-2.9030464 * float(x[23]))+ (0.6731639 * float(x[24]))+ (-0.3542727 * float(x[25]))+ (-2.3425615 * float(x[26]))+ (1.2248563 * float(x[27]))+ (-1.4736427 * float(x[28]))+ (-2.638307 * float(x[29]))+ (0.6016116 * float(x[30]))+ (-0.7487759 * float(x[31]))+ (-0.44665307 * float(x[32]))+ (-3.1663306 * float(x[33]))+ (-0.30292723 * float(x[34]))+ (-2.6149461 * float(x[35]))+ (2.0313025 * float(x[36]))+ (0.63121414 * float(x[37]))+ (1.7279919 * float(x[38]))+ (-2.3682203 * float(x[39]))+ (5.070301 * float(x[40]))+ (0.25592524 * float(x[41]))+ (-1.4276637 * float(x[42]))+ (-1.561829 * float(x[43]))+ (0.61331004 * float(x[44]))+ (-0.97167754 * float(x[45]))+ (-0.39598903 * float(x[46]))+ (-1.2641412 * float(x[47]))+ (-1.3207335 * float(x[48]))+ (0.49624154 * float(x[49])))+ ((-1.7544618 * float(x[50]))+ (-0.35105896 * float(x[51]))+ (-4.285868 * float(x[52]))+ (-2.2778578 * float(x[53]))+ (-1.5986677 * float(x[54]))+ (0.5491755 * float(x[55]))+ (1.0714961 * float(x[56]))+ (-1.4249705 * float(x[57]))+ (2.3739495 * float(x[58]))+ (3.3079834 * float(x[59]))+ (0.30087298 * float(x[60]))+ (0.72776544 * float(x[61]))+ (-2.9200163 * float(x[62]))+ (-2.4968665 * float(x[63]))+ (-2.0660734 * float(x[64]))+ (1.2969832 * float(x[65]))+ (-0.98896974 * float(x[66]))+ (0.2960459 * float(x[67]))+ (-2.3241665 * float(x[68]))+ (1.6623491 * float(x[69]))+ (-0.5112541 * float(x[70]))+ (0.9535222 * float(x[71]))+ (-4.7294273 * float(x[72]))+ (0.6087597 * float(x[73]))+ (-0.60120076 * float(x[74]))+ (-2.2705443 * float(x[75]))+ (-1.4712245 * float(x[76]))+ (-3.191075 * float(x[77]))+ (-1.2256396 * float(x[78]))+ (-4.432336 * float(x[79]))+ (-7.7847095 * float(x[80]))+ (-1.2084044 * float(x[81]))+ (-1.2875891 * float(x[82]))+ (-1.0421634 * float(x[83]))+ (-1.9797717 * float(x[84]))+ (-0.33520973 * float(x[85]))+ (-0.66418284 * float(x[86]))+ (-1.9940758 * float(x[87]))+ (1.0747266 * float(x[88]))+ (-0.83156055 * float(x[89]))+ (0.40978685 * float(x[90]))+ (-2.2408614 * float(x[91]))+ (1.5393312 * float(x[92]))+ (-1.1097983 * float(x[93]))+ (-4.247143 * float(x[94]))+ (0.007054135 * float(x[95]))+ (0.5315707 * float(x[96]))+ (-2.298246 * float(x[97]))+ (-0.0035523751 * float(x[98]))+ (0.7733421 * float(x[99])))+ ((0.7421157 * float(x[100]))+ (0.75297815 * float(x[101]))+ (1.586097 * float(x[102]))+ (-0.8910813 * float(x[103]))+ (-0.08853795 * float(x[104]))+ (0.07889195 * float(x[105]))+ (0.4081155 * float(x[106]))+ (2.6083138 * float(x[107]))+ (0.40311068 * float(x[108]))+ (-3.0184953 * float(x[109]))+ (0.63309866 * float(x[110]))+ (-1.8876243 * float(x[111]))+ (-0.7536524 * float(x[112]))+ (2.4468956 * float(x[113]))+ (-5.288708 * float(x[114]))+ (2.2244833 * float(x[115]))+ (3.3175116 * float(x[116]))+ (0.46110946 * float(x[117]))+ (-0.0697977 * float(x[118]))+ (-0.45445183 * float(x[119]))+ (-2.9142015 * float(x[120]))+ (0.6256349 * float(x[121]))+ (0.9991323 * float(x[122]))+ (-5.9296317 * float(x[123]))+ (1.7972616 * float(x[124]))+ (-0.9696388 * float(x[125]))+ (1.156514 * float(x[126]))+ (-1.5606339 * float(x[127]))+ (2.993874 * float(x[128]))+ (-0.27873665 * float(x[129]))+ (0.18639117 * float(x[130]))+ (-0.2667932 * float(x[131]))+ (-2.4327385 * float(x[132]))+ (-1.891708 * float(x[133]))+ (-1.3386717 * float(x[134]))+ (3.4209917 * float(x[135]))+ (-1.2180523 * float(x[136]))+ (0.24479322 * float(x[137]))+ (1.4866081 * float(x[138]))+ (-0.72521394 * float(x[139]))+ (-3.9856265 * float(x[140]))+ (0.049741227 * float(x[141]))+ (-0.3533345 * float(x[142]))+ (-0.89604515 * float(x[143]))+ (1.2702651 * float(x[144]))+ (-3.4238656 * float(x[145]))+ (-0.943479 * float(x[146]))+ (2.6926281 * float(x[147]))+ (2.5184836 * float(x[148]))+ (-4.505964 * float(x[149])))+ ((2.5206525 * float(x[150]))+ (-0.92085284 * float(x[151]))+ (-2.3982952 * float(x[152]))+ (-5.810731 * float(x[153]))+ (-2.5032022 * float(x[154]))+ (-1.8196771 * float(x[155]))+ (-1.2188522 * float(x[156]))+ (1.140243 * float(x[157]))+ (-0.17611228 * float(x[158]))+ (-1.7570872 * float(x[159]))+ (0.6917344 * float(x[160]))+ (-0.37279972 * float(x[161]))+ (1.7744402 * float(x[162]))+ (-1.3149776 * float(x[163]))+ (0.51349604 * float(x[164]))+ (-4.0696235 * float(x[165]))+ (-0.70440006 * float(x[166]))+ (-0.7327591 * float(x[167]))+ (-0.5270541 * float(x[168]))+ (-4.04204 * float(x[169]))+ (5.48173 * float(x[170]))+ (0.3054145 * float(x[171]))+ (0.20582904 * float(x[172]))+ (0.6273212 * float(x[173]))+ (0.347713 * float(x[174]))+ (-0.91855687 * float(x[175]))+ (0.024633002 * float(x[176]))+ (1.0689367 * float(x[177]))+ (5.102266 * float(x[178]))+ (-0.62958354 * float(x[179]))+ (0.5015833 * float(x[180]))+ (-1.0737346 * float(x[181]))+ (0.4008244 * float(x[182]))+ (0.6113514 * float(x[183]))+ (-3.3756003 * float(x[184]))+ (-0.336581 * float(x[185]))+ (0.7429936 * float(x[186]))+ (2.8458593 * float(x[187]))+ (-0.92362094 * float(x[188]))+ (0.113365375 * float(x[189]))+ (0.6469134 * float(x[190]))+ (-2.1667058 * float(x[191]))+ (-0.92948097 * float(x[192]))+ (-0.34195906 * float(x[193]))+ (1.2858704 * float(x[194]))+ (-0.6287409 * float(x[195]))+ (0.48712766 * float(x[196]))+ (-2.14531 * float(x[197]))+ (-1.4570912 * float(x[198]))+ (-0.9086028 * float(x[199])))+ ((0.47465307 * float(x[200]))+ (0.74783486 * float(x[201]))+ (-1.143321 * float(x[202]))+ (-1.4015348 * float(x[203]))+ (-0.08115991 * float(x[204]))+ (4.428086 * float(x[205]))+ (0.6314606 * float(x[206]))+ (-0.07672553 * float(x[207]))+ (1.2131687 * float(x[208]))+ (1.7626845 * float(x[209]))+ (-2.2770538 * float(x[210]))+ (-2.2244358 * float(x[211]))+ (-1.7255416 * float(x[212]))+ (-2.510912 * float(x[213]))+ (-0.5563772 * float(x[214]))+ (-1.2856574 * float(x[215]))+ (-0.45273834 * float(x[216]))+ (0.4187148 * float(x[217]))+ (-1.6834955 * float(x[218]))+ (-0.34778887 * float(x[219]))+ (-0.019909881 * float(x[220]))+ (0.54448026 * float(x[221]))+ (0.042345144 * float(x[222]))+ (-3.3822176 * float(x[223]))+ (0.61833656 * float(x[224]))+ (-1.0145125 * float(x[225]))+ (0.049520463 * float(x[226]))+ (2.0597112 * float(x[227]))+ (3.8760808 * float(x[228]))+ (-2.2228591 * float(x[229]))+ (0.69151574 * float(x[230]))+ (6.1276693 * float(x[231]))+ (0.8144633 * float(x[232]))+ (7.400705 * float(x[233]))+ (-0.6694405 * float(x[234]))+ (-6.4136415 * float(x[235]))+ (-4.0554137 * float(x[236]))+ (-0.4447426 * float(x[237]))+ (-0.36320135 * float(x[238]))+ (0.7277112 * float(x[239]))+ (3.180488 * float(x[240]))+ (7.3052406 * float(x[241]))+ (-7.591545 * float(x[242]))+ (-1.8362645 * float(x[243]))+ (-0.16761628 * float(x[244]))+ (4.3197694 * float(x[245]))+ (-1.0508184 * float(x[246]))+ (-0.0904365 * float(x[247]))+ (0.7807571 * float(x[248]))+ (-0.16264062 * float(x[249])))+ ((2.555959 * float(x[250]))+ (1.1393892 * float(x[251]))+ (-1.062917 * float(x[252]))+ (-2.0946488 * float(x[253]))+ (-0.9224864 * float(x[254]))+ (-1.5575179 * float(x[255]))+ (-0.2699055 * float(x[256]))+ (4.955439 * float(x[257]))+ (-0.7670683 * float(x[258]))+ (0.64791083 * float(x[259]))+ (0.0069934637 * float(x[260]))+ (1.4888341 * float(x[261]))+ (-2.797648 * float(x[262]))+ (1.7486244 * float(x[263]))+ (3.848337 * float(x[264]))+ (2.2171195 * float(x[265]))+ (2.225094 * float(x[266]))+ (-0.7413685 * float(x[267]))+ (0.98727685 * float(x[268]))+ (4.772228 * float(x[269]))+ (0.79383177 * float(x[270]))+ (3.076677 * float(x[271]))+ (1.9535308 * float(x[272]))+ (1.7268615 * float(x[273]))+ (1.6491314 * float(x[274]))+ (2.489791 * float(x[275]))+ (0.23605402 * float(x[276]))+ (2.8154583 * float(x[277]))+ (-1.9067699 * float(x[278]))+ (-2.1541395 * float(x[279]))+ (2.5455422 * float(x[280]))+ (1.1013875 * float(x[281]))+ (-2.6341546 * float(x[282]))+ (-1.4110732 * float(x[283]))+ (-1.1486166 * float(x[284]))+ (11.205769 * float(x[285]))+ (-0.8752193 * float(x[286]))+ (-1.7780789 * float(x[287]))+ (-0.7232178 * float(x[288]))+ (1.4629568 * float(x[289]))+ (-0.54777 * float(x[290]))+ (-3.6724594 * float(x[291]))+ (-0.21174906 * float(x[292]))+ (0.012009828 * float(x[293]))+ (-1.0453964 * float(x[294]))+ (0.20121904 * float(x[295]))+ (0.9465256 * float(x[296]))+ (5.3299484 * float(x[297]))+ (7.2638497 * float(x[298]))+ (-0.7657111 * float(x[299])))+ ((0.9184686 * float(x[300]))+ (-0.78440386 * float(x[301]))+ (-1.2082841 * float(x[302]))+ (6.238359 * float(x[303]))+ (0.02374657 * float(x[304]))+ (-0.03127512 * float(x[305]))+ (-3.8633964 * float(x[306]))+ (8.318944 * float(x[307]))+ (2.544331 * float(x[308]))+ (2.2213817 * float(x[309]))+ (-0.60755885 * float(x[310]))+ (-1.6652775 * float(x[311]))+ (-2.4690802 * float(x[312]))+ (-0.21184872 * float(x[313]))+ (2.9906592 * float(x[314]))+ (2.9892929 * float(x[315]))+ (-0.027442215 * float(x[316]))+ (0.47749075 * float(x[317]))+ (-1.525598 * float(x[318]))+ (0.40284672 * float(x[319]))+ (-4.0849514 * float(x[320]))+ (2.4269228 * float(x[321]))+ (2.0191064 * float(x[322]))+ (-0.8205271 * float(x[323]))+ (-0.2770774 * float(x[324]))+ (3.116547 * float(x[325]))+ (-0.7698909 * float(x[326]))+ (-1.266069 * float(x[327]))+ (-1.5680584 * float(x[328]))+ (-2.1530354 * float(x[329]))+ (-0.045573194 * float(x[330]))+ (-1.3871982 * float(x[331]))+ (0.11909571 * float(x[332]))+ (-3.1579406 * float(x[333]))+ (2.6925986 * float(x[334]))+ (-0.90412253 * float(x[335]))+ (-2.0587237 * float(x[336]))+ (0.5337221 * float(x[337]))+ (-1.7435691 * float(x[338]))+ (-1.4930955 * float(x[339]))+ (-1.1506447 * float(x[340]))+ (-0.28845993 * float(x[341]))+ (-1.3722974 * float(x[342]))+ (-0.3666052 * float(x[343]))+ (-1.3129015 * float(x[344]))+ (4.6163926 * float(x[345]))+ (-2.0748935 * float(x[346]))+ (0.5571161 * float(x[347]))+ (0.8185276 * float(x[348]))+ (-0.20424995 * float(x[349])))+ ((-2.486816 * float(x[350]))+ (-1.6876311 * float(x[351]))+ (-0.068548456 * float(x[352]))+ (0.685653 * float(x[353]))+ (-0.035468664 * float(x[354]))+ (-1.3255825 * float(x[355]))+ (-1.0621874 * float(x[356]))+ (5.2122636 * float(x[357]))+ (1.174899 * float(x[358]))+ (-1.1812521 * float(x[359]))+ (1.5473856 * float(x[360]))+ (4.9300036 * float(x[361]))+ (-3.0814743 * float(x[362]))+ (-0.20834062 * float(x[363]))+ (-1.4239459 * float(x[364]))+ (-0.6283478 * float(x[365]))+ (-2.365967 * float(x[366]))+ (0.13558495 * float(x[367]))+ (-0.15454996 * float(x[368]))+ (-0.055200823 * float(x[369]))+ (-0.7901284 * float(x[370]))+ (0.08835063 * float(x[371]))+ (-0.12598464 * float(x[372]))+ (-2.335808 * float(x[373]))+ (0.88096046 * float(x[374]))+ (0.28804138 * float(x[375]))+ (-0.73517597 * float(x[376]))+ (-0.85803497 * float(x[377]))+ (-0.4376336 * float(x[378]))+ (0.10623477 * float(x[379]))+ (-0.3737815 * float(x[380]))+ (0.38911185 * float(x[381]))+ (-0.3943897 * float(x[382]))+ (-1.6406065 * float(x[383]))+ (0.35134253 * float(x[384]))+ (-2.5065362 * float(x[385]))+ (3.7012644 * float(x[386]))+ (-0.97263825 * float(x[387]))+ (2.0756464 * float(x[388]))+ (-2.0933635 * float(x[389]))+ (0.0074516796 * float(x[390]))+ (-2.0738692 * float(x[391]))+ (1.2780298 * float(x[392]))+ (-1.5185206 * float(x[393]))+ (0.45199075 * float(x[394]))+ (-0.6475417 * float(x[395]))+ (-0.7493934 * float(x[396]))+ (-1.4258164 * float(x[397]))+ (-0.8902786 * float(x[398]))+ (2.6672575 * float(x[399])))+ ((0.3220978 * float(x[400]))+ (-0.1511403 * float(x[401]))+ (0.40963015 * float(x[402]))+ (-0.24133348 * float(x[403]))+ (-0.56729466 * float(x[404]))+ (-0.8672833 * float(x[405]))+ (-0.5714933 * float(x[406]))+ (2.2050693 * float(x[407]))+ (6.9369564 * float(x[408]))+ (5.8957105 * float(x[409]))+ (-2.3208323 * float(x[410]))+ (-2.6749349 * float(x[411]))+ (1.2835228 * float(x[412]))+ (-0.94977546 * float(x[413]))+ (0.11674226 * float(x[414]))+ (-2.0548007 * float(x[415]))+ (0.19215414 * float(x[416]))+ (-0.93859524 * float(x[417]))+ (-1.7281827 * float(x[418]))+ (-0.89684916 * float(x[419]))+ (-0.88672113 * float(x[420]))+ (-1.8913903 * float(x[421]))+ (-2.040621 * float(x[422]))+ (-0.20934613 * float(x[423]))+ (-0.49160397 * float(x[424]))+ (-1.8696014 * float(x[425]))+ (-0.44187358 * float(x[426]))+ (0.2683051 * float(x[427]))+ (1.3130096 * float(x[428]))+ (0.7805092 * float(x[429]))+ (-0.4281995 * float(x[430]))+ (-3.508299 * float(x[431]))+ (-1.2307705 * float(x[432]))+ (-0.58730274 * float(x[433]))+ (-0.3747525 * float(x[434]))+ (-0.40705574 * float(x[435]))+ (-1.3666779 * float(x[436]))+ (-0.08005641 * float(x[437]))+ (-0.6174265 * float(x[438]))+ (-2.1573894 * float(x[439]))+ (0.7494684 * float(x[440]))+ (2.6813488 * float(x[441]))+ (-4.39543 * float(x[442]))+ (-2.7017026 * float(x[443]))+ (-0.6043656 * float(x[444]))+ (1.6990728 * float(x[445]))+ (0.9106702 * float(x[446]))+ (1.7950505 * float(x[447]))+ (2.0530062 * float(x[448]))+ (-0.0786465 * float(x[449])))+ ((0.20025422 * float(x[450]))+ (-1.3307785 * float(x[451]))+ (-0.17451538 * float(x[452]))+ (2.1897976 * float(x[453]))+ (1.1187323 * float(x[454]))+ (1.0921998 * float(x[455]))+ (-2.125697 * float(x[456]))+ (-0.3272809 * float(x[457]))+ (-1.272848 * float(x[458]))+ (-0.8855287 * float(x[459]))+ (-2.1047628 * float(x[460]))+ (-0.42739737 * float(x[461]))+ (1.2771484 * float(x[462]))+ (-1.1427411 * float(x[463]))+ (-1.1863079 * float(x[464]))+ (-2.7677639 * float(x[465]))+ (-0.8729052 * float(x[466]))+ (0.2072754 * float(x[467]))+ (-2.7629797 * float(x[468]))+ (-1.3341522 * float(x[469]))+ (2.3768122 * float(x[470]))+ (0.1614593 * float(x[471]))+ (-1.7950468 * float(x[472]))+ (0.7474544 * float(x[473]))+ (1.417803 * float(x[474]))+ (-2.4944541 * float(x[475]))+ (-0.12587266 * float(x[476]))+ (-0.2623969 * float(x[477]))+ (-2.2819252 * float(x[478]))+ (-2.705702 * float(x[479]))+ (1.6607443 * float(x[480]))+ (-0.39280665 * float(x[481]))+ (0.14766297 * float(x[482]))+ (-0.85205215 * float(x[483]))+ (0.2530904 * float(x[484]))+ (0.14989296 * float(x[485]))+ (0.60513365 * float(x[486]))+ (1.5117837 * float(x[487]))+ (0.67604816 * float(x[488]))+ (0.22678253 * float(x[489]))+ (1.6417732 * float(x[490]))+ (-0.5745704 * float(x[491]))+ (-3.4470408 * float(x[492]))+ (0.3523734 * float(x[493]))+ (-1.4355141 * float(x[494]))+ (-2.1704392 * float(x[495]))+ (4.07864 * float(x[496]))+ (-4.11422 * float(x[497]))+ (-0.07444014 * float(x[498]))+ (2.3782415 * float(x[499])))+ ((0.21106325 * float(x[500]))+ (3.8015225 * float(x[501]))+ (-0.004492144 * float(x[502]))+ (-1.4101483 * float(x[503]))+ (-0.36940295 * float(x[504]))+ (-5.2989364 * float(x[505]))+ (-0.40128773 * float(x[506]))+ (-2.3584054 * float(x[507]))+ (3.0643325 * float(x[508]))+ (-2.4288757 * float(x[509]))+ (-2.067869 * float(x[510]))+ (-0.2451124 * float(x[511]))+ (-0.33454698 * float(x[512]))+ (0.69383925 * float(x[513]))+ (-1.1192548 * float(x[514]))+ (-1.6404375 * float(x[515]))+ (1.4314929 * float(x[516]))+ (-3.752225 * float(x[517]))+ (2.4481072 * float(x[518]))+ (-0.74314564 * float(x[519]))+ (-1.2036072 * float(x[520]))+ (-0.9414589 * float(x[521]))+ (0.22089158 * float(x[522]))+ (-0.9323791 * float(x[523]))+ (0.31134203 * float(x[524]))+ (3.5225642 * float(x[525]))+ (1.0987747 * float(x[526]))+ (-0.536475 * float(x[527]))+ (-3.93477 * float(x[528]))+ (-0.080480315 * float(x[529]))+ (2.173162 * float(x[530]))+ (0.78429717 * float(x[531]))+ (1.3861948 * float(x[532]))+ (0.573572 * float(x[533]))+ (0.6239521 * float(x[534]))+ (2.558131 * float(x[535]))+ (-1.3272825 * float(x[536]))+ (1.0871528 * float(x[537]))+ (2.8625712 * float(x[538]))+ (-1.4829746 * float(x[539]))+ (-0.14807294 * float(x[540]))+ (1.0315988 * float(x[541]))+ (0.29653946 * float(x[542]))+ (-2.5915987 * float(x[543]))+ (-0.058816623 * float(x[544]))+ (-1.817561 * float(x[545]))+ (0.13014299 * float(x[546]))+ (1.6190169 * float(x[547]))+ (0.09786195 * float(x[548]))+ (-0.89714575 * float(x[549])))+ ((-1.634477 * float(x[550]))+ (0.17539382 * float(x[551]))+ (-0.61371547 * float(x[552]))+ (-4.197428 * float(x[553]))+ (1.0597382 * float(x[554]))+ (-2.9288006 * float(x[555]))+ (-2.8154428 * float(x[556]))+ (-1.5944791 * float(x[557]))+ (-1.0650222 * float(x[558]))+ (1.5031884 * float(x[559]))+ (-0.28053352 * float(x[560]))+ (-1.9720339 * float(x[561]))+ (0.91900027 * float(x[562]))+ (-0.2524857 * float(x[563]))+ (1.1317732 * float(x[564]))+ (1.4669569 * float(x[565]))+ (0.83045596 * float(x[566]))+ (0.4713829 * float(x[567]))+ (2.2660778 * float(x[568]))+ (0.8460042 * float(x[569]))+ (-1.0381789 * float(x[570]))+ (1.4379799 * float(x[571]))+ (1.8629885 * float(x[572]))+ (1.5108764 * float(x[573]))+ (-0.49197662 * float(x[574]))+ (-2.4744813 * float(x[575]))+ (-0.33820647 * float(x[576]))+ (-3.4508967 * float(x[577]))+ (-0.6542352 * float(x[578]))+ (-5.0465503 * float(x[579]))+ (-0.1818449 * float(x[580]))+ (-3.039057 * float(x[581]))+ (-0.8564852 * float(x[582]))+ (-0.88901395 * float(x[583]))+ (0.857191 * float(x[584]))+ (-2.2734044 * float(x[585]))+ (-2.1703146 * float(x[586]))+ (-0.32334855 * float(x[587]))+ (1.1855588 * float(x[588]))+ (-3.0268445 * float(x[589]))+ (1.7875574 * float(x[590]))+ (1.5462795 * float(x[591]))+ (-0.055830576 * float(x[592]))+ (2.3456314 * float(x[593]))+ (-2.6601367 * float(x[594]))+ (-0.41928846 * float(x[595]))+ (-3.884372 * float(x[596]))+ (-2.128474 * float(x[597]))+ (3.1211674 * float(x[598]))+ (-2.8733637 * float(x[599])))+ ((-1.5595489 * float(x[600]))+ (-0.1362952 * float(x[601]))+ (2.4319787 * float(x[602]))+ (0.27585953 * float(x[603]))+ (-0.5082935 * float(x[604]))+ (-3.1870575 * float(x[605]))+ (-3.626626 * float(x[606]))+ (-0.41663465 * float(x[607]))+ (3.1987638 * float(x[608]))+ (-0.75438595 * float(x[609]))+ (-2.9569952 * float(x[610]))+ (-1.4028813 * float(x[611]))+ (-3.156692 * float(x[612]))+ (-2.8668208 * float(x[613]))+ (-0.95823586 * float(x[614]))+ (-1.1139041 * float(x[615]))+ (-0.20124727 * float(x[616]))+ (-0.78548455 * float(x[617]))+ (0.5062864 * float(x[618]))+ (-1.3465835 * float(x[619]))+ (-0.042526297 * float(x[620]))+ (-1.9335712 * float(x[621]))+ (-3.33245 * float(x[622]))+ (0.48957977 * float(x[623]))+ (-2.3624341 * float(x[624]))+ (-1.5649012 * float(x[625]))+ (-1.6162366 * float(x[626]))+ (0.18754978 * float(x[627]))+ (-2.7472448 * float(x[628]))+ (-1.4941543 * float(x[629]))+ (-3.3127105 * float(x[630]))+ (-0.5847585 * float(x[631]))+ (-0.4015437 * float(x[632]))+ (0.06309575 * float(x[633]))+ (2.1328206 * float(x[634]))+ (-3.3250148 * float(x[635]))+ (-1.2306798 * float(x[636]))+ (-0.25393543 * float(x[637]))+ (0.050635673 * float(x[638]))+ (-0.55851734 * float(x[639]))+ (0.48376295 * float(x[640]))+ (0.6915673 * float(x[641]))+ (-2.0510411 * float(x[642]))+ (2.659429 * float(x[643]))+ (2.3681035 * float(x[644]))+ (-0.191487 * float(x[645]))+ (0.8310472 * float(x[646]))+ (7.171737 * float(x[647]))+ (3.6251268 * float(x[648]))+ (-4.6627007 * float(x[649])))+ ((-2.2196805 * float(x[650]))+ (-0.809589 * float(x[651]))+ (-2.0892785 * float(x[652]))+ (4.549321 * float(x[653]))+ (-2.0958567 * float(x[654]))+ (0.38880715 * float(x[655]))+ (-2.8319192 * float(x[656]))+ (-0.51294523 * float(x[657]))+ (-0.42014033 * float(x[658]))+ (-1.7360884 * float(x[659]))+ (0.8709558 * float(x[660]))+ (-0.69031817 * float(x[661]))+ (0.10680564 * float(x[662]))+ (-1.2057443 * float(x[663]))+ (1.0751966 * float(x[664]))+ (1.7545557 * float(x[665]))+ (-1.0054545 * float(x[666]))+ (0.54592323 * float(x[667]))+ (-0.34209207 * float(x[668]))+ (-1.3442948 * float(x[669]))+ (-0.32208136 * float(x[670]))+ (0.5570979 * float(x[671]))+ (-2.000384 * float(x[672]))+ (-0.33388373 * float(x[673]))+ (-3.5083637 * float(x[674]))+ (-2.3070025 * float(x[675]))+ (0.68429404 * float(x[676]))+ (0.12262341 * float(x[677]))+ (0.5075427 * float(x[678]))+ (-0.71706825 * float(x[679]))+ (-3.4762816 * float(x[680]))+ (-1.6096079 * float(x[681]))+ (-0.009561049 * float(x[682]))+ (-1.154805 * float(x[683]))+ (-4.8255634 * float(x[684]))+ (0.8224007 * float(x[685]))+ (-4.654631 * float(x[686]))+ (-0.92459255 * float(x[687]))+ (-0.72803354 * float(x[688]))+ (0.3789477 * float(x[689]))+ (-1.4038128 * float(x[690]))+ (-2.128045 * float(x[691]))+ (-1.3749017 * float(x[692]))+ (-0.10512107 * float(x[693]))+ (-2.6300154 * float(x[694]))+ (-1.0550131 * float(x[695]))+ (-1.1601189 * float(x[696]))+ (-0.55531734 * float(x[697]))+ (1.5693507 * float(x[698]))+ (-3.2543375 * float(x[699])))+ ((-2.4373505 * float(x[700]))+ (-0.55522317 * float(x[701]))+ (-3.7050538 * float(x[702]))+ (-1.3137192 * float(x[703]))+ (-2.8967502 * float(x[704]))+ (-0.7836708 * float(x[705]))+ (-1.4673946 * float(x[706]))+ (-1.3203373 * float(x[707]))+ (0.20222388 * float(x[708]))+ (-2.7429783 * float(x[709]))+ (1.5873967 * float(x[710]))+ (-0.2461054 * float(x[711]))+ (0.16485725 * float(x[712]))+ (-1.6314714 * float(x[713]))+ (-1.0754448 * float(x[714]))+ (0.43261176 * float(x[715]))+ (-0.021425206 * float(x[716]))+ (0.3846256 * float(x[717]))+ (-0.30096582 * float(x[718]))+ (0.12999852 * float(x[719]))+ (0.49585995 * float(x[720]))+ (5.420779 * float(x[721]))+ (-1.2176526 * float(x[722]))+ (1.7774323 * float(x[723]))+ (-0.060958646 * float(x[724]))+ (1.1174576 * float(x[725]))+ (0.7475502 * float(x[726]))+ (3.0276911 * float(x[727]))+ (0.35270253 * float(x[728]))+ (-5.734497 * float(x[729]))+ (-0.9746111 * float(x[730]))+ (-0.10459899 * float(x[731]))+ (0.25976935 * float(x[732]))+ (-4.6813893 * float(x[733]))+ (-1.050479 * float(x[734]))+ (-1.5976254 * float(x[735]))+ (-0.47436625 * float(x[736]))+ (-1.2944 * float(x[737]))+ (-3.677255 * float(x[738]))+ (-0.7805115 * float(x[739]))+ (0.15200603 * float(x[740]))+ (-2.7756166 * float(x[741]))+ (-0.9286824 * float(x[742]))+ (-2.7807338 * float(x[743]))+ (-0.12646535 * float(x[744]))+ (0.1230162 * float(x[745]))+ (-1.403209 * float(x[746]))+ (-0.21485472 * float(x[747]))+ (1.0807667 * float(x[748]))+ (-1.4107251 * float(x[749])))+ ((0.3751291 * float(x[750]))+ (0.39868355 * float(x[751]))+ (-1.0358222 * float(x[752]))+ (-4.127045 * float(x[753]))+ (-0.25957498 * float(x[754]))+ (-1.384186 * float(x[755]))+ (-1.424081 * float(x[756]))+ (-0.8427246 * float(x[757]))+ (-0.82576275 * float(x[758]))+ (0.286984 * float(x[759]))+ (-3.2418034 * float(x[760]))+ (-2.072135 * float(x[761]))+ (-0.68596756 * float(x[762]))+ (-3.417131 * float(x[763]))+ (-2.82908 * float(x[764]))+ (0.48316076 * float(x[765]))+ (-0.7117013 * float(x[766]))+ (0.58124363 * float(x[767]))+ (-4.8809958 * float(x[768]))+ (4.238277 * float(x[769]))+ (-2.378047 * float(x[770]))+ (0.17031331 * float(x[771]))+ (-1.1639429 * float(x[772]))+ (1.7552562 * float(x[773]))+ (-5.856967 * float(x[774]))+ (3.2576692 * float(x[775]))+ (-0.6838352 * float(x[776]))+ (1.7492919 * float(x[777]))+ (2.9758074 * float(x[778]))+ (-0.39156252 * float(x[779]))+ (0.3932148 * float(x[780]))+ (2.0313463 * float(x[781]))+ (0.22648744 * float(x[782]))+ (8.741681 * float(x[783]))+ (2.1998374 * float(x[784]))+ (-0.75799567 * float(x[785]))+ (-1.0133579 * float(x[786]))+ (-0.33255836 * float(x[787]))+ (-0.7847646 * float(x[788]))+ (-7.0537806 * float(x[789]))+ (-6.8751955 * float(x[790]))+ (-5.6756835 * float(x[791]))+ (0.6985738 * float(x[792]))+ (-0.69489586 * float(x[793]))+ (1.1359448 * float(x[794]))+ (2.9965272 * float(x[795]))+ (-2.2298503 * float(x[796]))+ (-2.2798269 * float(x[797]))+ (-0.68023205 * float(x[798]))+ (0.068079606 * float(x[799])))+ ((-0.25783518 * float(x[800]))+ (-1.8628343 * float(x[801]))+ (-3.8314133 * float(x[802]))+ (-0.30786142 * float(x[803]))+ (-0.14578623 * float(x[804]))+ (-0.58618164 * float(x[805]))+ (-1.0807716 * float(x[806]))+ (0.9564789 * float(x[807]))+ (-0.7258407 * float(x[808]))+ (-2.3968425 * float(x[809]))+ (-0.62623423 * float(x[810]))+ (0.89636964 * float(x[811]))+ (-0.3988142 * float(x[812]))+ (-4.7333593 * float(x[813]))+ (0.9219986 * float(x[814]))+ (-2.2779338 * float(x[815]))+ (-1.6465781 * float(x[816]))+ (0.52667874 * float(x[817]))+ (-0.6438702 * float(x[818]))+ (0.2306885 * float(x[819]))+ (1.8978564 * float(x[820]))+ (-0.14919655 * float(x[821]))+ (-0.87289244 * float(x[822]))+ (0.11805785 * float(x[823]))+ (0.672007 * float(x[824]))+ (-0.43004522 * float(x[825]))+ (2.713267 * float(x[826]))+ (0.07452872 * float(x[827]))+ (1.3689327 * float(x[828]))+ (1.3357228 * float(x[829]))+ (0.00595627 * float(x[830]))+ (1.2953501 * float(x[831]))+ (-2.5286386 * float(x[832]))+ (0.8735746 * float(x[833]))+ (-4.6023216 * float(x[834]))+ (-4.5896 * float(x[835]))+ (0.733794 * float(x[836]))+ (2.6716273 * float(x[837]))+ (-0.34389684 * float(x[838]))+ (-0.5665737 * float(x[839]))+ (-1.8292686 * float(x[840]))+ (0.5569322 * float(x[841]))+ (-0.081940785 * float(x[842]))+ (0.39513123 * float(x[843]))+ (1.8848754 * float(x[844]))+ (1.2503096 * float(x[845]))+ (-0.53975886 * float(x[846]))+ (0.13754648 * float(x[847]))+ (-1.8216141 * float(x[848]))+ (0.6517155 * float(x[849])))+ ((0.43537202 * float(x[850]))+ (-1.0559485 * float(x[851]))+ (1.7748796 * float(x[852]))+ (1.3818699 * float(x[853]))+ (5.070741 * float(x[854]))+ (4.240045 * float(x[855]))+ (2.9393258 * float(x[856]))+ (-0.719368 * float(x[857]))+ (12.786782 * float(x[858]))+ (6.6312323 * float(x[859]))+ (6.2172546 * float(x[860]))+ (4.6780477 * float(x[861]))+ (0.9081058 * float(x[862]))+ (2.9601734 * float(x[863]))+ (2.0336678 * float(x[864]))+ (-1.0378364 * float(x[865]))+ (0.3987532 * float(x[866]))+ (-0.93683183 * float(x[867]))+ (-0.69373065 * float(x[868]))+ (0.17466757 * float(x[869]))+ (-1.0836337 * float(x[870]))+ (0.7727557 * float(x[871]))+ (0.3402312 * float(x[872]))+ (-0.5082569 * float(x[873]))+ (-0.6621605 * float(x[874]))+ (-0.83847404 * float(x[875]))+ (0.87099695 * float(x[876]))+ (0.7406703 * float(x[877]))+ (0.32448986 * float(x[878]))+ (-7.0366836 * float(x[879]))+ (1.9739256 * float(x[880]))+ (2.8613563 * float(x[881]))+ (2.4146018 * float(x[882]))+ (0.37736538 * float(x[883]))+ (2.3353648 * float(x[884]))+ (2.684523 * float(x[885]))+ (2.0931785 * float(x[886]))+ (-0.716987 * float(x[887]))+ (3.2862668 * float(x[888]))+ (1.6341515 * float(x[889]))+ (-2.1342318 * float(x[890]))+ (-0.8067693 * float(x[891]))+ (1.1606535 * float(x[892]))+ (3.366499 * float(x[893]))+ (2.4524286 * float(x[894]))+ (2.2878578 * float(x[895]))+ (2.5716755 * float(x[896]))+ (0.54354155 * float(x[897]))+ (-0.2144463 * float(x[898]))+ (-1.000383 * float(x[899])))+ ((-2.2684822 * float(x[900]))+ (-7.6202936 * float(x[901]))+ (-3.8867097 * float(x[902]))+ (-1.7316972 * float(x[903]))+ (-1.4068017 * float(x[904]))+ (2.3638873 * float(x[905]))+ (-3.929524 * float(x[906]))+ (-1.2267553 * float(x[907]))+ (-0.1878755 * float(x[908]))+ (0.25631884 * float(x[909]))+ (-2.0351398 * float(x[910]))+ (-1.8287034 * float(x[911]))+ (0.6376927 * float(x[912]))+ (0.33971697 * float(x[913]))+ (-1.4252163 * float(x[914]))+ (-3.287517 * float(x[915]))+ (-1.8955277 * float(x[916]))+ (-1.9876611 * float(x[917]))+ (-2.3516948 * float(x[918]))+ (-2.83746 * float(x[919]))+ (-2.744584 * float(x[920]))+ (-2.2765775 * float(x[921]))+ (0.23982802 * float(x[922]))+ (-0.3528791 * float(x[923]))+ (0.39990222 * float(x[924]))+ (0.52652407 * float(x[925]))+ (-1.3733224 * float(x[926]))+ (-0.8467899 * float(x[927]))+ (-1.0441388 * float(x[928]))+ (3.1286218 * float(x[929]))+ (-3.309194 * float(x[930]))+ (-0.45300928 * float(x[931]))+ (-2.7416036 * float(x[932]))+ (2.8273876 * float(x[933]))+ (-0.62537766 * float(x[934]))+ (1.8530331 * float(x[935]))+ (-2.1973827 * float(x[936]))+ (-0.7068798 * float(x[937]))+ (-3.542023 * float(x[938]))+ (3.7175562 * float(x[939]))+ (-0.91924304 * float(x[940]))+ (-1.0832481 * float(x[941]))+ (-0.0016185733 * float(x[942]))+ (-0.60410935 * float(x[943]))+ (-0.8389333 * float(x[944]))+ (0.13556084 * float(x[945]))+ (0.2831182 * float(x[946]))+ (2.9424193 * float(x[947]))+ (-0.15299892 * float(x[948]))+ (-1.8009219 * float(x[949])))+ ((1.1917739 * float(x[950]))+ (0.5199447 * float(x[951]))+ (0.2994597 * float(x[952]))+ (0.58940464 * float(x[953]))+ (0.058268525 * float(x[954]))+ (-0.50922555 * float(x[955]))+ (0.9195594 * float(x[956]))+ (-1.109907 * float(x[957]))+ (0.7478097 * float(x[958]))+ (-0.61825407 * float(x[959]))+ (-0.18643664 * float(x[960]))+ (0.054059528 * float(x[961]))+ (0.5665723 * float(x[962]))+ (-0.86803144 * float(x[963]))+ (0.17759284 * float(x[964]))+ (-1.745595 * float(x[965]))+ (-0.42058226 * float(x[966]))+ (-0.25978643 * float(x[967]))+ (0.90865666 * float(x[968]))+ (-0.44225064 * float(x[969]))+ (-0.39054495 * float(x[970]))+ (0.39728388 * float(x[971]))+ (0.45610923 * float(x[972]))+ (2.0407085 * float(x[973]))+ (-0.5876773 * float(x[974]))+ (1.0817345 * float(x[975]))+ (-0.7083604 * float(x[976]))+ (-1.275954 * float(x[977]))+ (0.11084316 * float(x[978]))+ (1.4769136 * float(x[979]))+ (0.51900524 * float(x[980]))+ (-0.76644576 * float(x[981]))+ (0.0087060435 * float(x[982]))+ (-0.8321438 * float(x[983]))+ (-1.0481004 * float(x[984]))+ (1.86136 * float(x[985]))+ (-0.5316171 * float(x[986]))+ (-0.31635404 * float(x[987]))+ (1.8965173 * float(x[988]))+ (-2.1467438 * float(x[989]))+ (-0.7627986 * float(x[990]))+ (0.8897619 * float(x[991]))+ (1.0049719 * float(x[992]))+ (-0.09680428 * float(x[993]))+ (0.07728053 * float(x[994]))+ (0.26182342 * float(x[995]))+ (0.40839872 * float(x[996]))+ (-2.7205029 * float(x[997]))+ (0.27924734 * float(x[998]))+ (0.100294925 * float(x[999])))+ ((0.49675852 * float(x[1000]))+ (-0.81017226 * float(x[1001]))+ (-0.43742928 * float(x[1002]))+ (0.44560048 * float(x[1003]))+ (0.0968169 * float(x[1004]))+ (-0.9043511 * float(x[1005]))+ (1.1513824 * float(x[1006]))+ (-1.2696203 * float(x[1007]))+ (0.6843979 * float(x[1008]))+ (0.3625907 * float(x[1009]))+ (-2.5370636 * float(x[1010]))+ (-1.5744339 * float(x[1011]))+ (-1.0391419 * float(x[1012]))+ (0.09816859 * float(x[1013]))+ (-0.656449 * float(x[1014]))+ (-1.1788324 * float(x[1015]))+ (0.45219538 * float(x[1016]))+ (-1.3527244 * float(x[1017]))+ (1.7087237 * float(x[1018]))+ (-0.64809644 * float(x[1019]))+ (0.08373771 * float(x[1020]))+ (0.8860976 * float(x[1021]))+ (1.3507192 * float(x[1022]))+ (0.8942242 * float(x[1023]))+ (-1.0405259 * float(x[1024]))+ (-0.60395205 * float(x[1025]))+ (-0.014160072 * float(x[1026]))+ (1.5515344 * float(x[1027]))+ (-0.9038101 * float(x[1028]))+ (0.82766366 * float(x[1029]))+ (0.20059843 * float(x[1030]))+ (2.190857 * float(x[1031]))+ (-1.0032239 * float(x[1032]))+ (0.3466236 * float(x[1033]))+ (-0.53041375 * float(x[1034]))+ (-0.97750616 * float(x[1035]))+ (-1.1572425 * float(x[1036]))+ (1.8252544 * float(x[1037]))+ (0.14685385 * float(x[1038]))+ (-2.339593 * float(x[1039]))+ (-1.7353336 * float(x[1040]))+ (0.0964515 * float(x[1041]))+ (-0.908647 * float(x[1042]))+ (-1.6209488 * float(x[1043]))+ (-1.3794888 * float(x[1044]))+ (0.8179915 * float(x[1045]))+ (2.3380957 * float(x[1046]))+ (-1.1992615 * float(x[1047]))+ (0.62948143 * float(x[1048]))+ (-1.4330355 * float(x[1049])))+ ((0.41252983 * float(x[1050]))+ (0.3338813 * float(x[1051]))+ (0.45317256 * float(x[1052]))+ (1.5414664 * float(x[1053]))+ (-0.38617882 * float(x[1054]))+ (-0.9258198 * float(x[1055]))+ (0.06426064 * float(x[1056]))+ (0.082687184 * float(x[1057]))+ (-0.42285627 * float(x[1058]))+ (-1.2496827 * float(x[1059]))+ (0.16342366 * float(x[1060]))+ (-0.025899913 * float(x[1061]))+ (-0.7553387 * float(x[1062]))+ (0.3934204 * float(x[1063]))+ (-0.8289775 * float(x[1064]))+ (-0.5773694 * float(x[1065]))+ (0.49013093 * float(x[1066]))+ (1.022629 * float(x[1067]))+ (-0.52298045 * float(x[1068]))+ (-0.44984233 * float(x[1069]))+ (0.35988858 * float(x[1070]))+ (-1.655434 * float(x[1071]))+ (-0.18944266 * float(x[1072]))+ (0.8281433 * float(x[1073]))+ (0.37414703 * float(x[1074]))+ (0.61037743 * float(x[1075]))+ (0.89902 * float(x[1076]))+ (-1.5135704 * float(x[1077]))+ (0.064897485 * float(x[1078]))+ (-0.5401658 * float(x[1079]))+ (-1.855725 * float(x[1080]))+ (-1.6531632 * float(x[1081]))+ (1.2305318 * float(x[1082]))+ (0.17445675 * float(x[1083]))+ (-1.7911044 * float(x[1084]))+ (-1.9124678 * float(x[1085]))+ (-1.2151921 * float(x[1086]))+ (0.4636554 * float(x[1087]))+ (0.7469261 * float(x[1088]))+ (-0.7692593 * float(x[1089]))+ (0.61089206 * float(x[1090]))+ (-0.30175656 * float(x[1091]))+ (-0.90307975 * float(x[1092]))+ (0.10695599 * float(x[1093]))+ (1.1344677 * float(x[1094]))+ (-1.2522156 * float(x[1095]))+ (-0.3868439 * float(x[1096]))+ (0.104125455 * float(x[1097]))+ (-0.88807744 * float(x[1098]))+ (0.4100869 * float(x[1099])))+ ((0.5728386 * float(x[1100]))+ (0.21161519 * float(x[1101]))+ (2.431649 * float(x[1102]))+ (2.331182 * float(x[1103]))+ (0.07712383 * float(x[1104]))+ (0.48880953 * float(x[1105]))+ (-1.6532854 * float(x[1106]))+ (1.498004 * float(x[1107]))+ (0.10902918 * float(x[1108]))+ (0.17460077 * float(x[1109]))+ (1.6414851 * float(x[1110]))+ (2.3025963 * float(x[1111]))+ (-0.56072885 * float(x[1112]))+ (-4.0508976 * float(x[1113]))+ (0.28880522 * float(x[1114]))+ (0.7458722 * float(x[1115]))+ (-0.8644832 * float(x[1116]))+ (-0.69178236 * float(x[1117]))+ (1.3094803 * float(x[1118]))+ (-0.96549743 * float(x[1119]))+ (-0.013538217 * float(x[1120]))+ (-0.77887464 * float(x[1121]))+ (0.28835705 * float(x[1122]))+ (0.79869145 * float(x[1123]))+ (1.741363 * float(x[1124]))+ (-0.6071722 * float(x[1125]))+ (-1.9703524 * float(x[1126]))+ (0.5448106 * float(x[1127]))+ (1.0934253 * float(x[1128]))+ (-2.3040843 * float(x[1129]))+ (-1.893836 * float(x[1130]))+ (2.0553544 * float(x[1131]))+ (-0.8257069 * float(x[1132]))+ (-1.2431413 * float(x[1133]))+ (-3.4514425 * float(x[1134]))+ (0.5923795 * float(x[1135]))+ (1.0581868 * float(x[1136]))+ (-0.39770547 * float(x[1137]))+ (-0.76726323 * float(x[1138]))+ (-1.8101615 * float(x[1139]))+ (-0.58304435 * float(x[1140]))+ (-0.51250315 * float(x[1141]))+ (2.0126908 * float(x[1142]))+ (-0.6747909 * float(x[1143]))+ (-0.99038506 * float(x[1144]))+ (-0.08629289 * float(x[1145]))+ (1.0146083 * float(x[1146]))+ (-1.6745702 * float(x[1147]))+ (-0.48284185 * float(x[1148]))+ (-2.2134905 * float(x[1149])))+ ((1.1766806 * float(x[1150]))+ (-1.5176572 * float(x[1151]))+ (-2.8743904 * float(x[1152]))+ (0.9381535 * float(x[1153]))+ (2.6974099 * float(x[1154]))+ (0.5199868 * float(x[1155]))+ (0.67499703 * float(x[1156]))+ (0.7209426 * float(x[1157]))+ (-0.09854878 * float(x[1158]))+ (-0.35799313 * float(x[1159]))+ (-2.199983 * float(x[1160]))+ (0.16530791 * float(x[1161]))+ (-0.6663118 * float(x[1162]))+ (-1.1533798 * float(x[1163]))+ (-0.78466845 * float(x[1164]))+ (-0.26538703 * float(x[1165]))+ (-0.5378356 * float(x[1166]))+ (1.9124118 * float(x[1167]))+ (0.41895497 * float(x[1168]))+ (-1.1828152 * float(x[1169]))+ (0.7308939 * float(x[1170]))+ (1.1165382 * float(x[1171]))+ (0.12352948 * float(x[1172]))+ (-0.35874265 * float(x[1173]))+ (0.86739206 * float(x[1174]))+ (-0.15414132 * float(x[1175]))+ (-1.1786559 * float(x[1176]))+ (-0.40255326 * float(x[1177]))+ (-3.050208 * float(x[1178]))+ (2.5779865 * float(x[1179]))+ (-0.5339552 * float(x[1180]))+ (0.81663346 * float(x[1181]))+ (1.0193754 * float(x[1182]))+ (0.9399658 * float(x[1183]))+ (1.1132002 * float(x[1184]))+ (-0.69182587 * float(x[1185]))+ (0.53389806 * float(x[1186]))+ (1.6032361 * float(x[1187]))+ (0.4980206 * float(x[1188]))+ (0.9913817 * float(x[1189]))+ (1.0554127 * float(x[1190]))+ (1.3458784 * float(x[1191]))+ (-0.25784677 * float(x[1192]))+ (2.1459723 * float(x[1193]))+ (-1.0450044 * float(x[1194]))+ (-0.8488854 * float(x[1195]))+ (0.613163 * float(x[1196]))+ (-0.9762284 * float(x[1197]))+ (0.89184886 * float(x[1198]))+ (-1.3434018 * float(x[1199])))+ ((0.30951434 * float(x[1200]))+ (-0.49781194 * float(x[1201]))+ (-0.6079701 * float(x[1202]))+ (-0.4498403 * float(x[1203]))+ (-0.72930825 * float(x[1204]))+ (-0.5728787 * float(x[1205]))+ (0.16326964 * float(x[1206]))+ (-1.4768395 * float(x[1207]))+ (-0.18521486 * float(x[1208]))+ (-1.3285908 * float(x[1209]))+ (-0.05346955 * float(x[1210]))+ (-0.5677929 * float(x[1211]))+ (-1.4805727 * float(x[1212]))+ (-0.5615645 * float(x[1213]))+ (-0.67713726 * float(x[1214]))+ (-0.6111974 * float(x[1215]))+ (-0.78654987 * float(x[1216]))+ (0.24383451 * float(x[1217]))+ (-0.12298367 * float(x[1218]))+ (-0.03238624 * float(x[1219]))+ (-0.37951118 * float(x[1220]))+ (0.23915398 * float(x[1221]))+ (-1.917162 * float(x[1222]))+ (-0.060179207 * float(x[1223]))+ (-0.84904426 * float(x[1224]))+ (-1.3570551 * float(x[1225]))+ (-0.18529493 * float(x[1226]))+ (-0.31205866 * float(x[1227]))+ (0.23897347 * float(x[1228]))+ (-0.6714819 * float(x[1229]))+ (-1.5161518 * float(x[1230]))+ (-1.1707245 * float(x[1231]))+ (-0.99518025 * float(x[1232]))+ (-1.2748209 * float(x[1233]))+ (-0.644283 * float(x[1234]))+ (-0.016311912 * float(x[1235]))+ (0.43595806 * float(x[1236]))+ (-2.0856638 * float(x[1237]))+ (-1.606682 * float(x[1238]))+ (-0.7053223 * float(x[1239]))+ (-1.1508956 * float(x[1240]))+ (0.4863089 * float(x[1241]))+ (-1.914432 * float(x[1242]))+ (-0.7890248 * float(x[1243]))+ (0.1800598 * float(x[1244]))+ (-0.63979346 * float(x[1245]))+ (0.7837509 * float(x[1246]))+ (-0.24313499 * float(x[1247]))+ (-0.5804785 * float(x[1248]))+ (0.5710892 * float(x[1249])))+ ((-1.4046863 * float(x[1250]))+ (-0.6008603 * float(x[1251]))+ (0.35224685 * float(x[1252]))+ (-0.259852 * float(x[1253]))+ (-1.2278377 * float(x[1254]))+ (-0.9426064 * float(x[1255]))+ (0.2757947 * float(x[1256]))+ (-0.084083684 * float(x[1257]))+ (0.18083599 * float(x[1258]))+ (-1.0865474 * float(x[1259]))+ (-0.181778 * float(x[1260]))+ (-0.8188464 * float(x[1261]))+ (-0.4493053 * float(x[1262]))+ (0.9047579 * float(x[1263]))+ (0.5928986 * float(x[1264]))+ (0.17682683 * float(x[1265]))+ (-0.30720204 * float(x[1266]))+ (0.005816382 * float(x[1267]))+ (-0.28118807 * float(x[1268]))+ (-1.275443 * float(x[1269]))+ (-1.2687353 * float(x[1270]))+ (0.39468923 * float(x[1271]))+ (-0.56211513 * float(x[1272]))+ (0.055125616 * float(x[1273]))+ (0.46112573 * float(x[1274]))+ (-0.46964636 * float(x[1275]))+ (-1.0710404 * float(x[1276]))+ (-0.20131588 * float(x[1277]))+ (-0.28326187 * float(x[1278]))+ (-0.67240757 * float(x[1279]))+ (-0.20371206 * float(x[1280]))+ (-2.0128007 * float(x[1281]))+ (-1.5143838 * float(x[1282]))+ (-1.122478 * float(x[1283]))+ (0.95909303 * float(x[1284]))+ (-1.3305084 * float(x[1285]))+ (-0.27826598 * float(x[1286]))+ (-1.2940958 * float(x[1287]))+ (-1.1373644 * float(x[1288]))+ (-0.39542025 * float(x[1289]))+ (0.05316579 * float(x[1290]))+ (0.026011875 * float(x[1291]))+ (-1.3577615 * float(x[1292]))+ (-1.2353024 * float(x[1293]))+ (0.3976229 * float(x[1294]))+ (-1.0211703 * float(x[1295]))+ (-1.9626297 * float(x[1296]))+ (0.7084534 * float(x[1297]))+ (-0.8211652 * float(x[1298]))+ (0.34044832 * float(x[1299])))+ ((-1.0915039 * float(x[1300]))+ (-1.2901934 * float(x[1301]))+ (-0.1946774 * float(x[1302]))+ (-0.08248286 * float(x[1303]))+ (0.42489102 * float(x[1304]))+ (-0.047299843 * float(x[1305]))+ (-0.37683132 * float(x[1306]))+ (0.18293066 * float(x[1307]))+ (0.03449402 * float(x[1308]))+ (0.27519983 * float(x[1309]))+ (-1.5653964 * float(x[1310]))+ (-0.82168305 * float(x[1311]))+ (-0.59763396 * float(x[1312]))+ (-0.33762324 * float(x[1313]))+ (0.39410374 * float(x[1314]))+ (0.7793264 * float(x[1315]))+ (0.6108217 * float(x[1316]))+ (-0.03238909 * float(x[1317]))+ (0.29153037 * float(x[1318]))+ (-0.047678024 * float(x[1319]))+ (-2.001367 * float(x[1320]))+ (-1.6555673 * float(x[1321]))+ (-0.74898195 * float(x[1322]))+ (-0.040278833 * float(x[1323]))+ (0.4035508 * float(x[1324]))+ (-0.25405657 * float(x[1325]))+ (-1.9524169 * float(x[1326]))+ (-1.7347271 * float(x[1327]))+ (0.29576352 * float(x[1328]))+ (-1.5020211 * float(x[1329]))+ (-0.39492208 * float(x[1330]))+ (1.3275927 * float(x[1331]))+ (-0.10355957 * float(x[1332]))+ (0.06835881 * float(x[1333]))+ (0.049899917 * float(x[1334]))+ (-0.15584376 * float(x[1335]))+ (0.050656915 * float(x[1336]))+ (-0.17361403 * float(x[1337]))+ (-0.37417743 * float(x[1338]))+ (-1.6299821 * float(x[1339]))+ (-0.00021264228 * float(x[1340]))+ (-0.44402993 * float(x[1341]))+ (0.7571898 * float(x[1342]))+ (-0.7270702 * float(x[1343]))+ (0.40549958 * float(x[1344]))+ (-1.8808103 * float(x[1345]))+ (-1.2553489 * float(x[1346]))+ (-0.641546 * float(x[1347]))+ (-0.45616603 * float(x[1348]))+ (-0.6786202 * float(x[1349])))+ ((-1.2204026 * float(x[1350]))+ (-0.70474786 * float(x[1351]))+ (0.19461341 * float(x[1352]))+ (0.6694166 * float(x[1353]))+ (-1.4734217 * float(x[1354]))+ (-0.8652679 * float(x[1355]))+ (-1.5578808 * float(x[1356]))+ (0.36187047 * float(x[1357]))+ (-0.20409332 * float(x[1358]))+ (0.45913717 * float(x[1359]))+ (0.45950904 * float(x[1360]))+ (-0.39864638 * float(x[1361]))+ (0.4665231 * float(x[1362]))+ (-0.22683702 * float(x[1363]))+ (0.115316175 * float(x[1364]))+ (0.9632695 * float(x[1365]))+ (-2.0480952 * float(x[1366]))+ (-0.39571542 * float(x[1367]))+ (-0.4880934 * float(x[1368]))+ (-0.34482726 * float(x[1369]))+ (-0.04797321 * float(x[1370]))+ (0.20866564 * float(x[1371]))+ (-1.6578937 * float(x[1372]))+ (-1.8207077 * float(x[1373]))+ (0.81650186 * float(x[1374]))+ (-0.8341508 * float(x[1375]))+ (-1.1035979 * float(x[1376]))+ (-0.4786594 * float(x[1377]))+ (-0.5945478 * float(x[1378]))+ (0.374345 * float(x[1379]))+ (-0.6050905 * float(x[1380]))+ (0.83070177 * float(x[1381]))+ (-0.66720617 * float(x[1382]))+ (-1.0863652 * float(x[1383]))+ (0.12537003 * float(x[1384]))+ (0.252229 * float(x[1385]))+ (-1.2124003 * float(x[1386]))+ (-1.2325733 * float(x[1387]))+ (-1.0756779 * float(x[1388]))+ (-1.0850194 * float(x[1389]))+ (0.013479945 * float(x[1390]))+ (-1.072767 * float(x[1391]))+ (-0.10439962 * float(x[1392]))+ (0.9364427 * float(x[1393]))+ (0.28399235 * float(x[1394]))+ (0.73656344 * float(x[1395]))+ (0.92265695 * float(x[1396]))+ (0.57951105 * float(x[1397]))+ (0.46449357 * float(x[1398]))+ (-0.5058913 * float(x[1399])))+ ((-0.9537834 * float(x[1400]))+ (-1.507025 * float(x[1401]))+ (-0.51910746 * float(x[1402]))+ (0.5054904 * float(x[1403]))+ (0.12950909 * float(x[1404]))+ (-0.6118616 * float(x[1405]))+ (-0.57967496 * float(x[1406]))+ (0.19401108 * float(x[1407]))+ (-0.2587007 * float(x[1408]))+ (-0.82904285 * float(x[1409]))+ (-0.009742922 * float(x[1410]))+ (-0.9923479 * float(x[1411]))+ (-0.73856807 * float(x[1412]))+ (-1.1488944 * float(x[1413]))+ (-1.9761629 * float(x[1414]))+ (-1.3554413 * float(x[1415]))+ (-0.9251842 * float(x[1416]))+ (-0.5778547 * float(x[1417]))+ (-0.011620058 * float(x[1418]))+ (-0.8005811 * float(x[1419]))+ (-1.5936097 * float(x[1420]))+ (-1.3703225 * float(x[1421]))+ (-0.48930976 * float(x[1422]))+ (-0.6667281 * float(x[1423]))+ (-1.0267206 * float(x[1424]))+ (0.58268386 * float(x[1425]))+ (0.26441744 * float(x[1426]))+ (-0.5649449 * float(x[1427]))+ (0.14951167 * float(x[1428]))+ (-0.23780443 * float(x[1429]))+ (-0.7373444 * float(x[1430]))+ (-0.64965993 * float(x[1431]))+ (-0.3629429 * float(x[1432]))+ (-0.6200848 * float(x[1433]))+ (-0.97368455 * float(x[1434]))+ (-0.86026025 * float(x[1435]))+ (0.18238164 * float(x[1436]))+ (0.2783738 * float(x[1437]))+ (0.20821577 * float(x[1438]))+ (-0.23400642 * float(x[1439]))+ (-0.759324 * float(x[1440]))+ (-1.3519148 * float(x[1441]))+ (-0.18335135 * float(x[1442]))+ (-1.1490077 * float(x[1443]))+ (-0.8675634 * float(x[1444]))+ (-0.36473203 * float(x[1445]))+ (0.48275954 * float(x[1446]))+ (-0.43400127 * float(x[1447]))+ (0.22596793 * float(x[1448]))+ (0.32557154 * float(x[1449])))+ ((-0.39757222 * float(x[1450]))+ (0.083404206 * float(x[1451]))+ (0.5461433 * float(x[1452]))+ (-0.7856237 * float(x[1453]))+ (-0.57439893 * float(x[1454]))+ (-0.29666594 * float(x[1455]))+ (-0.40409312 * float(x[1456]))+ (0.48831263 * float(x[1457]))+ (-1.2427983 * float(x[1458]))+ (0.61128986 * float(x[1459]))+ (0.46018636 * float(x[1460]))+ (-0.50122 * float(x[1461]))+ (0.31083414 * float(x[1462]))+ (-0.11094366 * float(x[1463]))+ (0.39883593 * float(x[1464]))+ (-0.7191485 * float(x[1465]))+ (-1.4588779 * float(x[1466]))+ (-0.01951174 * float(x[1467]))+ (-0.13513161 * float(x[1468]))+ (-1.8265874 * float(x[1469]))+ (-0.48057994 * float(x[1470]))+ (-0.79850185 * float(x[1471]))+ (0.45891488 * float(x[1472]))+ (-0.7498072 * float(x[1473]))+ (-0.005966006 * float(x[1474]))+ (0.023289718 * float(x[1475]))+ (-1.0204917 * float(x[1476]))+ (0.07437246 * float(x[1477]))+ (-0.09682632 * float(x[1478]))+ (-1.2565084 * float(x[1479]))+ (-1.1174171 * float(x[1480]))+ (-2.1490326 * float(x[1481]))+ (0.49349627 * float(x[1482]))+ (-0.058771044 * float(x[1483]))+ (0.11491884 * float(x[1484]))+ (-0.2624372 * float(x[1485]))+ (0.5995088 * float(x[1486]))+ (-0.942072 * float(x[1487]))+ (-1.1663916 * float(x[1488]))+ (-0.5551071 * float(x[1489]))+ (0.40338388 * float(x[1490]))+ (-0.791962 * float(x[1491]))+ (0.7846549 * float(x[1492]))+ (0.08530718 * float(x[1493]))+ (-1.8121707 * float(x[1494]))+ (-1.248357 * float(x[1495]))+ (-1.1633235 * float(x[1496]))+ (-1.241498 * float(x[1497]))+ (-1.2178293 * float(x[1498]))+ (-0.42754382 * float(x[1499])))+ ((-0.11798713 * float(x[1500]))+ (-1.69617 * float(x[1501]))+ (-0.41803348 * float(x[1502]))+ (0.20026943 * float(x[1503]))+ (-0.037689228 * float(x[1504]))+ (0.18508537 * float(x[1505]))+ (-1.0722647 * float(x[1506]))+ (-0.14554998 * float(x[1507]))+ (0.23221774 * float(x[1508]))+ (-0.8837563 * float(x[1509]))+ (-1.0264237 * float(x[1510]))+ (-0.5422876 * float(x[1511]))+ (-0.61718947 * float(x[1512]))+ (0.15901314 * float(x[1513]))+ (-0.9582244 * float(x[1514]))+ (0.06130112 * float(x[1515]))+ (-0.22253574 * float(x[1516]))+ (-1.1662341 * float(x[1517]))+ (0.6538849 * float(x[1518]))+ (-0.09913785 * float(x[1519]))+ (0.43049783 * float(x[1520]))+ (-0.29850164 * float(x[1521]))+ (0.22753368 * float(x[1522]))+ (-0.27003002 * float(x[1523]))+ (0.42767355 * float(x[1524]))+ (-1.4323022 * float(x[1525]))+ (-0.23194663 * float(x[1526]))+ (-0.9857253 * float(x[1527]))+ (0.4686288 * float(x[1528]))+ (-1.2100915 * float(x[1529]))+ (0.58596987 * float(x[1530]))+ (-0.04262639 * float(x[1531]))+ (-1.1789722 * float(x[1532]))+ (-0.32296374 * float(x[1533]))+ (-0.39631382 * float(x[1534]))+ (0.057133663 * float(x[1535]))+ (0.13772807 * float(x[1536]))+ (-0.19916764 * float(x[1537]))+ (-0.32530734 * float(x[1538]))+ (-0.75901973 * float(x[1539]))+ (0.45942944 * float(x[1540]))+ (-0.66839427 * float(x[1541]))+ (-1.4058496 * float(x[1542]))+ (-0.37088794 * float(x[1543]))+ (-0.78919107 * float(x[1544]))+ (-0.4674195 * float(x[1545]))+ (-0.59485656 * float(x[1546]))+ (-1.1610849 * float(x[1547]))+ (0.009481063 * float(x[1548]))+ (-0.16341451 * float(x[1549])))+ ((0.2145331 * float(x[1550]))+ (0.3884472 * float(x[1551]))+ (-0.95710534 * float(x[1552]))+ (-0.7503461 * float(x[1553]))+ (0.2816772 * float(x[1554]))+ (-1.2457918 * float(x[1555]))+ (-0.6414718 * float(x[1556]))+ (0.032576833 * float(x[1557]))+ (0.6319481 * float(x[1558]))+ (-0.40755492 * float(x[1559]))+ (0.0073049837 * float(x[1560]))+ (-1.625279 * float(x[1561]))+ (-0.74433637 * float(x[1562]))+ (-0.2773431 * float(x[1563]))+ (-1.1843743 * float(x[1564]))+ (-1.2846882 * float(x[1565]))+ (-0.9052635 * float(x[1566]))+ (-0.5931359 * float(x[1567]))+ (-0.508584 * float(x[1568]))+ (-0.15192647 * float(x[1569]))+ (0.088217385 * float(x[1570]))+ (-1.1745726 * float(x[1571]))+ (-0.65338916 * float(x[1572]))+ (-1.6736645 * float(x[1573]))+ (-1.703332 * float(x[1574]))+ (-0.77938145 * float(x[1575]))+ (-0.67866665 * float(x[1576]))+ (-0.59494585 * float(x[1577]))+ (0.20252544 * float(x[1578]))+ (0.1692582 * float(x[1579]))+ (0.29275626 * float(x[1580]))+ (-0.2030637 * float(x[1581]))+ (0.11701753 * float(x[1582]))+ (0.390179 * float(x[1583]))+ (-0.19295514 * float(x[1584]))+ (0.20734708 * float(x[1585]))+ (-1.6147634 * float(x[1586]))+ (-0.23661457 * float(x[1587]))+ (-1.0591837 * float(x[1588]))+ (0.52221143 * float(x[1589]))+ (0.30780682 * float(x[1590]))+ (-0.6247116 * float(x[1591]))+ (-1.4566255 * float(x[1592]))+ (-1.6542194 * float(x[1593]))+ (0.1178356 * float(x[1594]))+ (-0.4841468 * float(x[1595]))+ (-0.2034083 * float(x[1596]))+ (0.5083201 * float(x[1597]))+ (-1.4564911 * float(x[1598]))+ (0.15876731 * float(x[1599])))+ ((-1.3215095 * float(x[1600]))+ (-1.1534134 * float(x[1601]))+ (0.8212204 * float(x[1602]))+ (1.0468799 * float(x[1603]))+ (-1.4637666 * float(x[1604]))+ (-0.36463585 * float(x[1605]))+ (-1.2889608 * float(x[1606]))+ (-0.08625123 * float(x[1607]))+ (0.27991253 * float(x[1608]))+ (-0.05029859 * float(x[1609]))+ (-0.5906279 * float(x[1610]))+ (-0.66860855 * float(x[1611]))+ (-0.16838688 * float(x[1612]))+ (-0.6936477 * float(x[1613]))+ (0.46725973 * float(x[1614]))+ (0.012369788 * float(x[1615]))+ (-1.2746863 * float(x[1616]))+ (-1.9209433 * float(x[1617]))+ (-1.6171522 * float(x[1618]))+ (-0.93385977 * float(x[1619]))+ (-0.30033886 * float(x[1620]))+ (-0.7045411 * float(x[1621]))+ (-0.53265977 * float(x[1622]))+ (0.12430627 * float(x[1623]))+ (0.4435837 * float(x[1624]))+ (0.6139908 * float(x[1625]))+ (0.38225335 * float(x[1626]))+ (0.28838864 * float(x[1627]))+ (-0.28786027 * float(x[1628]))+ (-0.68553895 * float(x[1629]))+ (-0.3887662 * float(x[1630]))+ (-1.5476769 * float(x[1631]))+ (-2.1874714 * float(x[1632]))+ (-1.190965 * float(x[1633]))+ (-0.19113845 * float(x[1634]))+ (0.27832302 * float(x[1635]))+ (-1.46138 * float(x[1636]))+ (-0.03251745 * float(x[1637]))+ (0.209192 * float(x[1638]))+ (-0.66024905 * float(x[1639]))+ (-0.49088463 * float(x[1640]))+ (-0.29453626 * float(x[1641]))+ (-0.75850123 * float(x[1642]))+ (0.65919954 * float(x[1643]))+ (0.56832767 * float(x[1644]))+ (0.24553294 * float(x[1645]))+ (-1.1639946 * float(x[1646]))+ (-0.15364532 * float(x[1647]))+ (-1.1699256 * float(x[1648]))+ (-0.49372044 * float(x[1649])))+ ((-1.5265526 * float(x[1650]))+ (-1.0066048 * float(x[1651]))+ (-0.2583799 * float(x[1652]))+ (-0.17360048 * float(x[1653]))+ (-0.8280075 * float(x[1654]))+ (0.06758858 * float(x[1655]))+ (-1.1907547 * float(x[1656]))+ (0.21720104 * float(x[1657]))+ (-0.031895384 * float(x[1658]))+ (-0.26399845 * float(x[1659]))+ (-0.46614575 * float(x[1660]))+ (-0.5155822 * float(x[1661]))+ (-0.50685936 * float(x[1662]))+ (0.10773342 * float(x[1663]))+ (-0.57869047 * float(x[1664]))+ (-0.13299714 * float(x[1665]))+ (0.055862717 * float(x[1666]))+ (-1.1435864 * float(x[1667]))+ (-0.65741354 * float(x[1668]))+ (-0.05929651 * float(x[1669]))+ (-0.35247228 * float(x[1670]))+ (-1.257148 * float(x[1671]))+ (-0.9835665 * float(x[1672]))+ (0.52017766 * float(x[1673]))+ (0.29217547 * float(x[1674]))+ (0.15618761 * float(x[1675]))+ (-0.93743175 * float(x[1676]))+ (-1.6231407 * float(x[1677]))+ (-0.5566822 * float(x[1678]))+ (0.09067277 * float(x[1679]))+ (0.33402145 * float(x[1680]))+ (-0.08781189 * float(x[1681]))+ (-1.754032 * float(x[1682]))+ (-1.6678048 * float(x[1683]))+ (-0.67739516 * float(x[1684]))+ (-1.0190002 * float(x[1685]))+ (-0.1984343 * float(x[1686]))+ (-0.7161439 * float(x[1687]))+ (-0.7003216 * float(x[1688]))+ (0.107162 * float(x[1689]))+ (-0.6716551 * float(x[1690]))+ (-0.02061037 * float(x[1691]))+ (-1.1999283 * float(x[1692]))+ (-1.4582866 * float(x[1693]))+ (-0.76341856 * float(x[1694]))+ (-1.6041702 * float(x[1695]))+ (-0.16449535 * float(x[1696]))+ (-0.47262573 * float(x[1697]))+ (0.47590858 * float(x[1698]))+ (0.4051985 * float(x[1699])))+ ((0.20015967 * float(x[1700]))+ (-0.012492428 * float(x[1701]))+ (-1.3392351 * float(x[1702]))+ (-1.1704094 * float(x[1703]))+ (0.079416886 * float(x[1704]))+ (-0.809998 * float(x[1705]))+ (-1.3936058 * float(x[1706]))+ (-0.6811159 * float(x[1707]))+ (0.45008397 * float(x[1708]))+ (-1.1763012 * float(x[1709]))+ (-0.6126083 * float(x[1710]))+ (-1.3354954 * float(x[1711]))+ (-0.05400169 * float(x[1712]))+ (-1.0579816 * float(x[1713]))+ (-1.0933727 * float(x[1714]))+ (-0.91877586 * float(x[1715]))+ (-0.043024935 * float(x[1716]))+ (-0.89799374 * float(x[1717]))+ (-0.52376235 * float(x[1718]))+ (0.29595593 * float(x[1719]))+ (-0.2626318 * float(x[1720]))+ (-1.1602925 * float(x[1721]))+ (-0.9050368 * float(x[1722]))+ (0.0358296 * float(x[1723]))+ (-1.3978955 * float(x[1724]))+ (-0.3673495 * float(x[1725]))+ (-1.0098053 * float(x[1726]))+ (-1.512629 * float(x[1727]))+ (-0.39580637 * float(x[1728]))+ (-1.5449276 * float(x[1729]))+ (-0.73373693 * float(x[1730]))+ (-0.96856433 * float(x[1731]))+ (-1.7961481 * float(x[1732]))+ (-1.4056727 * float(x[1733]))+ (-1.1802518 * float(x[1734]))+ (-0.3715898 * float(x[1735]))+ (-0.47565588 * float(x[1736]))+ (-4.218503e-05 * float(x[1737]))+ (-1.2830263 * float(x[1738]))+ (-0.9956641 * float(x[1739]))+ (0.33602017 * float(x[1740]))+ (-1.3674159 * float(x[1741]))+ (0.09619473 * float(x[1742]))+ (-0.04059948 * float(x[1743]))+ (-0.15221852 * float(x[1744]))+ (-1.0524503 * float(x[1745]))+ (-1.3836746 * float(x[1746]))+ (-1.4431323 * float(x[1747]))+ (-1.3146677 * float(x[1748]))+ (-0.13684362 * float(x[1749])))+ ((-1.0118067 * float(x[1750]))+ (0.04306504 * float(x[1751]))+ (-0.6472505 * float(x[1752]))+ (-1.0564476 * float(x[1753]))+ (-1.1851643 * float(x[1754]))+ (0.8210523 * float(x[1755]))+ (-0.32836333 * float(x[1756]))+ (-0.5161219 * float(x[1757]))+ (-0.28914112 * float(x[1758]))+ (-0.8003427 * float(x[1759]))+ (-0.009721908 * float(x[1760]))+ (-1.4898826 * float(x[1761]))+ (0.031818546 * float(x[1762]))+ (-2.0014994 * float(x[1763]))+ (0.562973 * float(x[1764]))+ (0.11370467 * float(x[1765]))+ (-0.15660813 * float(x[1766]))+ (0.19597998 * float(x[1767]))+ (-0.35406178 * float(x[1768]))+ (-0.4897505 * float(x[1769]))+ (-0.27190667 * float(x[1770]))+ (-0.87993205 * float(x[1771]))+ (0.16438034 * float(x[1772]))+ (-0.93679297 * float(x[1773]))+ (-1.0184003 * float(x[1774]))+ (-0.92258304 * float(x[1775]))) + 1.0693209), 0)
    h_1 = max((((-0.34094062 * float(x[0]))+ (0.3219182 * float(x[1]))+ (-0.04991757 * float(x[2]))+ (0.12907346 * float(x[3]))+ (0.25770926 * float(x[4]))+ (-0.11717844 * float(x[5]))+ (-0.42030334 * float(x[6]))+ (-0.67637473 * float(x[7]))+ (-0.9589639 * float(x[8]))+ (0.46911994 * float(x[9]))+ (-0.7954418 * float(x[10]))+ (-0.0654961 * float(x[11]))+ (-0.3436091 * float(x[12]))+ (-0.43068174 * float(x[13]))+ (-0.7346388 * float(x[14]))+ (-1.0524957 * float(x[15]))+ (-0.3292388 * float(x[16]))+ (-0.62160707 * float(x[17]))+ (0.3849009 * float(x[18]))+ (0.9415176 * float(x[19]))+ (0.2481628 * float(x[20]))+ (0.111757755 * float(x[21]))+ (0.15566202 * float(x[22]))+ (-0.8955976 * float(x[23]))+ (-0.38704398 * float(x[24]))+ (-0.57327765 * float(x[25]))+ (0.60970587 * float(x[26]))+ (0.012676337 * float(x[27]))+ (0.40440935 * float(x[28]))+ (-0.3407203 * float(x[29]))+ (0.56424636 * float(x[30]))+ (-0.38543817 * float(x[31]))+ (-0.9125695 * float(x[32]))+ (-0.33750433 * float(x[33]))+ (-0.34013608 * float(x[34]))+ (0.47483203 * float(x[35]))+ (0.78285456 * float(x[36]))+ (0.0080267675 * float(x[37]))+ (-0.706976 * float(x[38]))+ (-0.9845534 * float(x[39]))+ (0.5336827 * float(x[40]))+ (0.08986638 * float(x[41]))+ (0.047509123 * float(x[42]))+ (0.3181019 * float(x[43]))+ (-0.3964796 * float(x[44]))+ (0.55828655 * float(x[45]))+ (-0.8887166 * float(x[46]))+ (-0.6212663 * float(x[47]))+ (0.5888482 * float(x[48]))+ (0.22234957 * float(x[49])))+ ((-0.9192731 * float(x[50]))+ (-0.20958014 * float(x[51]))+ (0.3350467 * float(x[52]))+ (-0.640344 * float(x[53]))+ (-0.19454713 * float(x[54]))+ (0.18930043 * float(x[55]))+ (-0.8645287 * float(x[56]))+ (0.06518305 * float(x[57]))+ (-0.111797705 * float(x[58]))+ (-0.25178468 * float(x[59]))+ (-0.50777775 * float(x[60]))+ (0.5117627 * float(x[61]))+ (0.21662171 * float(x[62]))+ (0.16098487 * float(x[63]))+ (0.5093757 * float(x[64]))+ (-0.88691324 * float(x[65]))+ (-0.634033 * float(x[66]))+ (-0.1810649 * float(x[67]))+ (0.010239744 * float(x[68]))+ (-0.18307084 * float(x[69]))+ (-0.015444659 * float(x[70]))+ (-0.246084 * float(x[71]))+ (-0.920773 * float(x[72]))+ (0.6081518 * float(x[73]))+ (-0.30340013 * float(x[74]))+ (0.17941444 * float(x[75]))+ (0.18693052 * float(x[76]))+ (0.40487552 * float(x[77]))+ (-0.0022205072 * float(x[78]))+ (0.39584082 * float(x[79]))+ (0.75191927 * float(x[80]))+ (0.9669379 * float(x[81]))+ (0.42360115 * float(x[82]))+ (0.47132233 * float(x[83]))+ (0.7809893 * float(x[84]))+ (0.1109634 * float(x[85]))+ (0.51988065 * float(x[86]))+ (0.4077696 * float(x[87]))+ (0.055431128 * float(x[88]))+ (0.82213247 * float(x[89]))+ (-1.1817509 * float(x[90]))+ (0.003959809 * float(x[91]))+ (0.113037184 * float(x[92]))+ (-0.97912675 * float(x[93]))+ (0.20629588 * float(x[94]))+ (-0.59134203 * float(x[95]))+ (-0.41956142 * float(x[96]))+ (0.93167144 * float(x[97]))+ (-0.28128907 * float(x[98]))+ (-1.0047687 * float(x[99])))+ ((0.5683723 * float(x[100]))+ (-0.94243824 * float(x[101]))+ (0.34649175 * float(x[102]))+ (-0.71471053 * float(x[103]))+ (0.48861316 * float(x[104]))+ (-0.8546394 * float(x[105]))+ (-0.29919586 * float(x[106]))+ (-0.85435313 * float(x[107]))+ (0.5949463 * float(x[108]))+ (0.8678674 * float(x[109]))+ (0.41596392 * float(x[110]))+ (0.653718 * float(x[111]))+ (-0.683455 * float(x[112]))+ (-0.24130946 * float(x[113]))+ (0.08039228 * float(x[114]))+ (0.9273855 * float(x[115]))+ (0.18143217 * float(x[116]))+ (-0.14916107 * float(x[117]))+ (0.8373332 * float(x[118]))+ (0.36808586 * float(x[119]))+ (0.6464438 * float(x[120]))+ (-0.8627469 * float(x[121]))+ (-0.92769456 * float(x[122]))+ (0.5941961 * float(x[123]))+ (0.6552206 * float(x[124]))+ (-0.8893756 * float(x[125]))+ (-0.0047621806 * float(x[126]))+ (-0.37572503 * float(x[127]))+ (-0.41159678 * float(x[128]))+ (-0.7690272 * float(x[129]))+ (-0.41966045 * float(x[130]))+ (0.66959655 * float(x[131]))+ (0.7513355 * float(x[132]))+ (0.18340144 * float(x[133]))+ (-0.1770969 * float(x[134]))+ (-0.8162336 * float(x[135]))+ (-0.71109176 * float(x[136]))+ (0.9265447 * float(x[137]))+ (0.6949989 * float(x[138]))+ (0.9132153 * float(x[139]))+ (0.07899804 * float(x[140]))+ (0.9165415 * float(x[141]))+ (0.38697734 * float(x[142]))+ (0.41769508 * float(x[143]))+ (0.61954373 * float(x[144]))+ (0.5035978 * float(x[145]))+ (0.47927532 * float(x[146]))+ (-0.86796814 * float(x[147]))+ (0.61893976 * float(x[148]))+ (-0.5915368 * float(x[149])))+ ((0.31842548 * float(x[150]))+ (0.8280747 * float(x[151]))+ (0.46581802 * float(x[152]))+ (0.22924307 * float(x[153]))+ (-0.74239504 * float(x[154]))+ (-0.44125536 * float(x[155]))+ (0.68502027 * float(x[156]))+ (0.8624133 * float(x[157]))+ (-0.43811205 * float(x[158]))+ (-0.27457494 * float(x[159]))+ (0.088583596 * float(x[160]))+ (-0.61608875 * float(x[161]))+ (0.28436214 * float(x[162]))+ (-0.7872276 * float(x[163]))+ (-0.61497116 * float(x[164]))+ (0.46204284 * float(x[165]))+ (-0.6849607 * float(x[166]))+ (-0.0153210275 * float(x[167]))+ (0.68819773 * float(x[168]))+ (-0.099459864 * float(x[169]))+ (-0.9521495 * float(x[170]))+ (-0.72509074 * float(x[171]))+ (-0.4298553 * float(x[172]))+ (-0.1642004 * float(x[173]))+ (-1.0057462 * float(x[174]))+ (0.9997928 * float(x[175]))+ (0.59881973 * float(x[176]))+ (-0.8016051 * float(x[177]))+ (-0.36422157 * float(x[178]))+ (0.7594432 * float(x[179]))+ (-0.8974991 * float(x[180]))+ (0.40462226 * float(x[181]))+ (-0.8002668 * float(x[182]))+ (0.046657745 * float(x[183]))+ (0.8437796 * float(x[184]))+ (-0.7513446 * float(x[185]))+ (-0.3143348 * float(x[186]))+ (0.6586981 * float(x[187]))+ (-1.0621016 * float(x[188]))+ (0.2998826 * float(x[189]))+ (0.6516821 * float(x[190]))+ (0.11840235 * float(x[191]))+ (-0.100357674 * float(x[192]))+ (0.29351148 * float(x[193]))+ (0.21541692 * float(x[194]))+ (-0.16032745 * float(x[195]))+ (-0.05013067 * float(x[196]))+ (0.37302768 * float(x[197]))+ (-0.022799747 * float(x[198]))+ (-1.1048244 * float(x[199])))+ ((-0.106825836 * float(x[200]))+ (-1.1904274 * float(x[201]))+ (-0.43915144 * float(x[202]))+ (-1.0204058 * float(x[203]))+ (-0.9867332 * float(x[204]))+ (-0.0019257795 * float(x[205]))+ (-0.9303005 * float(x[206]))+ (-0.14722848 * float(x[207]))+ (-0.9148309 * float(x[208]))+ (0.5846768 * float(x[209]))+ (0.19215812 * float(x[210]))+ (0.16954702 * float(x[211]))+ (-0.113180086 * float(x[212]))+ (-0.3301076 * float(x[213]))+ (0.35962194 * float(x[214]))+ (-1.0523505 * float(x[215]))+ (-0.40989673 * float(x[216]))+ (-0.004135623 * float(x[217]))+ (-0.28380468 * float(x[218]))+ (0.7159551 * float(x[219]))+ (-0.11143794 * float(x[220]))+ (0.33751816 * float(x[221]))+ (0.72913975 * float(x[222]))+ (0.47364622 * float(x[223]))+ (-0.72320366 * float(x[224]))+ (-0.9304029 * float(x[225]))+ (-0.3960815 * float(x[226]))+ (0.0007583245 * float(x[227]))+ (0.39731508 * float(x[228]))+ (-0.10425951 * float(x[229]))+ (0.7323114 * float(x[230]))+ (-0.2777223 * float(x[231]))+ (-0.6135485 * float(x[232]))+ (-0.92759997 * float(x[233]))+ (0.4344479 * float(x[234]))+ (0.03636607 * float(x[235]))+ (0.38303003 * float(x[236]))+ (-0.008306702 * float(x[237]))+ (-0.5409908 * float(x[238]))+ (0.4193509 * float(x[239]))+ (-0.51650125 * float(x[240]))+ (-0.011576864 * float(x[241]))+ (0.64643496 * float(x[242]))+ (0.740006 * float(x[243]))+ (-0.17698409 * float(x[244]))+ (-0.38789377 * float(x[245]))+ (-0.88143826 * float(x[246]))+ (0.78723127 * float(x[247]))+ (0.5301593 * float(x[248]))+ (-0.20139554 * float(x[249])))+ ((-0.13410042 * float(x[250]))+ (-0.85353917 * float(x[251]))+ (0.62403446 * float(x[252]))+ (0.17547193 * float(x[253]))+ (0.154122 * float(x[254]))+ (0.43123907 * float(x[255]))+ (0.7060153 * float(x[256]))+ (-0.9908688 * float(x[257]))+ (-0.79421115 * float(x[258]))+ (0.13468215 * float(x[259]))+ (-0.22794238 * float(x[260]))+ (-0.6448891 * float(x[261]))+ (0.74600047 * float(x[262]))+ (0.91192734 * float(x[263]))+ (-0.6857105 * float(x[264]))+ (0.7058727 * float(x[265]))+ (-0.5271368 * float(x[266]))+ (0.9333676 * float(x[267]))+ (0.9181087 * float(x[268]))+ (0.13707513 * float(x[269]))+ (0.41193 * float(x[270]))+ (0.39423123 * float(x[271]))+ (0.32473642 * float(x[272]))+ (0.29402447 * float(x[273]))+ (-0.4944876 * float(x[274]))+ (0.13402455 * float(x[275]))+ (0.4939754 * float(x[276]))+ (0.90577286 * float(x[277]))+ (-0.4549532 * float(x[278]))+ (0.5090189 * float(x[279]))+ (-0.59983224 * float(x[280]))+ (0.97987616 * float(x[281]))+ (-0.15559626 * float(x[282]))+ (0.47729686 * float(x[283]))+ (-0.5588722 * float(x[284]))+ (0.13507172 * float(x[285]))+ (0.50106484 * float(x[286]))+ (0.50279826 * float(x[287]))+ (0.405823 * float(x[288]))+ (-0.36605906 * float(x[289]))+ (-0.12751602 * float(x[290]))+ (-0.7466578 * float(x[291]))+ (0.09979232 * float(x[292]))+ (-0.16550149 * float(x[293]))+ (-0.9421624 * float(x[294]))+ (-0.57352686 * float(x[295]))+ (-0.75182045 * float(x[296]))+ (-0.8309738 * float(x[297]))+ (-0.9266465 * float(x[298]))+ (0.082113944 * float(x[299])))+ ((0.6420291 * float(x[300]))+ (0.613593 * float(x[301]))+ (-0.91597044 * float(x[302]))+ (-0.6248312 * float(x[303]))+ (-0.77467126 * float(x[304]))+ (-0.48624942 * float(x[305]))+ (-0.42439017 * float(x[306]))+ (-0.6354347 * float(x[307]))+ (0.39840293 * float(x[308]))+ (-0.20778452 * float(x[309]))+ (-0.8934984 * float(x[310]))+ (-0.17230327 * float(x[311]))+ (0.63631505 * float(x[312]))+ (-0.44520804 * float(x[313]))+ (-0.23588225 * float(x[314]))+ (-0.9082331 * float(x[315]))+ (-0.87019014 * float(x[316]))+ (0.78541756 * float(x[317]))+ (-0.91914636 * float(x[318]))+ (0.11679534 * float(x[319]))+ (-0.8996987 * float(x[320]))+ (0.91837716 * float(x[321]))+ (-0.7171625 * float(x[322]))+ (-0.7821143 * float(x[323]))+ (0.7717438 * float(x[324]))+ (-0.44831282 * float(x[325]))+ (-0.2231094 * float(x[326]))+ (0.6223283 * float(x[327]))+ (0.024148716 * float(x[328]))+ (-0.0732333 * float(x[329]))+ (0.4665084 * float(x[330]))+ (0.5730174 * float(x[331]))+ (-0.5499822 * float(x[332]))+ (0.2626139 * float(x[333]))+ (0.9282324 * float(x[334]))+ (0.82349783 * float(x[335]))+ (-0.09778318 * float(x[336]))+ (-0.77509826 * float(x[337]))+ (-0.06362332 * float(x[338]))+ (0.4001421 * float(x[339]))+ (-0.52504706 * float(x[340]))+ (-0.821591 * float(x[341]))+ (0.87488943 * float(x[342]))+ (-0.7021222 * float(x[343]))+ (-0.83432287 * float(x[344]))+ (0.0649119 * float(x[345]))+ (-0.23032291 * float(x[346]))+ (0.7538418 * float(x[347]))+ (-0.30269387 * float(x[348]))+ (-0.4643022 * float(x[349])))+ ((0.4953822 * float(x[350]))+ (-0.86627316 * float(x[351]))+ (0.7577901 * float(x[352]))+ (0.7440072 * float(x[353]))+ (0.78079396 * float(x[354]))+ (0.6243869 * float(x[355]))+ (0.3750649 * float(x[356]))+ (-0.81266737 * float(x[357]))+ (-0.12972161 * float(x[358]))+ (-0.7450003 * float(x[359]))+ (0.20233043 * float(x[360]))+ (-0.44319704 * float(x[361]))+ (0.91878366 * float(x[362]))+ (0.829815 * float(x[363]))+ (-0.45169204 * float(x[364]))+ (-0.7636756 * float(x[365]))+ (0.6028406 * float(x[366]))+ (-0.004678151 * float(x[367]))+ (0.8310025 * float(x[368]))+ (0.9475291 * float(x[369]))+ (0.25310755 * float(x[370]))+ (0.8891167 * float(x[371]))+ (0.840987 * float(x[372]))+ (0.93515044 * float(x[373]))+ (-0.96763957 * float(x[374]))+ (-0.78140044 * float(x[375]))+ (-1.0242349 * float(x[376]))+ (-0.36676303 * float(x[377]))+ (-0.33798587 * float(x[378]))+ (0.124096006 * float(x[379]))+ (0.924129 * float(x[380]))+ (0.3796702 * float(x[381]))+ (-0.13446745 * float(x[382]))+ (0.0030497515 * float(x[383]))+ (-0.7820171 * float(x[384]))+ (0.5712649 * float(x[385]))+ (0.26740113 * float(x[386]))+ (-0.26147875 * float(x[387]))+ (0.22758995 * float(x[388]))+ (0.84301734 * float(x[389]))+ (-0.383036 * float(x[390]))+ (0.90722424 * float(x[391]))+ (-0.65630287 * float(x[392]))+ (0.14444539 * float(x[393]))+ (0.17178863 * float(x[394]))+ (0.1098908 * float(x[395]))+ (-0.24462453 * float(x[396]))+ (-0.93258905 * float(x[397]))+ (-0.07752938 * float(x[398]))+ (-0.06441144 * float(x[399])))+ ((-0.7166324 * float(x[400]))+ (0.34446287 * float(x[401]))+ (-0.20593783 * float(x[402]))+ (0.61520183 * float(x[403]))+ (0.72410715 * float(x[404]))+ (-0.41675058 * float(x[405]))+ (-0.5853208 * float(x[406]))+ (0.49197307 * float(x[407]))+ (0.8572339 * float(x[408]))+ (-0.20637248 * float(x[409]))+ (-0.6277245 * float(x[410]))+ (-0.44187707 * float(x[411]))+ (-0.34539276 * float(x[412]))+ (-0.6306971 * float(x[413]))+ (-0.17218888 * float(x[414]))+ (-0.7586504 * float(x[415]))+ (0.40323797 * float(x[416]))+ (-0.7507121 * float(x[417]))+ (0.40080866 * float(x[418]))+ (-0.3200742 * float(x[419]))+ (-0.59810674 * float(x[420]))+ (-0.2635808 * float(x[421]))+ (0.72243 * float(x[422]))+ (-0.1608172 * float(x[423]))+ (-0.9187621 * float(x[424]))+ (0.07725048 * float(x[425]))+ (0.69290894 * float(x[426]))+ (0.55239075 * float(x[427]))+ (-0.2917852 * float(x[428]))+ (-0.67054576 * float(x[429]))+ (0.90499085 * float(x[430]))+ (0.2300392 * float(x[431]))+ (-0.39896035 * float(x[432]))+ (-0.22730587 * float(x[433]))+ (-0.90705806 * float(x[434]))+ (-0.81197345 * float(x[435]))+ (-0.96252906 * float(x[436]))+ (-0.5941089 * float(x[437]))+ (-0.8131487 * float(x[438]))+ (-0.6715095 * float(x[439]))+ (0.31917235 * float(x[440]))+ (0.22684933 * float(x[441]))+ (-0.18974039 * float(x[442]))+ (0.87657154 * float(x[443]))+ (0.81539357 * float(x[444]))+ (0.049057215 * float(x[445]))+ (0.5225625 * float(x[446]))+ (-0.8018495 * float(x[447]))+ (-0.06724564 * float(x[448]))+ (0.32584712 * float(x[449])))+ ((0.79398865 * float(x[450]))+ (-0.91213465 * float(x[451]))+ (-0.6974736 * float(x[452]))+ (0.75044984 * float(x[453]))+ (0.9839687 * float(x[454]))+ (-0.22665109 * float(x[455]))+ (0.6267475 * float(x[456]))+ (0.8352936 * float(x[457]))+ (0.62225515 * float(x[458]))+ (-0.04346834 * float(x[459]))+ (0.7749112 * float(x[460]))+ (-0.10043359 * float(x[461]))+ (0.28334022 * float(x[462]))+ (-0.90202856 * float(x[463]))+ (0.3338286 * float(x[464]))+ (0.0418625 * float(x[465]))+ (-0.06125875 * float(x[466]))+ (0.9913284 * float(x[467]))+ (0.7564033 * float(x[468]))+ (-0.06714485 * float(x[469]))+ (0.7722652 * float(x[470]))+ (0.2744684 * float(x[471]))+ (0.82473373 * float(x[472]))+ (-0.39436975 * float(x[473]))+ (0.36985502 * float(x[474]))+ (-0.10273632 * float(x[475]))+ (-0.73465526 * float(x[476]))+ (0.5831103 * float(x[477]))+ (-0.44883844 * float(x[478]))+ (-0.9573449 * float(x[479]))+ (0.07034631 * float(x[480]))+ (-0.6049706 * float(x[481]))+ (0.98406434 * float(x[482]))+ (0.7855591 * float(x[483]))+ (0.39603516 * float(x[484]))+ (0.2133486 * float(x[485]))+ (-0.5001597 * float(x[486]))+ (-0.5523695 * float(x[487]))+ (-0.34578657 * float(x[488]))+ (-0.64627814 * float(x[489]))+ (0.54101527 * float(x[490]))+ (-0.83964795 * float(x[491]))+ (0.30191672 * float(x[492]))+ (0.7859264 * float(x[493]))+ (0.5951905 * float(x[494]))+ (-0.02944168 * float(x[495]))+ (0.5346516 * float(x[496]))+ (0.8658009 * float(x[497]))+ (-0.58775425 * float(x[498]))+ (-0.119269 * float(x[499])))+ ((0.017034514 * float(x[500]))+ (0.3714293 * float(x[501]))+ (0.8408834 * float(x[502]))+ (-0.27988437 * float(x[503]))+ (-0.7246805 * float(x[504]))+ (0.29873067 * float(x[505]))+ (0.17053959 * float(x[506]))+ (-0.033112004 * float(x[507]))+ (0.07418153 * float(x[508]))+ (0.083964445 * float(x[509]))+ (0.5733836 * float(x[510]))+ (-0.44600832 * float(x[511]))+ (0.27819368 * float(x[512]))+ (0.045081966 * float(x[513]))+ (-0.68495506 * float(x[514]))+ (-0.08251589 * float(x[515]))+ (0.52216923 * float(x[516]))+ (-0.35470447 * float(x[517]))+ (-0.48435396 * float(x[518]))+ (-0.68551433 * float(x[519]))+ (0.3669301 * float(x[520]))+ (0.9805072 * float(x[521]))+ (0.030432517 * float(x[522]))+ (-0.29820403 * float(x[523]))+ (0.19302508 * float(x[524]))+ (-0.643523 * float(x[525]))+ (0.29609114 * float(x[526]))+ (-0.20162751 * float(x[527]))+ (-0.54167783 * float(x[528]))+ (0.3081239 * float(x[529]))+ (-0.31883934 * float(x[530]))+ (-0.848608 * float(x[531]))+ (0.82730263 * float(x[532]))+ (-0.3070246 * float(x[533]))+ (0.13436729 * float(x[534]))+ (0.9857229 * float(x[535]))+ (-0.8370503 * float(x[536]))+ (0.22630215 * float(x[537]))+ (-0.97849107 * float(x[538]))+ (0.4717096 * float(x[539]))+ (-0.5047972 * float(x[540]))+ (0.75467443 * float(x[541]))+ (-0.51073587 * float(x[542]))+ (-0.465579 * float(x[543]))+ (-0.84243435 * float(x[544]))+ (-0.8249306 * float(x[545]))+ (-0.4436627 * float(x[546]))+ (0.4826383 * float(x[547]))+ (0.47383526 * float(x[548]))+ (-0.10975989 * float(x[549])))+ ((0.82535154 * float(x[550]))+ (0.19032408 * float(x[551]))+ (-0.08290985 * float(x[552]))+ (0.906013 * float(x[553]))+ (-0.79162693 * float(x[554]))+ (-0.8054094 * float(x[555]))+ (-0.7291644 * float(x[556]))+ (-0.0055763363 * float(x[557]))+ (-0.19900149 * float(x[558]))+ (0.2946734 * float(x[559]))+ (0.3958108 * float(x[560]))+ (0.568138 * float(x[561]))+ (-0.8602738 * float(x[562]))+ (-0.3847598 * float(x[563]))+ (0.2487779 * float(x[564]))+ (-0.4325616 * float(x[565]))+ (0.084611386 * float(x[566]))+ (-0.28226 * float(x[567]))+ (-0.31120956 * float(x[568]))+ (0.8278197 * float(x[569]))+ (-0.64784664 * float(x[570]))+ (-0.6209994 * float(x[571]))+ (-0.9674735 * float(x[572]))+ (-0.7749947 * float(x[573]))+ (-0.6840883 * float(x[574]))+ (0.55755526 * float(x[575]))+ (-0.54211986 * float(x[576]))+ (0.7714518 * float(x[577]))+ (0.3661192 * float(x[578]))+ (-0.80063796 * float(x[579]))+ (0.4535459 * float(x[580]))+ (-0.08532121 * float(x[581]))+ (0.59064555 * float(x[582]))+ (0.1471225 * float(x[583]))+ (-0.17180243 * float(x[584]))+ (-0.9760424 * float(x[585]))+ (-0.9278826 * float(x[586]))+ (0.5886145 * float(x[587]))+ (-0.90120596 * float(x[588]))+ (-0.34639972 * float(x[589]))+ (-0.70009214 * float(x[590]))+ (-0.111843206 * float(x[591]))+ (0.5573222 * float(x[592]))+ (-0.98032236 * float(x[593]))+ (0.22224264 * float(x[594]))+ (-0.80338806 * float(x[595]))+ (0.49314585 * float(x[596]))+ (0.5527933 * float(x[597]))+ (-0.51418746 * float(x[598]))+ (-0.5130507 * float(x[599])))+ ((0.15047227 * float(x[600]))+ (-0.24643955 * float(x[601]))+ (0.6878239 * float(x[602]))+ (-0.6811398 * float(x[603]))+ (-0.8851882 * float(x[604]))+ (0.33312345 * float(x[605]))+ (-0.68782806 * float(x[606]))+ (-0.81317526 * float(x[607]))+ (0.38678735 * float(x[608]))+ (0.72665316 * float(x[609]))+ (0.5465919 * float(x[610]))+ (-0.7023108 * float(x[611]))+ (0.102503926 * float(x[612]))+ (-0.40574402 * float(x[613]))+ (-0.81868935 * float(x[614]))+ (-0.45618308 * float(x[615]))+ (-0.1198616 * float(x[616]))+ (-0.5899839 * float(x[617]))+ (0.577409 * float(x[618]))+ (0.5538828 * float(x[619]))+ (-0.5131598 * float(x[620]))+ (0.5133688 * float(x[621]))+ (-0.3194122 * float(x[622]))+ (0.18596452 * float(x[623]))+ (0.11277138 * float(x[624]))+ (0.10259008 * float(x[625]))+ (-0.61190534 * float(x[626]))+ (-0.67542654 * float(x[627]))+ (-0.03251639 * float(x[628]))+ (0.73532176 * float(x[629]))+ (-0.9039204 * float(x[630]))+ (0.12820642 * float(x[631]))+ (-0.9244548 * float(x[632]))+ (-0.702901 * float(x[633]))+ (-0.65303046 * float(x[634]))+ (0.0031278268 * float(x[635]))+ (0.9176949 * float(x[636]))+ (0.15462081 * float(x[637]))+ (0.8960354 * float(x[638]))+ (-0.5942287 * float(x[639]))+ (-0.5343859 * float(x[640]))+ (-0.13554977 * float(x[641]))+ (-0.26522925 * float(x[642]))+ (0.8840694 * float(x[643]))+ (0.5885772 * float(x[644]))+ (0.9634674 * float(x[645]))+ (-0.12816267 * float(x[646]))+ (-0.9439991 * float(x[647]))+ (-0.89142793 * float(x[648]))+ (-0.49714342 * float(x[649])))+ ((-0.29422596 * float(x[650]))+ (-0.8601022 * float(x[651]))+ (0.124549456 * float(x[652]))+ (0.49604166 * float(x[653]))+ (0.10982293 * float(x[654]))+ (-0.4622153 * float(x[655]))+ (0.5310777 * float(x[656]))+ (0.5950125 * float(x[657]))+ (-0.377146 * float(x[658]))+ (0.33333498 * float(x[659]))+ (0.45527422 * float(x[660]))+ (-0.57669204 * float(x[661]))+ (-0.7493272 * float(x[662]))+ (0.6539576 * float(x[663]))+ (-0.016129982 * float(x[664]))+ (0.5633316 * float(x[665]))+ (-0.23205678 * float(x[666]))+ (0.83552027 * float(x[667]))+ (0.26727852 * float(x[668]))+ (0.9364412 * float(x[669]))+ (-0.5706875 * float(x[670]))+ (0.012826921 * float(x[671]))+ (-0.66643137 * float(x[672]))+ (-0.7333333 * float(x[673]))+ (0.38302684 * float(x[674]))+ (-0.55856353 * float(x[675]))+ (0.5912807 * float(x[676]))+ (0.060179196 * float(x[677]))+ (0.675512 * float(x[678]))+ (-0.38721007 * float(x[679]))+ (0.121940546 * float(x[680]))+ (0.16586614 * float(x[681]))+ (-0.52650267 * float(x[682]))+ (0.45482457 * float(x[683]))+ (0.29170078 * float(x[684]))+ (0.6469126 * float(x[685]))+ (0.10369331 * float(x[686]))+ (-0.096230075 * float(x[687]))+ (-0.4177806 * float(x[688]))+ (-0.14016981 * float(x[689]))+ (0.18274803 * float(x[690]))+ (-0.43678463 * float(x[691]))+ (0.015400087 * float(x[692]))+ (0.46015432 * float(x[693]))+ (-0.12396265 * float(x[694]))+ (-0.55152583 * float(x[695]))+ (-0.1197059 * float(x[696]))+ (0.6744882 * float(x[697]))+ (0.13398685 * float(x[698]))+ (0.41291332 * float(x[699])))+ ((-0.60416603 * float(x[700]))+ (-0.7124382 * float(x[701]))+ (-0.6136613 * float(x[702]))+ (0.38390058 * float(x[703]))+ (0.75306624 * float(x[704]))+ (0.9723458 * float(x[705]))+ (0.7549402 * float(x[706]))+ (0.7270848 * float(x[707]))+ (0.5327772 * float(x[708]))+ (0.97708994 * float(x[709]))+ (-0.87883615 * float(x[710]))+ (0.40339878 * float(x[711]))+ (0.4901929 * float(x[712]))+ (-0.03920874 * float(x[713]))+ (0.927325 * float(x[714]))+ (0.36560723 * float(x[715]))+ (-0.024622204 * float(x[716]))+ (0.06840014 * float(x[717]))+ (0.75846297 * float(x[718]))+ (0.0069441176 * float(x[719]))+ (0.20495611 * float(x[720]))+ (0.7337355 * float(x[721]))+ (0.1770837 * float(x[722]))+ (0.84467703 * float(x[723]))+ (-0.45006925 * float(x[724]))+ (-0.21812294 * float(x[725]))+ (-0.7507724 * float(x[726]))+ (-0.41046333 * float(x[727]))+ (0.17943127 * float(x[728]))+ (0.49392164 * float(x[729]))+ (-0.651696 * float(x[730]))+ (-0.8603025 * float(x[731]))+ (-0.0051880153 * float(x[732]))+ (-0.0867604 * float(x[733]))+ (-0.06784382 * float(x[734]))+ (-0.24448267 * float(x[735]))+ (-0.9000236 * float(x[736]))+ (0.35451424 * float(x[737]))+ (-0.79684925 * float(x[738]))+ (-0.37166747 * float(x[739]))+ (0.6601421 * float(x[740]))+ (0.84639037 * float(x[741]))+ (-0.76587504 * float(x[742]))+ (-0.51389927 * float(x[743]))+ (0.7761855 * float(x[744]))+ (-0.41921082 * float(x[745]))+ (-0.9528285 * float(x[746]))+ (0.76678604 * float(x[747]))+ (-0.2138519 * float(x[748]))+ (-0.8715928 * float(x[749])))+ ((-0.6633774 * float(x[750]))+ (0.5084306 * float(x[751]))+ (0.032624807 * float(x[752]))+ (0.38196856 * float(x[753]))+ (0.25929308 * float(x[754]))+ (0.2436602 * float(x[755]))+ (-0.5703564 * float(x[756]))+ (0.11220719 * float(x[757]))+ (-0.40229803 * float(x[758]))+ (-0.8319779 * float(x[759]))+ (0.08506908 * float(x[760]))+ (-0.5721242 * float(x[761]))+ (0.9744585 * float(x[762]))+ (0.8616052 * float(x[763]))+ (-0.6973149 * float(x[764]))+ (-0.35497484 * float(x[765]))+ (-0.90770644 * float(x[766]))+ (-0.05586082 * float(x[767]))+ (-0.8342799 * float(x[768]))+ (0.9262435 * float(x[769]))+ (0.21075648 * float(x[770]))+ (-0.35336387 * float(x[771]))+ (-0.25087735 * float(x[772]))+ (0.5003194 * float(x[773]))+ (0.32287621 * float(x[774]))+ (-0.36223853 * float(x[775]))+ (0.7751901 * float(x[776]))+ (0.6780962 * float(x[777]))+ (-0.8444361 * float(x[778]))+ (-0.906521 * float(x[779]))+ (0.6416641 * float(x[780]))+ (-0.26841033 * float(x[781]))+ (-0.9730266 * float(x[782]))+ (-0.80886513 * float(x[783]))+ (0.67291975 * float(x[784]))+ (0.62887025 * float(x[785]))+ (0.47124684 * float(x[786]))+ (-0.2653671 * float(x[787]))+ (-0.49171397 * float(x[788]))+ (0.7475553 * float(x[789]))+ (-0.66746193 * float(x[790]))+ (-0.14749439 * float(x[791]))+ (0.7529763 * float(x[792]))+ (-0.0649865 * float(x[793]))+ (-0.2859803 * float(x[794]))+ (0.021985115 * float(x[795]))+ (0.63739496 * float(x[796]))+ (-0.042315822 * float(x[797]))+ (0.14929776 * float(x[798]))+ (-0.21527764 * float(x[799])))+ ((0.072722256 * float(x[800]))+ (0.59159577 * float(x[801]))+ (0.088185616 * float(x[802]))+ (-0.0074938955 * float(x[803]))+ (-0.057948977 * float(x[804]))+ (0.55293494 * float(x[805]))+ (-0.54365396 * float(x[806]))+ (-0.15074006 * float(x[807]))+ (-0.38478446 * float(x[808]))+ (-0.76414037 * float(x[809]))+ (0.24055447 * float(x[810]))+ (0.3242435 * float(x[811]))+ (-0.8056403 * float(x[812]))+ (0.79927427 * float(x[813]))+ (0.18264322 * float(x[814]))+ (-0.4383784 * float(x[815]))+ (-0.9589212 * float(x[816]))+ (0.081906535 * float(x[817]))+ (-0.33467275 * float(x[818]))+ (0.95853543 * float(x[819]))+ (0.9329773 * float(x[820]))+ (-0.03914733 * float(x[821]))+ (0.3702552 * float(x[822]))+ (0.15979573 * float(x[823]))+ (-0.79577875 * float(x[824]))+ (-0.45136616 * float(x[825]))+ (-0.6499081 * float(x[826]))+ (-0.35490215 * float(x[827]))+ (-0.46180493 * float(x[828]))+ (-0.52186555 * float(x[829]))+ (0.5092116 * float(x[830]))+ (0.69894195 * float(x[831]))+ (-0.08575821 * float(x[832]))+ (0.5528738 * float(x[833]))+ (-0.7908769 * float(x[834]))+ (0.6137434 * float(x[835]))+ (0.23904873 * float(x[836]))+ (0.41998738 * float(x[837]))+ (-0.6442242 * float(x[838]))+ (0.8138181 * float(x[839]))+ (-0.19167948 * float(x[840]))+ (-0.72576296 * float(x[841]))+ (0.5298049 * float(x[842]))+ (0.57552695 * float(x[843]))+ (0.000335317 * float(x[844]))+ (-0.45244697 * float(x[845]))+ (-0.8253387 * float(x[846]))+ (-0.3262382 * float(x[847]))+ (0.19056444 * float(x[848]))+ (0.49542668 * float(x[849])))+ ((0.777192 * float(x[850]))+ (0.13993192 * float(x[851]))+ (-0.78755546 * float(x[852]))+ (0.36610985 * float(x[853]))+ (-0.9443626 * float(x[854]))+ (0.5270846 * float(x[855]))+ (-0.055105094 * float(x[856]))+ (0.37453687 * float(x[857]))+ (0.6738577 * float(x[858]))+ (-0.40537554 * float(x[859]))+ (0.10744685 * float(x[860]))+ (-0.4546554 * float(x[861]))+ (0.42563316 * float(x[862]))+ (-0.16723152 * float(x[863]))+ (-0.3882351 * float(x[864]))+ (0.8185275 * float(x[865]))+ (-0.7424339 * float(x[866]))+ (-0.7227982 * float(x[867]))+ (-0.035093147 * float(x[868]))+ (0.51722795 * float(x[869]))+ (-0.84309685 * float(x[870]))+ (0.73906446 * float(x[871]))+ (-0.9146658 * float(x[872]))+ (-0.8083199 * float(x[873]))+ (-0.04989615 * float(x[874]))+ (-0.09377385 * float(x[875]))+ (-0.4265075 * float(x[876]))+ (0.87535834 * float(x[877]))+ (0.16273491 * float(x[878]))+ (-0.93066657 * float(x[879]))+ (0.48312515 * float(x[880]))+ (-0.6269516 * float(x[881]))+ (0.4984672 * float(x[882]))+ (0.112271704 * float(x[883]))+ (-0.98509985 * float(x[884]))+ (0.6647981 * float(x[885]))+ (0.021022532 * float(x[886]))+ (0.57838655 * float(x[887]))+ (-0.10912385 * float(x[888]))+ (0.6982878 * float(x[889]))+ (0.70445967 * float(x[890]))+ (0.06613523 * float(x[891]))+ (0.38495052 * float(x[892]))+ (-0.27815172 * float(x[893]))+ (0.6572162 * float(x[894]))+ (-0.53121084 * float(x[895]))+ (0.88308614 * float(x[896]))+ (-0.3402248 * float(x[897]))+ (0.3989602 * float(x[898]))+ (-0.59786123 * float(x[899])))+ ((-0.8314003 * float(x[900]))+ (-0.5807603 * float(x[901]))+ (0.9972514 * float(x[902]))+ (0.95169616 * float(x[903]))+ (-0.9383174 * float(x[904]))+ (-0.0356413 * float(x[905]))+ (0.31729978 * float(x[906]))+ (-0.7568064 * float(x[907]))+ (-0.25377762 * float(x[908]))+ (-0.45071584 * float(x[909]))+ (-0.050559916 * float(x[910]))+ (-0.43479195 * float(x[911]))+ (-0.13186906 * float(x[912]))+ (-0.40855354 * float(x[913]))+ (-0.96865153 * float(x[914]))+ (0.68811864 * float(x[915]))+ (0.7173515 * float(x[916]))+ (0.9308173 * float(x[917]))+ (0.46682426 * float(x[918]))+ (0.6244247 * float(x[919]))+ (-0.87445515 * float(x[920]))+ (0.9210352 * float(x[921]))+ (-0.38833705 * float(x[922]))+ (-0.90545064 * float(x[923]))+ (0.18238077 * float(x[924]))+ (-0.91679096 * float(x[925]))+ (-0.6536331 * float(x[926]))+ (0.94315237 * float(x[927]))+ (0.19778533 * float(x[928]))+ (0.5678945 * float(x[929]))+ (-0.97168326 * float(x[930]))+ (-0.122537054 * float(x[931]))+ (-0.15594864 * float(x[932]))+ (0.569895 * float(x[933]))+ (-0.5281872 * float(x[934]))+ (-0.20847973 * float(x[935]))+ (-0.909287 * float(x[936]))+ (-0.28618154 * float(x[937]))+ (-0.69030094 * float(x[938]))+ (0.7891109 * float(x[939]))+ (0.8216303 * float(x[940]))+ (0.97185063 * float(x[941]))+ (-0.36079335 * float(x[942]))+ (-0.25597355 * float(x[943]))+ (0.4340774 * float(x[944]))+ (0.4017188 * float(x[945]))+ (-0.0034296454 * float(x[946]))+ (0.08239896 * float(x[947]))+ (-0.6577706 * float(x[948]))+ (-0.5906932 * float(x[949])))+ ((-0.20534211 * float(x[950]))+ (-0.9261489 * float(x[951]))+ (-0.060683724 * float(x[952]))+ (0.19029896 * float(x[953]))+ (-0.12351042 * float(x[954]))+ (-0.8558712 * float(x[955]))+ (0.43129462 * float(x[956]))+ (-0.8855237 * float(x[957]))+ (0.5891488 * float(x[958]))+ (-0.28449836 * float(x[959]))+ (-0.72841567 * float(x[960]))+ (0.72715163 * float(x[961]))+ (0.36898828 * float(x[962]))+ (-0.14513917 * float(x[963]))+ (-0.14063065 * float(x[964]))+ (-0.7011639 * float(x[965]))+ (0.25833 * float(x[966]))+ (-0.46728554 * float(x[967]))+ (0.2618578 * float(x[968]))+ (-0.55332386 * float(x[969]))+ (-0.7839209 * float(x[970]))+ (-0.03957489 * float(x[971]))+ (0.74102175 * float(x[972]))+ (-0.5137048 * float(x[973]))+ (0.20116487 * float(x[974]))+ (0.4671072 * float(x[975]))+ (-0.18576464 * float(x[976]))+ (-1.0672617 * float(x[977]))+ (-1.0129296 * float(x[978]))+ (-0.8440304 * float(x[979]))+ (0.5665684 * float(x[980]))+ (-0.8811502 * float(x[981]))+ (-0.16688578 * float(x[982]))+ (0.72330284 * float(x[983]))+ (-0.39191014 * float(x[984]))+ (-0.5407944 * float(x[985]))+ (0.8137155 * float(x[986]))+ (0.7946669 * float(x[987]))+ (-1.2185533 * float(x[988]))+ (-0.7353058 * float(x[989]))+ (0.9743414 * float(x[990]))+ (-0.365644 * float(x[991]))+ (-1.3466195 * float(x[992]))+ (-0.3051111 * float(x[993]))+ (0.30270728 * float(x[994]))+ (-0.73495805 * float(x[995]))+ (-1.369128 * float(x[996]))+ (-0.6699284 * float(x[997]))+ (-0.30100432 * float(x[998]))+ (0.96583354 * float(x[999])))+ ((0.32729188 * float(x[1000]))+ (0.46076143 * float(x[1001]))+ (0.7903444 * float(x[1002]))+ (0.15756598 * float(x[1003]))+ (0.12757607 * float(x[1004]))+ (-0.100014046 * float(x[1005]))+ (-0.6941634 * float(x[1006]))+ (0.021819435 * float(x[1007]))+ (0.65597796 * float(x[1008]))+ (0.83027405 * float(x[1009]))+ (-0.76678777 * float(x[1010]))+ (-0.51123214 * float(x[1011]))+ (0.55080837 * float(x[1012]))+ (0.31540272 * float(x[1013]))+ (-0.21275204 * float(x[1014]))+ (0.009820936 * float(x[1015]))+ (-0.61439264 * float(x[1016]))+ (-0.89898545 * float(x[1017]))+ (-0.32021067 * float(x[1018]))+ (0.8075726 * float(x[1019]))+ (0.23110506 * float(x[1020]))+ (0.19146913 * float(x[1021]))+ (0.55825 * float(x[1022]))+ (0.83227235 * float(x[1023]))+ (-0.19460313 * float(x[1024]))+ (-0.9569023 * float(x[1025]))+ (-0.99740636 * float(x[1026]))+ (0.23156762 * float(x[1027]))+ (0.31035668 * float(x[1028]))+ (0.8674962 * float(x[1029]))+ (-0.48843858 * float(x[1030]))+ (-0.79876393 * float(x[1031]))+ (0.6519663 * float(x[1032]))+ (-0.6793906 * float(x[1033]))+ (-0.6756995 * float(x[1034]))+ (-0.51410824 * float(x[1035]))+ (0.112582475 * float(x[1036]))+ (0.22698714 * float(x[1037]))+ (-0.9075217 * float(x[1038]))+ (0.032219533 * float(x[1039]))+ (0.19097587 * float(x[1040]))+ (-0.9099374 * float(x[1041]))+ (-0.68010175 * float(x[1042]))+ (0.14033522 * float(x[1043]))+ (-0.4382193 * float(x[1044]))+ (0.38425097 * float(x[1045]))+ (0.0859398 * float(x[1046]))+ (-0.9977054 * float(x[1047]))+ (-0.29309708 * float(x[1048]))+ (-0.5318305 * float(x[1049])))+ ((0.24704297 * float(x[1050]))+ (-0.96017927 * float(x[1051]))+ (0.12526605 * float(x[1052]))+ (-0.6921183 * float(x[1053]))+ (0.03595737 * float(x[1054]))+ (0.18263738 * float(x[1055]))+ (-0.9270035 * float(x[1056]))+ (0.05217943 * float(x[1057]))+ (-0.03145731 * float(x[1058]))+ (0.4511032 * float(x[1059]))+ (-0.18047538 * float(x[1060]))+ (-1.3226529 * float(x[1061]))+ (-0.99999195 * float(x[1062]))+ (0.79967064 * float(x[1063]))+ (0.06197768 * float(x[1064]))+ (-0.36514592 * float(x[1065]))+ (0.43108594 * float(x[1066]))+ (-0.91216457 * float(x[1067]))+ (-0.13079838 * float(x[1068]))+ (-0.28339988 * float(x[1069]))+ (0.7730785 * float(x[1070]))+ (-0.48763877 * float(x[1071]))+ (-0.66029215 * float(x[1072]))+ (-0.2832618 * float(x[1073]))+ (-1.4089761 * float(x[1074]))+ (-0.13577965 * float(x[1075]))+ (-0.44807565 * float(x[1076]))+ (0.4871432 * float(x[1077]))+ (0.8535338 * float(x[1078]))+ (0.27715093 * float(x[1079]))+ (-0.28799883 * float(x[1080]))+ (-0.47491518 * float(x[1081]))+ (0.27935123 * float(x[1082]))+ (-0.4069896 * float(x[1083]))+ (-0.901297 * float(x[1084]))+ (0.43141526 * float(x[1085]))+ (0.6840684 * float(x[1086]))+ (-0.3650601 * float(x[1087]))+ (-1.295898 * float(x[1088]))+ (-0.46550924 * float(x[1089]))+ (-0.8718783 * float(x[1090]))+ (-0.90918255 * float(x[1091]))+ (0.3838188 * float(x[1092]))+ (0.17822087 * float(x[1093]))+ (-0.79294455 * float(x[1094]))+ (-0.3238807 * float(x[1095]))+ (0.35478744 * float(x[1096]))+ (0.069958515 * float(x[1097]))+ (0.031183159 * float(x[1098]))+ (0.062323947 * float(x[1099])))+ ((-0.57632285 * float(x[1100]))+ (-0.06063492 * float(x[1101]))+ (-0.2548737 * float(x[1102]))+ (0.04878497 * float(x[1103]))+ (-0.9600166 * float(x[1104]))+ (-0.7168295 * float(x[1105]))+ (0.5639497 * float(x[1106]))+ (-0.40211824 * float(x[1107]))+ (-0.5509592 * float(x[1108]))+ (-0.5578304 * float(x[1109]))+ (-0.89739525 * float(x[1110]))+ (0.5907595 * float(x[1111]))+ (-0.33680665 * float(x[1112]))+ (0.48855492 * float(x[1113]))+ (0.41459656 * float(x[1114]))+ (-0.4012061 * float(x[1115]))+ (-0.4644572 * float(x[1116]))+ (0.10276871 * float(x[1117]))+ (-0.20246445 * float(x[1118]))+ (-0.028429376 * float(x[1119]))+ (-0.30472922 * float(x[1120]))+ (0.6767617 * float(x[1121]))+ (0.8239477 * float(x[1122]))+ (0.12036307 * float(x[1123]))+ (-0.9761443 * float(x[1124]))+ (0.7636794 * float(x[1125]))+ (0.38296026 * float(x[1126]))+ (0.2535032 * float(x[1127]))+ (-0.069494374 * float(x[1128]))+ (0.36360782 * float(x[1129]))+ (0.41610387 * float(x[1130]))+ (0.19203925 * float(x[1131]))+ (-0.07795695 * float(x[1132]))+ (-0.9734767 * float(x[1133]))+ (-0.5268629 * float(x[1134]))+ (-0.7126066 * float(x[1135]))+ (-0.16334116 * float(x[1136]))+ (-1.3739024 * float(x[1137]))+ (0.71246827 * float(x[1138]))+ (-0.16016936 * float(x[1139]))+ (-0.2583715 * float(x[1140]))+ (-0.29295254 * float(x[1141]))+ (-0.5190502 * float(x[1142]))+ (-0.21618041 * float(x[1143]))+ (-0.53883165 * float(x[1144]))+ (0.3623503 * float(x[1145]))+ (-0.6047864 * float(x[1146]))+ (-0.2683561 * float(x[1147]))+ (-0.69085884 * float(x[1148]))+ (0.87634355 * float(x[1149])))+ ((0.84705687 * float(x[1150]))+ (-0.5714406 * float(x[1151]))+ (-0.7238795 * float(x[1152]))+ (-0.27056113 * float(x[1153]))+ (-0.42028373 * float(x[1154]))+ (0.27518117 * float(x[1155]))+ (0.5257453 * float(x[1156]))+ (0.2440126 * float(x[1157]))+ (-1.4151549 * float(x[1158]))+ (0.38964707 * float(x[1159]))+ (0.22409837 * float(x[1160]))+ (-0.43992665 * float(x[1161]))+ (0.8068117 * float(x[1162]))+ (-0.16678424 * float(x[1163]))+ (0.082245 * float(x[1164]))+ (0.22772625 * float(x[1165]))+ (0.30872536 * float(x[1166]))+ (0.7809826 * float(x[1167]))+ (-0.09003344 * float(x[1168]))+ (-0.45346513 * float(x[1169]))+ (0.36047265 * float(x[1170]))+ (-0.64137894 * float(x[1171]))+ (-0.04436544 * float(x[1172]))+ (-0.11740727 * float(x[1173]))+ (-0.10645 * float(x[1174]))+ (-0.6214183 * float(x[1175]))+ (0.15531841 * float(x[1176]))+ (0.9908304 * float(x[1177]))+ (-0.9996738 * float(x[1178]))+ (-0.7365404 * float(x[1179]))+ (-0.5678449 * float(x[1180]))+ (-0.17912076 * float(x[1181]))+ (0.4551223 * float(x[1182]))+ (-0.9092113 * float(x[1183]))+ (-0.64838153 * float(x[1184]))+ (0.12648797 * float(x[1185]))+ (-0.5016147 * float(x[1186]))+ (0.96092933 * float(x[1187]))+ (-0.32688633 * float(x[1188]))+ (0.5054414 * float(x[1189]))+ (0.78573036 * float(x[1190]))+ (0.44242644 * float(x[1191]))+ (0.29873878 * float(x[1192]))+ (0.82961684 * float(x[1193]))+ (0.63136345 * float(x[1194]))+ (0.36372638 * float(x[1195]))+ (-0.41663826 * float(x[1196]))+ (-0.27444234 * float(x[1197]))+ (-0.3209046 * float(x[1198]))+ (-0.9891489 * float(x[1199])))+ ((-0.8310769 * float(x[1200]))+ (-1.3753445 * float(x[1201]))+ (0.45058498 * float(x[1202]))+ (-0.95730615 * float(x[1203]))+ (-0.78171116 * float(x[1204]))+ (-0.28850216 * float(x[1205]))+ (-0.27925494 * float(x[1206]))+ (0.4795194 * float(x[1207]))+ (-0.56317216 * float(x[1208]))+ (-0.3943346 * float(x[1209]))+ (0.12293447 * float(x[1210]))+ (-0.082819834 * float(x[1211]))+ (0.20319007 * float(x[1212]))+ (0.37076786 * float(x[1213]))+ (0.23681255 * float(x[1214]))+ (0.37936336 * float(x[1215]))+ (-0.95508206 * float(x[1216]))+ (0.2639687 * float(x[1217]))+ (0.45307654 * float(x[1218]))+ (-0.4311614 * float(x[1219]))+ (0.10847549 * float(x[1220]))+ (-0.9880617 * float(x[1221]))+ (-0.9243635 * float(x[1222]))+ (0.23551373 * float(x[1223]))+ (0.3439307 * float(x[1224]))+ (0.38692346 * float(x[1225]))+ (-0.05830128 * float(x[1226]))+ (0.19591382 * float(x[1227]))+ (-0.71217674 * float(x[1228]))+ (-0.34598818 * float(x[1229]))+ (0.0045597856 * float(x[1230]))+ (-0.77950466 * float(x[1231]))+ (-0.3493646 * float(x[1232]))+ (-0.7591467 * float(x[1233]))+ (0.73641986 * float(x[1234]))+ (0.6639117 * float(x[1235]))+ (-0.5984076 * float(x[1236]))+ (0.7874333 * float(x[1237]))+ (0.08101356 * float(x[1238]))+ (-0.7986188 * float(x[1239]))+ (0.56693137 * float(x[1240]))+ (0.1877847 * float(x[1241]))+ (0.08175127 * float(x[1242]))+ (0.647168 * float(x[1243]))+ (-0.8696497 * float(x[1244]))+ (0.5955674 * float(x[1245]))+ (-0.71834326 * float(x[1246]))+ (-0.63784194 * float(x[1247]))+ (0.0750842 * float(x[1248]))+ (0.75547504 * float(x[1249])))+ ((-0.43877602 * float(x[1250]))+ (0.5413176 * float(x[1251]))+ (-0.16859253 * float(x[1252]))+ (-0.23732069 * float(x[1253]))+ (-0.79872423 * float(x[1254]))+ (0.65573156 * float(x[1255]))+ (0.06439535 * float(x[1256]))+ (-0.27303103 * float(x[1257]))+ (-0.6579946 * float(x[1258]))+ (0.02648702 * float(x[1259]))+ (-0.6379008 * float(x[1260]))+ (-0.59422463 * float(x[1261]))+ (0.065637626 * float(x[1262]))+ (0.6924462 * float(x[1263]))+ (0.6126216 * float(x[1264]))+ (0.2147532 * float(x[1265]))+ (-0.3786477 * float(x[1266]))+ (-0.49321273 * float(x[1267]))+ (0.14186259 * float(x[1268]))+ (0.2122605 * float(x[1269]))+ (0.8343702 * float(x[1270]))+ (0.86685646 * float(x[1271]))+ (-0.34924403 * float(x[1272]))+ (-0.677574 * float(x[1273]))+ (0.9409188 * float(x[1274]))+ (0.6868428 * float(x[1275]))+ (-0.95321804 * float(x[1276]))+ (0.44552308 * float(x[1277]))+ (-0.6491449 * float(x[1278]))+ (-0.15530793 * float(x[1279]))+ (0.15541352 * float(x[1280]))+ (-0.2612358 * float(x[1281]))+ (-0.010806225 * float(x[1282]))+ (-0.6844815 * float(x[1283]))+ (-0.073441066 * float(x[1284]))+ (0.09706525 * float(x[1285]))+ (-0.87752104 * float(x[1286]))+ (0.33251414 * float(x[1287]))+ (-0.49622667 * float(x[1288]))+ (-0.23080175 * float(x[1289]))+ (-0.978935 * float(x[1290]))+ (0.5122891 * float(x[1291]))+ (0.04070265 * float(x[1292]))+ (-0.39632413 * float(x[1293]))+ (-0.97068906 * float(x[1294]))+ (-0.45269477 * float(x[1295]))+ (0.6476053 * float(x[1296]))+ (0.3307387 * float(x[1297]))+ (-0.07027764 * float(x[1298]))+ (-0.6786232 * float(x[1299])))+ ((-0.72532856 * float(x[1300]))+ (-0.45801508 * float(x[1301]))+ (0.47831988 * float(x[1302]))+ (0.09329089 * float(x[1303]))+ (-0.9531218 * float(x[1304]))+ (-0.040244076 * float(x[1305]))+ (-0.8003095 * float(x[1306]))+ (-0.21269281 * float(x[1307]))+ (-0.74742377 * float(x[1308]))+ (-0.56669545 * float(x[1309]))+ (0.85742146 * float(x[1310]))+ (0.4571991 * float(x[1311]))+ (0.5993757 * float(x[1312]))+ (0.25211704 * float(x[1313]))+ (-0.8093254 * float(x[1314]))+ (0.59417385 * float(x[1315]))+ (-0.027185235 * float(x[1316]))+ (-0.7505075 * float(x[1317]))+ (0.27502277 * float(x[1318]))+ (-0.73326015 * float(x[1319]))+ (0.6322638 * float(x[1320]))+ (-0.51016504 * float(x[1321]))+ (0.32657012 * float(x[1322]))+ (0.5894862 * float(x[1323]))+ (0.29269958 * float(x[1324]))+ (0.014696072 * float(x[1325]))+ (-0.60620046 * float(x[1326]))+ (0.8738115 * float(x[1327]))+ (-0.85245717 * float(x[1328]))+ (-0.051156085 * float(x[1329]))+ (0.3713853 * float(x[1330]))+ (-0.74349767 * float(x[1331]))+ (-0.3768343 * float(x[1332]))+ (0.7055081 * float(x[1333]))+ (-0.32614812 * float(x[1334]))+ (-0.5227742 * float(x[1335]))+ (0.51105237 * float(x[1336]))+ (-0.56619924 * float(x[1337]))+ (-0.095109805 * float(x[1338]))+ (0.7708178 * float(x[1339]))+ (0.9485236 * float(x[1340]))+ (0.490955 * float(x[1341]))+ (-0.9953151 * float(x[1342]))+ (-0.7011327 * float(x[1343]))+ (0.2113864 * float(x[1344]))+ (0.13545127 * float(x[1345]))+ (0.01975447 * float(x[1346]))+ (0.21070148 * float(x[1347]))+ (-0.84601665 * float(x[1348]))+ (-0.25027892 * float(x[1349])))+ ((0.80381316 * float(x[1350]))+ (-0.14406388 * float(x[1351]))+ (0.1137332 * float(x[1352]))+ (0.2287066 * float(x[1353]))+ (-0.45788178 * float(x[1354]))+ (0.14363271 * float(x[1355]))+ (0.09955344 * float(x[1356]))+ (0.91145915 * float(x[1357]))+ (0.8852728 * float(x[1358]))+ (0.41943133 * float(x[1359]))+ (-0.496216 * float(x[1360]))+ (-0.41026416 * float(x[1361]))+ (-0.15237407 * float(x[1362]))+ (-0.3423997 * float(x[1363]))+ (-0.8772619 * float(x[1364]))+ (-0.08970686 * float(x[1365]))+ (0.020440858 * float(x[1366]))+ (-0.9807983 * float(x[1367]))+ (0.26702067 * float(x[1368]))+ (-0.8010157 * float(x[1369]))+ (-0.770976 * float(x[1370]))+ (-0.7104634 * float(x[1371]))+ (-0.63442445 * float(x[1372]))+ (-0.24008852 * float(x[1373]))+ (-0.64909136 * float(x[1374]))+ (-0.5369993 * float(x[1375]))+ (-0.6549848 * float(x[1376]))+ (-0.8239725 * float(x[1377]))+ (-0.39690432 * float(x[1378]))+ (-0.7482672 * float(x[1379]))+ (0.19719048 * float(x[1380]))+ (-0.25059652 * float(x[1381]))+ (-0.81124675 * float(x[1382]))+ (-0.40627834 * float(x[1383]))+ (-0.9354588 * float(x[1384]))+ (0.5212718 * float(x[1385]))+ (0.32585555 * float(x[1386]))+ (-0.4777812 * float(x[1387]))+ (0.16172743 * float(x[1388]))+ (0.4257996 * float(x[1389]))+ (-0.4616275 * float(x[1390]))+ (0.8420641 * float(x[1391]))+ (0.8900703 * float(x[1392]))+ (0.29688647 * float(x[1393]))+ (-0.500909 * float(x[1394]))+ (0.44467553 * float(x[1395]))+ (0.77441823 * float(x[1396]))+ (0.39652082 * float(x[1397]))+ (0.2527438 * float(x[1398]))+ (0.13880396 * float(x[1399])))+ ((-0.49604902 * float(x[1400]))+ (-0.45909932 * float(x[1401]))+ (-0.092809156 * float(x[1402]))+ (0.79994786 * float(x[1403]))+ (-0.8792037 * float(x[1404]))+ (-0.22590315 * float(x[1405]))+ (-0.9819112 * float(x[1406]))+ (0.009748872 * float(x[1407]))+ (0.20909244 * float(x[1408]))+ (0.43487048 * float(x[1409]))+ (0.8734681 * float(x[1410]))+ (0.071772315 * float(x[1411]))+ (0.6481932 * float(x[1412]))+ (0.22627507 * float(x[1413]))+ (0.68154323 * float(x[1414]))+ (0.7624593 * float(x[1415]))+ (-0.637475 * float(x[1416]))+ (0.99139935 * float(x[1417]))+ (0.70152104 * float(x[1418]))+ (-0.7182095 * float(x[1419]))+ (0.7157272 * float(x[1420]))+ (-0.7079713 * float(x[1421]))+ (0.70106953 * float(x[1422]))+ (-0.6773534 * float(x[1423]))+ (0.1978508 * float(x[1424]))+ (0.56100506 * float(x[1425]))+ (-0.01693515 * float(x[1426]))+ (-0.5268492 * float(x[1427]))+ (-0.021166926 * float(x[1428]))+ (0.744687 * float(x[1429]))+ (-0.4686198 * float(x[1430]))+ (-0.5384773 * float(x[1431]))+ (-0.097232655 * float(x[1432]))+ (-0.4070343 * float(x[1433]))+ (0.615166 * float(x[1434]))+ (0.6750101 * float(x[1435]))+ (-0.9625322 * float(x[1436]))+ (0.3338465 * float(x[1437]))+ (0.12203412 * float(x[1438]))+ (-0.99990743 * float(x[1439]))+ (-0.28558758 * float(x[1440]))+ (-0.9300452 * float(x[1441]))+ (-0.67155963 * float(x[1442]))+ (-0.7073883 * float(x[1443]))+ (0.6493978 * float(x[1444]))+ (0.80841285 * float(x[1445]))+ (0.093066275 * float(x[1446]))+ (0.83847743 * float(x[1447]))+ (0.4641474 * float(x[1448]))+ (-0.37727854 * float(x[1449])))+ ((0.5950223 * float(x[1450]))+ (0.67175454 * float(x[1451]))+ (0.024369912 * float(x[1452]))+ (-0.6132141 * float(x[1453]))+ (-0.857919 * float(x[1454]))+ (0.279516 * float(x[1455]))+ (-0.6346323 * float(x[1456]))+ (0.79663455 * float(x[1457]))+ (0.081798516 * float(x[1458]))+ (-0.50566655 * float(x[1459]))+ (-0.8732661 * float(x[1460]))+ (0.2272447 * float(x[1461]))+ (-0.18828647 * float(x[1462]))+ (-0.49235144 * float(x[1463]))+ (-0.14605731 * float(x[1464]))+ (0.6722183 * float(x[1465]))+ (0.3350618 * float(x[1466]))+ (-0.83530545 * float(x[1467]))+ (0.38386554 * float(x[1468]))+ (0.88163006 * float(x[1469]))+ (0.91353035 * float(x[1470]))+ (-0.54301333 * float(x[1471]))+ (0.18248276 * float(x[1472]))+ (0.13161914 * float(x[1473]))+ (0.6093559 * float(x[1474]))+ (0.26474118 * float(x[1475]))+ (-0.23395896 * float(x[1476]))+ (0.41205934 * float(x[1477]))+ (0.6216291 * float(x[1478]))+ (-0.5512076 * float(x[1479]))+ (0.9251541 * float(x[1480]))+ (-0.92178255 * float(x[1481]))+ (0.58121425 * float(x[1482]))+ (-0.34265578 * float(x[1483]))+ (-0.3320499 * float(x[1484]))+ (0.18568307 * float(x[1485]))+ (0.78026503 * float(x[1486]))+ (0.8564141 * float(x[1487]))+ (-0.32378265 * float(x[1488]))+ (0.2951113 * float(x[1489]))+ (0.4379214 * float(x[1490]))+ (0.46868736 * float(x[1491]))+ (-0.6970207 * float(x[1492]))+ (0.6306795 * float(x[1493]))+ (-0.13370454 * float(x[1494]))+ (0.33940446 * float(x[1495]))+ (-0.43023422 * float(x[1496]))+ (-0.41145208 * float(x[1497]))+ (0.43772814 * float(x[1498]))+ (-0.6368416 * float(x[1499])))+ ((-0.75021434 * float(x[1500]))+ (0.4439572 * float(x[1501]))+ (0.64789766 * float(x[1502]))+ (-0.35396832 * float(x[1503]))+ (0.73020667 * float(x[1504]))+ (0.58748835 * float(x[1505]))+ (0.9744515 * float(x[1506]))+ (0.39270908 * float(x[1507]))+ (-0.07835173 * float(x[1508]))+ (-0.61943406 * float(x[1509]))+ (0.46613303 * float(x[1510]))+ (0.63608795 * float(x[1511]))+ (0.6480254 * float(x[1512]))+ (-0.054984525 * float(x[1513]))+ (-0.6213705 * float(x[1514]))+ (0.34819964 * float(x[1515]))+ (0.30917537 * float(x[1516]))+ (-0.7144268 * float(x[1517]))+ (0.35042363 * float(x[1518]))+ (-0.36615413 * float(x[1519]))+ (0.8420513 * float(x[1520]))+ (-0.6802677 * float(x[1521]))+ (-0.076559 * float(x[1522]))+ (0.67406833 * float(x[1523]))+ (-0.8330397 * float(x[1524]))+ (-0.12338907 * float(x[1525]))+ (-0.37251633 * float(x[1526]))+ (0.63201374 * float(x[1527]))+ (0.17207244 * float(x[1528]))+ (-0.13530101 * float(x[1529]))+ (-0.28952175 * float(x[1530]))+ (0.41614527 * float(x[1531]))+ (-0.85335815 * float(x[1532]))+ (0.5903176 * float(x[1533]))+ (0.54503644 * float(x[1534]))+ (-0.18005772 * float(x[1535]))+ (0.023112176 * float(x[1536]))+ (0.98711824 * float(x[1537]))+ (-0.6793377 * float(x[1538]))+ (-0.6410451 * float(x[1539]))+ (0.40969363 * float(x[1540]))+ (-0.6406031 * float(x[1541]))+ (0.5499999 * float(x[1542]))+ (0.4476769 * float(x[1543]))+ (-0.5368686 * float(x[1544]))+ (-0.2702811 * float(x[1545]))+ (-0.7227823 * float(x[1546]))+ (0.8878584 * float(x[1547]))+ (0.3750822 * float(x[1548]))+ (-0.51701504 * float(x[1549])))+ ((-0.71324164 * float(x[1550]))+ (-0.8343112 * float(x[1551]))+ (-0.47805542 * float(x[1552]))+ (0.006691653 * float(x[1553]))+ (-0.9562114 * float(x[1554]))+ (0.1052306 * float(x[1555]))+ (0.12172787 * float(x[1556]))+ (-0.5788501 * float(x[1557]))+ (-0.9804306 * float(x[1558]))+ (-0.089312755 * float(x[1559]))+ (0.036005184 * float(x[1560]))+ (0.8843827 * float(x[1561]))+ (-0.94663787 * float(x[1562]))+ (0.14677143 * float(x[1563]))+ (0.99908024 * float(x[1564]))+ (-0.76025975 * float(x[1565]))+ (-0.33633354 * float(x[1566]))+ (0.056024242 * float(x[1567]))+ (-0.94537747 * float(x[1568]))+ (0.49321547 * float(x[1569]))+ (0.9125193 * float(x[1570]))+ (0.010151804 * float(x[1571]))+ (0.3143363 * float(x[1572]))+ (-0.35114783 * float(x[1573]))+ (-0.23807418 * float(x[1574]))+ (-0.03367274 * float(x[1575]))+ (-0.3160892 * float(x[1576]))+ (-0.32652214 * float(x[1577]))+ (-0.89080817 * float(x[1578]))+ (0.10998443 * float(x[1579]))+ (-0.96106106 * float(x[1580]))+ (0.70663047 * float(x[1581]))+ (-0.46669462 * float(x[1582]))+ (0.4637904 * float(x[1583]))+ (-0.92544377 * float(x[1584]))+ (-0.0150029 * float(x[1585]))+ (0.43620846 * float(x[1586]))+ (-0.7282913 * float(x[1587]))+ (0.7694321 * float(x[1588]))+ (-0.031505063 * float(x[1589]))+ (0.68323433 * float(x[1590]))+ (-0.6787191 * float(x[1591]))+ (-0.19440956 * float(x[1592]))+ (-0.68423045 * float(x[1593]))+ (0.081690684 * float(x[1594]))+ (-0.38504344 * float(x[1595]))+ (-0.036386188 * float(x[1596]))+ (0.13687651 * float(x[1597]))+ (-0.12986708 * float(x[1598]))+ (0.40380034 * float(x[1599])))+ ((-0.078478254 * float(x[1600]))+ (0.12640266 * float(x[1601]))+ (-0.55556744 * float(x[1602]))+ (0.92020446 * float(x[1603]))+ (-0.38774845 * float(x[1604]))+ (-0.19184312 * float(x[1605]))+ (-0.12618868 * float(x[1606]))+ (0.71763366 * float(x[1607]))+ (0.96502113 * float(x[1608]))+ (0.82084674 * float(x[1609]))+ (-0.13084568 * float(x[1610]))+ (0.27768186 * float(x[1611]))+ (-0.0469186 * float(x[1612]))+ (-0.6317963 * float(x[1613]))+ (-0.81964993 * float(x[1614]))+ (-0.2925375 * float(x[1615]))+ (0.7436785 * float(x[1616]))+ (0.12333264 * float(x[1617]))+ (-0.64372194 * float(x[1618]))+ (0.14003883 * float(x[1619]))+ (-0.22054632 * float(x[1620]))+ (0.20937192 * float(x[1621]))+ (0.15454818 * float(x[1622]))+ (-0.84421545 * float(x[1623]))+ (-0.7219608 * float(x[1624]))+ (0.9722951 * float(x[1625]))+ (-0.14572509 * float(x[1626]))+ (-0.7624074 * float(x[1627]))+ (-0.84435654 * float(x[1628]))+ (-0.32350245 * float(x[1629]))+ (0.025818441 * float(x[1630]))+ (0.59855324 * float(x[1631]))+ (-0.6367079 * float(x[1632]))+ (-0.691587 * float(x[1633]))+ (0.052391555 * float(x[1634]))+ (-0.70159036 * float(x[1635]))+ (0.39423615 * float(x[1636]))+ (-0.7210677 * float(x[1637]))+ (0.36875814 * float(x[1638]))+ (0.8811744 * float(x[1639]))+ (-0.19875374 * float(x[1640]))+ (-0.74048746 * float(x[1641]))+ (0.9616683 * float(x[1642]))+ (0.12144887 * float(x[1643]))+ (0.2635352 * float(x[1644]))+ (0.64160454 * float(x[1645]))+ (0.38887 * float(x[1646]))+ (-0.11945161 * float(x[1647]))+ (0.029125113 * float(x[1648]))+ (0.112154685 * float(x[1649])))+ ((-0.10927918 * float(x[1650]))+ (0.4195722 * float(x[1651]))+ (-0.06897812 * float(x[1652]))+ (-0.5456731 * float(x[1653]))+ (-0.4725352 * float(x[1654]))+ (0.70730615 * float(x[1655]))+ (-0.709728 * float(x[1656]))+ (-0.47585303 * float(x[1657]))+ (0.390348 * float(x[1658]))+ (-0.957888 * float(x[1659]))+ (0.6011975 * float(x[1660]))+ (0.17443438 * float(x[1661]))+ (-0.4858725 * float(x[1662]))+ (-0.23131977 * float(x[1663]))+ (0.17136116 * float(x[1664]))+ (-0.09304426 * float(x[1665]))+ (0.8417586 * float(x[1666]))+ (0.90547025 * float(x[1667]))+ (-0.43353033 * float(x[1668]))+ (-0.8808023 * float(x[1669]))+ (-0.5842096 * float(x[1670]))+ (-0.8330487 * float(x[1671]))+ (-0.34934017 * float(x[1672]))+ (0.3656247 * float(x[1673]))+ (0.71131235 * float(x[1674]))+ (0.17394319 * float(x[1675]))+ (0.10747079 * float(x[1676]))+ (0.022262096 * float(x[1677]))+ (0.3114601 * float(x[1678]))+ (-0.51983327 * float(x[1679]))+ (0.020483866 * float(x[1680]))+ (0.46306697 * float(x[1681]))+ (-0.096115336 * float(x[1682]))+ (0.24299447 * float(x[1683]))+ (0.8847508 * float(x[1684]))+ (-0.95576835 * float(x[1685]))+ (0.13105154 * float(x[1686]))+ (-0.03781337 * float(x[1687]))+ (0.92316175 * float(x[1688]))+ (-0.35672662 * float(x[1689]))+ (0.9524566 * float(x[1690]))+ (0.98784393 * float(x[1691]))+ (0.33786607 * float(x[1692]))+ (0.3201627 * float(x[1693]))+ (0.37026548 * float(x[1694]))+ (0.79310864 * float(x[1695]))+ (0.7856756 * float(x[1696]))+ (0.41228235 * float(x[1697]))+ (0.8083441 * float(x[1698]))+ (0.44725353 * float(x[1699])))+ ((0.42697522 * float(x[1700]))+ (0.92549527 * float(x[1701]))+ (-0.4961607 * float(x[1702]))+ (-0.005035072 * float(x[1703]))+ (0.17680177 * float(x[1704]))+ (0.78001195 * float(x[1705]))+ (0.07100805 * float(x[1706]))+ (0.96150094 * float(x[1707]))+ (0.626962 * float(x[1708]))+ (0.24746718 * float(x[1709]))+ (0.2667325 * float(x[1710]))+ (-0.75263953 * float(x[1711]))+ (0.39452976 * float(x[1712]))+ (0.62668604 * float(x[1713]))+ (-0.256936 * float(x[1714]))+ (0.2454012 * float(x[1715]))+ (-0.04916519 * float(x[1716]))+ (0.5357782 * float(x[1717]))+ (-0.97036594 * float(x[1718]))+ (-0.8984017 * float(x[1719]))+ (-0.054094587 * float(x[1720]))+ (0.26821443 * float(x[1721]))+ (-0.8530221 * float(x[1722]))+ (0.4318106 * float(x[1723]))+ (0.27688345 * float(x[1724]))+ (0.060071427 * float(x[1725]))+ (0.040579997 * float(x[1726]))+ (0.37242487 * float(x[1727]))+ (0.057165213 * float(x[1728]))+ (0.33568332 * float(x[1729]))+ (-0.20117426 * float(x[1730]))+ (0.30269516 * float(x[1731]))+ (-0.3349798 * float(x[1732]))+ (0.90921205 * float(x[1733]))+ (0.77096695 * float(x[1734]))+ (-0.10971299 * float(x[1735]))+ (0.74486345 * float(x[1736]))+ (0.45962095 * float(x[1737]))+ (0.7596623 * float(x[1738]))+ (0.76019627 * float(x[1739]))+ (-0.76606715 * float(x[1740]))+ (-0.27933234 * float(x[1741]))+ (0.71890527 * float(x[1742]))+ (-0.24342781 * float(x[1743]))+ (0.020936383 * float(x[1744]))+ (0.9808321 * float(x[1745]))+ (0.9291622 * float(x[1746]))+ (-0.093495525 * float(x[1747]))+ (0.03324407 * float(x[1748]))+ (-0.6475469 * float(x[1749])))+ ((0.5117927 * float(x[1750]))+ (-0.4063084 * float(x[1751]))+ (0.4368396 * float(x[1752]))+ (-0.77972347 * float(x[1753]))+ (0.8842286 * float(x[1754]))+ (-0.8127426 * float(x[1755]))+ (0.9538293 * float(x[1756]))+ (-0.08719439 * float(x[1757]))+ (0.43893215 * float(x[1758]))+ (-0.38393903 * float(x[1759]))+ (-0.44659233 * float(x[1760]))+ (0.15151297 * float(x[1761]))+ (0.5679667 * float(x[1762]))+ (0.8589909 * float(x[1763]))+ (0.989109 * float(x[1764]))+ (0.003216328 * float(x[1765]))+ (-0.07498485 * float(x[1766]))+ (0.5043493 * float(x[1767]))+ (0.55385107 * float(x[1768]))+ (-0.5678479 * float(x[1769]))+ (-0.06137938 * float(x[1770]))+ (0.517097 * float(x[1771]))+ (0.15178737 * float(x[1772]))+ (-0.99568766 * float(x[1773]))+ (0.59491354 * float(x[1774]))+ (0.73076224 * float(x[1775]))) + -0.145933), 0)
    o_0 = (-4.6718187 * h_0)+ (-0.38107598 * h_1) + 0.99059737
             
    if num_output_logits==1:
        return o_0>=0
    else:
        return argmax([eval('o'+str(i)) for i in range(num_output_logits)])

# Main method
if __name__ == "__main__":
    parser = argparse.ArgumentParser(description='Predictor trained on '+TRAINFILE)
    parser.add_argument('csvfile', type=str, help='CSV file containing test set (unlabeled).')
    parser.add_argument('-validate', action='store_true', help='Validation mode. csvfile must be labeled. Output is classification statistics rather than predictions.')
    parser.add_argument('-cleanfile',action='store_true',help='Use this flag to save prediction time if the csvfile you are passing has already been preprocessed. Implies headerless.')
    parser.add_argument('-headerless', help='Do not treat the first line of csvfile as a header.', action='store_true')
    args = parser.parse_args()

    if not args.validate: # Then predict
        if args.cleanfile:
            with open(args.csvfile,'r') as cleancsvfile:
                cleancsvreader = csv.reader(cleancsvfile)
                for cleanrow in cleancsvreader:
                    if len(cleanrow)==0:
                        continue
                print(str(','.join(str(j) for j in ([i for i in cleanrow])))+','+str(int(classify(cleanrow))))
        else:
            tempdir=tempfile.gettempdir()
            cleanfile=tempdir+os.sep+"clean.csv"
            clean(args.csvfile,cleanfile, -1, args.headerless, True)
            with open(cleanfile,'r') as cleancsvfile, open(args.csvfile,'r') as dirtycsvfile:
                cleancsvreader = csv.reader(cleancsvfile)
                dirtycsvreader = csv.reader(dirtycsvfile)
                if (not args.headerless):
                        print(','.join(next(dirtycsvreader, None)+['Prediction']))
                for cleanrow,dirtyrow in zip(cleancsvreader,dirtycsvreader):
                    if len(cleanrow)==0:
                        continue
                    print(str(','.join(str(j) for j in ([i for i in dirtyrow])))+','+str(int(classify(cleanrow))))
            os.remove(cleanfile)
            
    else: # Then validate this predictor
        tempdir=tempfile.gettempdir()
        temp_name = next(tempfile._get_candidate_names())
        cleanvalfile=tempdir+os.sep+temp_name
        clean(args.csvfile,cleanvalfile, -1, args.headerless)
        with open(cleanvalfile,'r') as valcsvfile:
            count,correct_count,num_TP,num_TN,num_FP,num_FN,num_class_1,num_class_0=0,0,0,0,0,0,0,0
            valcsvreader = csv.reader(valcsvfile)
            for valrow in valcsvreader:
                if len(valrow)==0:
                    continue
                if int(classify(valrow[:-1]))==int(float(valrow[-1])):
                    correct_count+=1
                    if int(float(valrow[-1]))==1:
                        num_class_1+=1
                        num_TP+=1
                    else:
                        num_class_0+=1
                        num_TN+=1
                else:
                    if int(float(valrow[-1]))==1:
                        num_class_1+=1
                        num_FN+=1
                    else:
                        num_class_0+=1
                        num_FP+=1
                count+=1

        model_cap=3557

        FN=float(num_FN)*100.0/float(count)
        FP=float(num_FP)*100.0/float(count)
        TN=float(num_TN)*100.0/float(count)
        TP=float(num_TP)*100.0/float(count)
        num_correct=correct_count

        if int(num_TP+num_FN)!=0:
            TPR=num_TP/(num_TP+num_FN) # Sensitivity, Recall
        if int(num_TN+num_FP)!=0:
            TNR=num_TN/(num_TN+num_FP) # Specificity, 
        if int(num_TP+num_FP)!=0:
            PPV=num_TP/(num_TP+num_FP) # Recall
        if int(num_FN+num_TP)!=0:
            FNR=num_FN/(num_FN+num_TP) # Miss rate
        if int(2*num_TP+num_FP+num_FN)!=0:
            FONE=2*num_TP/(2*num_TP+num_FP+num_FN) # F1 Score
        if int(num_TP+num_FN+num_FP)!=0:
            TS=num_TP/(num_TP+num_FN+num_FP) # Critical Success Index

        randguess=int(float(10000.0*max(num_class_1,num_class_0))/count)/100.0
        modelacc=int(float(num_correct*10000)/count)/100.0

        print("System Type:                        Binary classifier")
        print("Best-guess accuracy:                {:.2f}%".format(randguess))
        print("Model accuracy:                     {:.2f}%".format(modelacc)+" ("+str(int(num_correct))+"/"+str(count)+" correct)")
        print("Improvement over best guess:        {:.2f}%".format(modelacc-randguess)+" (of possible "+str(round(100-randguess,2))+"%)")
        print("Model capacity (MEC):               {:.0f} bits".format(model_cap))
        print("Generalization ratio:               {:.2f}".format(int(float(num_correct*100)/model_cap)/100.0)+" bits/bit")
        print("Model efficiency:                   {:.2f}%/parameter".format(int(100*(modelacc-randguess)/model_cap)/100.0))
        print("System behavior")
        print("True Negatives:                     {:.2f}%".format(TN)+" ("+str(int(num_TN))+"/"+str(count)+")")
        print("True Positives:                     {:.2f}%".format(TP)+" ("+str(int(num_TP))+"/"+str(count)+")")
        print("False Negatives:                    {:.2f}%".format(FN)+" ("+str(int(num_FN))+"/"+str(count)+")")
        print("False Positives:                    {:.2f}%".format(FP)+" ("+str(int(num_FP))+"/"+str(count)+")")
        if int(num_TP+num_FN)!=0:
            print("True Pos. Rate/Sensitivity/Recall:  {:.2f}".format(TPR))
        if int(num_TN+num_FP)!=0:
            print("True Neg. Rate/Specificity:         {:.2f}".format(TNR))
        if int(num_TP+num_FP)!=0:
            print("Precision:                          {:.2f}".format(PPV))
        if int(2*num_TP+num_FP+num_FN)!=0:
            print("F-1 Measure:                        {:.2f}".format(FONE))
        if int(num_TP+num_FN)!=0:
            print("False Negative Rate/Miss Rate:      {:.2f}".format(FNR))
        if int(num_TP+num_FN+num_FP)!=0:    
            print("Critical Success Index:             {:.2f}".format(TS))


        os.remove(cleanvalfile)

